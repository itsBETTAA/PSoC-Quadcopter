ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"batteryMonitor.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.i2cWriteBytes,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	i2cWriteBytes, %function
  22              	i2cWriteBytes:
  23              	.LFB90:
  24              		.file 1 "..\\..\\..\\..\\PSoC Basestation\\Battery_Babysitter\\src\\batteryMonitor.c"
   1:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /******************************************************************************
   2:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** SparkFunBQ27441.cpp
   3:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** BQ27441 Arduino Library Main Source File
   4:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** Jim Lindblom @ SparkFun Electronics
   5:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** May 9, 2016
   6:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** https://github.com/sparkfun/SparkFun_BQ27441_Arduino_Library
   7:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
   8:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** Implementation of all features of the BQ27441 LiPo Fuel Gauge.
   9:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
  10:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** Hardware Resources:
  11:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** - Arduino Development Board
  12:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** - SparkFun Battery Babysitter
  13:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
  14:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** Development environment specifics:
  15:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** Arduino 1.6.7
  16:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** SparkFun Battery Babysitter v1.0
  17:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** Arduino Uno (any 'duino should do)
  18:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** ******************************************************************************/
  19:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
  20:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** #include "project.h"
  21:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** #include <stdlib.h>
  22:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** #include <stdio.h>
  23:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** #include <stdint.h>
  24:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** #include "batteryMonitor.h"
  25:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** #include <mySerial.h>
  26:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** #include "BQ27441_Definitions.h"
  27:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
  28:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****  //================================================================================================
  29:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
  30:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** #define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))
  31:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
  32:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /*****************************************************************************
  33:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****  ***************Initialization static (private) Functions ********************
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 2


  34:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****  *****************************************************************************/
  35:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
  36:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 						 // entering/exiting config
  37:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
  38:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
  39:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Check if the BQ27441-G1A is sealed or not.
  40:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
  41:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return true if the chip is sealed
  42:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
  43:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool sealed(void);
  44:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
  45:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
  46:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Seal the BQ27441-G1A
  47:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
  48:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return true on success
  49:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
  50:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool seal(void);
  51:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
  52:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
  53:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    UNseal the BQ27441-G1A
  54:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
  55:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return true on success
  56:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
  57:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool unseal(void);
  58:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
  59:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
  60:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Read the 16-bit opConfig register from extended data
  61:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
  62:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return opConfig register contents
  63:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
  64:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static uint16_t opConfig(void);
  65:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
  66:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
  67:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Write the 16-bit opConfig register in extended data
  68:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
  69:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@param New 16-bit value for opConfig
  70:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return true on success
  71:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
  72:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool writeOpConfig(uint16_t value);
  73:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
  74:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
  75:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Issue a soft-reset to the BQ27441-G1A
  76:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
  77:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return true on success
  78:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
  79:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool softReset(void);
  80:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
  81:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
  82:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Read a 16-bit command word from the BQ27441-G1A
  83:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
  84:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@param subAddress is the command to be read from
  85:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return 16-bit value of the command's contents
  86:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
  87:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static uint16_t readWord(uint16_t subAddress);
  88:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
  89:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
  90:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Read a 16-bit subcommand() from the BQ27441-G1A's control()
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 3


  91:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
  92:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@param function is the subcommand of control() to be read
  93:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return 16-bit value of the subcommand's contents
  94:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
  95:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static uint16_t readControlWord(uint16_t function);
  96:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
  97:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
  98:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Execute a subcommand() from the BQ27441-G1A's control()
  99:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
 100:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@param function is the subcommand of control() to be executed
 101:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return true on success
 102:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
 103:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool executeControlWord(uint16_t function);
 104:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 105:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** ////////////////////////////
 106:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Extended Data Commands //
 107:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** ////////////////////////////
 108:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
 109:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Issue a BlockDataControl() command to enable BlockData access
 110:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
 111:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return true on success
 112:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
 113:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool blockDataControl(void);
 114:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 115:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
 116:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Issue a DataClass() command to set the data class to be accessed
 117:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
 118:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@param id is the id number of the class
 119:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return true on success
 120:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
 121:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool blockDataClass(uint8_t id);
 122:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 123:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
 124:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Issue a DataBlock() command to set the data block to be accessed
 125:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
 126:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@param offset of the data block
 127:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return true on success
 128:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
 129:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool blockDataOffset(uint8_t offset);
 130:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 131:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
 132:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Read the current checksum using BlockDataCheckSum()
 133:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
 134:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return true on success
 135:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
 136:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static uint8_t blockDataChecksum(void);
 137:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 138:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
 139:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Use BlockData() to read a byte from the loaded extended data
 140:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
 141:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@param offset of data block byte to be read
 142:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return true on success
 143:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
 144:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static uint8_t readBlockData(uint8_t offset);
 145:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 146:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
 147:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Use BlockData() to write a byte to an offset of the loaded data
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 4


 148:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
 149:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@param offset is the position of the byte to be written
 150:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		       data is the value to be written
 151:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return true on success
 152:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
 153:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool writeBlockData(uint8_t offset, uint8_t data);
 154:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 155:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
 156:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Read all 32 bytes of the loaded extended data and compute a 
 157:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		checksum based on the values.
 158:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
 159:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return 8-bit checksum value calculated based on loaded data
 160:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
 161:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static uint8_t computeBlockChecksum(void);
 162:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 163:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
 164:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Use the BlockDataCheckSum() command to write a checksum value
 165:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
 166:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@param csum is the 8-bit checksum to be written
 167:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return true on success
 168:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
 169:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool writeBlockChecksum(uint8_t csum);
 170:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 171:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
 172:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Read a byte from extended data specifying a class ID and position offset
 173:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
 174:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@param classID is the id of the class to be read from
 175:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		       offset is the byte position of the byte to be read
 176:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return 8-bit value of specified data
 177:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
 178:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static uint8_t readExtendedData(uint8_t classID, uint8_t offset);
 179:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 180:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
 181:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Write a specified number of bytes to extended data specifying a 
 182:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		class ID, position offset.
 183:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
 184:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@param classID is the id of the class to be read from
 185:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		       offset is the byte position of the byte to be read
 186:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 			   data is the data buffer to be written
 187:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 			   len is the number of bytes to be written
 188:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return true on success
 189:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
 190:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool writeExtendedData(uint8_t classID, uint8_t offset, uint8_t *data, uint8_t len);
 191:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 192:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /////////////////////////////////
 193:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // I2C Read and Write Routines //
 194:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /////////////////////////////////
 195:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 196:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
 197:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Read a specified number of bytes over I2C at a given subAddress
 198:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
 199:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@param subAddress is the 8-bit address of the data to be read
 200:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		       dest is the data buffer to be written to
 201:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 			   count is the number of bytes to be read
 202:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return true on success
 203:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
 204:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static int16_t i2cReadBytes(uint8_t subAddress, uint8_t *dest, uint8_t count);
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 5


 205:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 206:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /**
 207:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    Write a specified number of bytes over I2C to a given subAddress
 208:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		
 209:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@param subAddress is the 8-bit address of the data to be written to
 210:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		       src is the data buffer to be written
 211:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 			   count is the number of bytes to be written
 212:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		@return true on success
 213:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
 214:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static uint16_t i2cWriteBytes(uint8_t subAddress, uint8_t *src, uint8_t count);
 215:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 216:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** //=================================================================================================
 217:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 218:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /*****************************************************************************
 219:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****  ************************** Initialization Functions *************************
 220:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****  *****************************************************************************/
 221:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Initializes variables
 222:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 223:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 224:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static uint8_t _deviceAddress = BQ72441_I2C_ADDRESS;  // Stores the BQ27441-G1A's I2C address
 225:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool _sealFlag = false;			 // Global to identify that IC was previously sealed
 226:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool _userConfigControl = false; // Global to identify that user has control over
 227:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 228:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Initializes I2C and verifies communication with the BQ27441.
 229:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** bool lipo_begin(void)
 230:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 231:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t deviceID = 0;
 232:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 233:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	I2C_Start(); // Initialize I2C master
 234:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 235:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	deviceID = lipo_deviceType(); // Read deviceType from BQ27441
 236:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 237:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (deviceID == BQ27441_DEVICE_ID)
 238:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	{
 239:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return true; // If device ID is valid, return true
 240:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	}
 241:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 242:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return false; // Otherwise return false
 243:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 244:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 245:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Configures the design capacity of the connected battery.
 246:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** bool lipo_setCapacity(uint16_t capacity)
 247:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 248:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	// Write to STATE subclass (82) of BQ27441 extended memory.
 249:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	// Offset 0x0A (10)
 250:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	// Design capacity is a 2-byte piece of data - MSB first
 251:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t capMSB = capacity >> 8;
 252:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t capLSB = capacity & 0x00FF;
 253:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t capacityData[2] = {capMSB, capLSB};
 254:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return writeExtendedData(BQ27441_ID_STATE, 10, capacityData, 2);
 255:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 256:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 257:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /*****************************************************************************
 258:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****  ********************** Battery Characteristics Functions ********************
 259:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****  *****************************************************************************/
 260:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 261:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Reads and returns the battery voltage
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 6


 262:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** uint16_t lipo_voltage(void)
 263:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 264:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readWord(BQ27441_COMMAND_VOLTAGE);
 265:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 266:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 267:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Reads and returns the specified current measurement
 268:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** current_measure current_measure_type = AVG;
 269:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** void set_lipo_current_arg(current_measure userInput){
 270:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	current_measure_type  = userInput;
 271:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 272:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 273:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** int16_t lipo_current()
 274:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 275:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	int16_t current = 0;
 276:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	switch (current_measure_type)
 277:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	{
 278:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	case AVG:
 279:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		current = (int16_t)readWord(BQ27441_COMMAND_AVG_CURRENT);
 280:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 281:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	case STBY:
 282:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		current = (int16_t)readWord(BQ27441_COMMAND_STDBY_CURRENT);
 283:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 284:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	case MAX:
 285:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		current = (int16_t)readWord(BQ27441_COMMAND_MAX_CURRENT);
 286:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 287:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	}
 288:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 289:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return current;
 290:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 291:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 292:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Reads and returns the specified capacity measurement
 293:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** capacity_measure capacity_measure_type = REMAIN;
 294:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** void set_lipo_capacity_arg(capacity_measure userInput){
 295:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	capacity_measure_type = userInput;
 296:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 297:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** uint16_t lipo_capacity()
 298:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 299:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t capacity = 0;
 300:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	switch (capacity_measure_type)
 301:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	{
 302:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	case REMAIN:
 303:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return readWord(BQ27441_COMMAND_REM_CAPACITY);
 304:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 305:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	case FULL:
 306:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return readWord(BQ27441_COMMAND_FULL_CAPACITY);
 307:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 308:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	case AVAIL:
 309:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		capacity = readWord(BQ27441_COMMAND_NOM_CAPACITY);
 310:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 311:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	case AVAIL_FULL:
 312:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		capacity = readWord(BQ27441_COMMAND_AVAIL_CAPACITY);
 313:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 314:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	case REMAIN_F:
 315:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		capacity = readWord(BQ27441_COMMAND_REM_CAP_FIL);
 316:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 317:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	case REMAIN_UF:
 318:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		capacity = readWord(BQ27441_COMMAND_REM_CAP_UNFL);
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 7


 319:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 320:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	case FULL_F:
 321:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		capacity = readWord(BQ27441_COMMAND_FULL_CAP_FIL);
 322:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 323:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	case FULL_UF:
 324:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		capacity = readWord(BQ27441_COMMAND_FULL_CAP_UNFL);
 325:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 326:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	case DESIGN:
 327:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		capacity = readWord(BQ27441_EXTENDED_CAPACITY);
 328:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	}
 329:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 330:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return capacity;
 331:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 332:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 333:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Reads and returns measured average power
 334:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** int16_t lipo_power(void)
 335:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 336:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return (int16_t)readWord(BQ27441_COMMAND_AVG_POWER);
 337:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 338:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 339:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Reads and returns specified state of charge measurement
 340:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** soc_measure soc_measure_type = FILTERED;
 341:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** void set_lipo_soc_arg(soc_measure userInput){
 342:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	soc_measure_type = userInput;
 343:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 344:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** uint16_t lipo_soc()
 345:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 346:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t socRet = 0;
 347:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	switch (soc_measure_type)
 348:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	{
 349:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	case FILTERED:
 350:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		socRet = readWord(BQ27441_COMMAND_SOC);
 351:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 352:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	case UNFILTERED:
 353:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		socRet = readWord(BQ27441_COMMAND_SOC_UNFL);
 354:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 355:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	}
 356:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 357:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return socRet;
 358:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 359:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 360:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Reads and returns specified state of health measurement
 361:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** soh_measure soh_measure_type = PERCENT;
 362:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** void set_lipo_soh_arg(soh_measure userInput){
 363:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	soh_measure_type = userInput;
 364:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 365:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** uint8_t lipo_soh()
 366:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 367:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t sohRaw = readWord(BQ27441_COMMAND_SOH);
 368:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t sohStatus = sohRaw >> 8;
 369:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t sohPercent = sohRaw & 0x00FF;
 370:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 371:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (soh_measure_type == PERCENT)
 372:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return sohPercent;
 373:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	else
 374:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return sohStatus;
 375:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 8


 376:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 377:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Reads and returns specified temperature measurement
 378:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** temp_measure temp_measure_type = BATTERY;
 379:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** void set_lipo_temperature_arg(temp_measure userInput){
 380:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	temp_measure_type = userInput;
 381:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 382:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** uint16_t lipo_temperature()
 383:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 384:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t temp = 0;
 385:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	switch (temp_measure_type)
 386:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	{
 387:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	case BATTERY:
 388:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		temp = readWord(BQ27441_COMMAND_TEMP);
 389:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 390:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	case INTERNAL_TEMP:
 391:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		temp = readWord(BQ27441_COMMAND_INT_TEMP);
 392:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 393:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	}
 394:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return temp;
 395:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 396:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 397:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /*****************************************************************************
 398:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****  ************************** GPOUT Control Functions **************************
 399:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****  *****************************************************************************/
 400:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Get GPOUT polarity setting (active-high or active-low)
 401:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** bool lipo_GPOUTPolarity(void)
 402:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 403:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t opConfigRegister = opConfig();
 404:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 405:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return (opConfigRegister & BQ27441_OPCONFIG_GPIOPOL);
 406:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 407:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 408:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Set GPOUT polarity to active-high or active-low
 409:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** bool lipo_setGPOUTPolarity(bool activeHigh)
 410:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 411:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t oldOpConfig = opConfig();
 412:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 413:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	// Check to see if we need to update opConfig:
 414:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if ((activeHigh && (oldOpConfig & BQ27441_OPCONFIG_GPIOPOL)) ||
 415:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		(!activeHigh && !(oldOpConfig & BQ27441_OPCONFIG_GPIOPOL)))
 416:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return true;
 417:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 418:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t newOpConfig = oldOpConfig;
 419:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (activeHigh)
 420:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		newOpConfig |= BQ27441_OPCONFIG_GPIOPOL;
 421:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	else
 422:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		newOpConfig &= ~(BQ27441_OPCONFIG_GPIOPOL);
 423:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 424:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return writeOpConfig(newOpConfig);
 425:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 426:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 427:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Get GPOUT function (BAT_LOW or SOC_INT)
 428:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** bool lipo_GPOUTFunction(void)
 429:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 430:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t opConfigRegister = opConfig();
 431:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 432:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return (opConfigRegister & BQ27441_OPCONFIG_BATLOWEN);
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 9


 433:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 434:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 435:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Set GPOUT function to BAT_LOW or SOC_INT
 436:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** bool lipo_setGPOUTFunction(gpout_function function)
 437:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 438:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t oldOpConfig = opConfig();
 439:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 440:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	// Check to see if we need to update opConfig:
 441:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if ((function && (oldOpConfig & BQ27441_OPCONFIG_BATLOWEN)) ||
 442:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		(!function && !(oldOpConfig & BQ27441_OPCONFIG_BATLOWEN)))
 443:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return true;
 444:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 445:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	// Modify BATLOWN_EN bit of opConfig:
 446:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t newOpConfig = oldOpConfig;
 447:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (function)
 448:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		newOpConfig |= BQ27441_OPCONFIG_BATLOWEN;
 449:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	else
 450:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		newOpConfig &= ~(BQ27441_OPCONFIG_BATLOWEN);
 451:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 452:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	// Write new opConfig
 453:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return writeOpConfig(newOpConfig);
 454:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 455:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 456:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Get SOC1_Set Threshold - threshold to set the alert flag
 457:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** uint8_t lipo_SOC1SetThreshold(void)
 458:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 459:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readExtendedData(BQ27441_ID_DISCHARGE, 0);
 460:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 461:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 462:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Get SOC1_Clear Threshold - threshold to clear the alert flag
 463:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** uint8_t lipo_SOC1ClearThreshold(void)
 464:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 465:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readExtendedData(BQ27441_ID_DISCHARGE, 1);
 466:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 467:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 468:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Set the SOC1 set and clear thresholds to a percentage
 469:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** bool lipo_setSOC1Thresholds(uint8_t set, uint8_t clear)
 470:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 471:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t thresholds[2];
 472:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	thresholds[0] = constrain(set, 0, 100);
 473:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	thresholds[1] = constrain(clear, 0, 100);
 474:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return writeExtendedData(BQ27441_ID_DISCHARGE, 0, thresholds, 2);
 475:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 476:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 477:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Get SOCF_Set Threshold - threshold to set the alert flag
 478:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** uint8_t lipo_SOCFSetThreshold(void)
 479:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 480:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readExtendedData(BQ27441_ID_DISCHARGE, 2);
 481:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 482:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 483:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Get SOCF_Clear Threshold - threshold to clear the alert flag
 484:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** uint8_t lipo_SOCFClearThreshold(void)
 485:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 486:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readExtendedData(BQ27441_ID_DISCHARGE, 3);
 487:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 488:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 489:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Set the SOCF set and clear thresholds to a percentage
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 10


 490:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** bool lipo_setSOCFThresholds(uint8_t set, uint8_t clear)
 491:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 492:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t thresholds[2];
 493:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	thresholds[0] = constrain(set, 0, 100);
 494:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	thresholds[1] = constrain(clear, 0, 100);
 495:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return writeExtendedData(BQ27441_ID_DISCHARGE, 2, thresholds, 2);
 496:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 497:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 498:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Check if the SOC1 flag is set
 499:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** bool lipo_socFlag(void)
 500:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 501:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t flagState = lipo_flags();
 502:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 503:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return flagState & BQ27441_FLAG_SOC1;
 504:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 505:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 506:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Check if the SOCF flag is set
 507:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** bool lipo_socfFlag(void)
 508:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 509:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t flagState = lipo_flags();
 510:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 511:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return flagState & BQ27441_FLAG_SOCF;
 512:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 513:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 514:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Get the SOC_INT interval delta
 515:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** uint8_t lipo_sociDelta(void)
 516:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 517:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readExtendedData(BQ27441_ID_STATE, 26);
 518:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 519:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 520:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Set the SOC_INT interval delta to a value between 1 and 100
 521:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** bool lipo_setSOCIDelta(uint8_t delta)
 522:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 523:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t soci = constrain(delta, 0, 100);
 524:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return writeExtendedData(BQ27441_ID_STATE, 26, &soci, 1);
 525:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 526:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 527:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Pulse the GPOUT pin - must be in SOC_INT mode
 528:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** bool lipo_pulseGPOUT(void)
 529:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 530:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return executeControlWord(BQ27441_CONTROL_PULSE_SOC_INT);
 531:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 532:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 533:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /*****************************************************************************
 534:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****  *************************** Control Sub-Commands ****************************
 535:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****  *****************************************************************************/
 536:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 537:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Read the device type - should be 0x0421
 538:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** uint16_t lipo_deviceType(void)
 539:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 540:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readControlWord(BQ27441_CONTROL_DEVICE_TYPE);
 541:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 542:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 543:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Enter configuration mode - set userControl if calling from an Arduino sketch
 544:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // and you want control over when to exitConfig
 545:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** bool userControl = true;
 546:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** void set_lipo_enterConfig_arg(bool userInput){
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 11


 547:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	userControl = userInput;
 548:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 549:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** bool lipo_enterConfig()
 550:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 551:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (userControl)
 552:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		_userConfigControl = true;
 553:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 554:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (sealed())
 555:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	{
 556:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		_sealFlag = true;
 557:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		unseal(); // Must be unsealed before making changes
 558:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	}
 559:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 560:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (executeControlWord(BQ27441_CONTROL_SET_CFGUPDATE))
 561:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	{
 562:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		int16_t timeout = BQ72441_I2C_TIMEOUT;
 563:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		while ((timeout--) && (!(lipo_status() & BQ27441_FLAG_CFGUPMODE)))
 564:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 			CyDelay(1);
 565:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 566:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		if (timeout > 0)
 567:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 			return true;
 568:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	}
 569:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 570:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return false;
 571:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 572:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 573:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Exit configuration mode with the option to perform a resimulation
 574:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** bool resim = true;
 575:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** void set_lipo_exitConfig_arg(bool userInput){
 576:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	resim = userInput;
 577:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 578:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** bool lipo_exitConfig()
 579:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 580:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	// There are two methods for exiting config mode:
 581:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	//    1. Execute the EXIT_CFGUPDATE command
 582:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	//    2. Execute the SOFT_RESET command
 583:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	// EXIT_CFGUPDATE exits config mode _without_ an OCV (open-circuit voltage)
 584:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	// measurement, and without resimulating to update unfiltered-SoC and SoC.
 585:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	// If a new OCV measurement or resimulation is desired, SOFT_RESET or
 586:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	// EXIT_RESIM should be used to exit config mode.
 587:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (resim)
 588:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	{
 589:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		if (softReset())
 590:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		{
 591:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 			int16_t timeout = BQ72441_I2C_TIMEOUT;
 592:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 			while ((timeout--) && ((lipo_flags() & BQ27441_FLAG_CFGUPMODE)))
 593:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 				CyDelay(1);
 594:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 			if (timeout > 0)
 595:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 			{
 596:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 				if (_sealFlag)
 597:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 					seal(); // Seal back up if we IC was sealed coming in
 598:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 				return true;
 599:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 			}
 600:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		}
 601:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return false;
 602:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	}
 603:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	else
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 12


 604:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	{
 605:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return executeControlWord(BQ27441_CONTROL_EXIT_CFGUPDATE);
 606:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	}
 607:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 608:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 609:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Read the flags() command
 610:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** uint16_t lipo_flags(void)
 611:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 612:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readWord(BQ27441_COMMAND_FLAGS);
 613:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 614:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 615:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Read the CONTROL_STATUS subcommand of control()
 616:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** uint16_t lipo_status(void)
 617:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 618:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readControlWord(BQ27441_CONTROL_STATUS);
 619:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 620:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 621:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /***************************** Private Functions *****************************/
 622:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 623:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Check if the BQ27441-G1A is sealed or not.
 624:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool sealed(void)
 625:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 626:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t stat = lipo_status();
 627:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return (stat & BQ27441_STATUS_SS);
 628:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 629:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 630:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Seal the BQ27441-G1A
 631:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool seal(void)
 632:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 633:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readControlWord(BQ27441_CONTROL_SEALED);
 634:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 635:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 636:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Unseal the BQ27441-G1A
 637:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool unseal(void)
 638:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 639:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	// To unseal the BQ27441, write the key to the control
 640:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	// command. Then immediately write the same key to control again.
 641:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (readControlWord(BQ27441_UNSEAL_KEY))
 642:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	{
 643:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return readControlWord(BQ27441_UNSEAL_KEY);
 644:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	}
 645:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return false;
 646:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 647:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 648:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Read the 16-bit opConfig register from extended data
 649:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static uint16_t opConfig(void)
 650:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 651:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readWord(BQ27441_EXTENDED_OPCONFIG);
 652:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 653:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 654:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Write the 16-bit opConfig register in extended data
 655:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool writeOpConfig(uint16_t value)
 656:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 657:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t opConfigMSB = value >> 8;
 658:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t opConfigLSB = value & 0x00FF;
 659:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t opConfigData[2] = {opConfigMSB, opConfigLSB};
 660:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 13


 661:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	// OpConfig register location: BQ27441_ID_REGISTERS id, offset 0
 662:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return writeExtendedData(BQ27441_ID_REGISTERS, 0, opConfigData, 2);
 663:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 664:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 665:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Issue a soft-reset to the BQ27441-G1A
 666:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool softReset(void)
 667:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 668:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return executeControlWord(BQ27441_CONTROL_SOFT_RESET);
 669:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 670:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 671:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Read a 16-bit command word from the BQ27441-G1A
 672:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static uint16_t readWord(uint16_t subAddress)
 673:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 674:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t data[2];
 675:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	i2cReadBytes(subAddress, data, 2);
 676:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return ((uint16_t)data[1] << 8) | data[0];
 677:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 678:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 679:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Read a 16-bit subcommand() from the BQ27441-G1A's control()
 680:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static uint16_t readControlWord(uint16_t function)
 681:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 682:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t subCommandMSB = (function >> 8);
 683:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t subCommandLSB = (function & 0x00FF);
 684:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t command[2] = {subCommandLSB, subCommandMSB};
 685:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t data[2] = {0, 0};
 686:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 687:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	i2cWriteBytes((uint8_t)0, command, 2);
 688:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 689:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (i2cReadBytes((uint8_t)0, data, 2))
 690:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	{
 691:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return ((uint16_t)data[1] << 8) | data[0];
 692:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	}
 693:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 694:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return false;
 695:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 696:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 697:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Execute a subcommand() from the BQ27441-G1A's control()
 698:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool executeControlWord(uint16_t function)
 699:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 700:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t subCommandMSB = (function >> 8);
 701:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t subCommandLSB = (function & 0x00FF);
 702:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t command[2] = {subCommandLSB, subCommandMSB};
 703:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	//uint8_t data[2] = {0, 0};
 704:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 705:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (i2cWriteBytes((uint8_t)0, command, 2))
 706:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return true;
 707:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 708:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return false;
 709:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 710:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 711:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /*****************************************************************************
 712:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****  ************************** Extended Data Commands ***************************
 713:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****  *****************************************************************************/
 714:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 715:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Issue a BlockDataControl() command to enable BlockData access
 716:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool blockDataControl(void)
 717:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 14


 718:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t enableByte = 0x00;
 719:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return i2cWriteBytes(BQ27441_EXTENDED_CONTROL, &enableByte, 1);
 720:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 721:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 722:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Issue a DataClass() command to set the data class to be accessed
 723:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool blockDataClass(uint8_t id)
 724:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 725:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return i2cWriteBytes(BQ27441_EXTENDED_DATACLASS, &id, 1);
 726:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 727:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 728:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Issue a DataBlock() command to set the data block to be accessed
 729:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool blockDataOffset(uint8_t offset)
 730:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 731:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return i2cWriteBytes(BQ27441_EXTENDED_DATABLOCK, &offset, 1);
 732:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 733:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 734:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Read the current checksum using BlockDataCheckSum()
 735:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static uint8_t blockDataChecksum(void)
 736:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 737:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t csum;
 738:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	i2cReadBytes(BQ27441_EXTENDED_CHECKSUM, &csum, 1);
 739:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return csum;
 740:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 741:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 742:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Use BlockData() to read a byte from the loaded extended data
 743:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static uint8_t readBlockData(uint8_t offset)
 744:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 745:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t ret;
 746:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t address = offset + BQ27441_EXTENDED_BLOCKDATA;
 747:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	i2cReadBytes(address, &ret, 1);
 748:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return ret;
 749:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 750:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 751:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Use BlockData() to write a byte to an offset of the loaded data
 752:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool writeBlockData(uint8_t offset, uint8_t data)
 753:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 754:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t address = offset + BQ27441_EXTENDED_BLOCKDATA;
 755:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return i2cWriteBytes(address, &data, 1);
 756:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 757:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 758:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Read all 32 bytes of the loaded extended data and compute a
 759:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // checksum based on the values.
 760:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static uint8_t computeBlockChecksum(void)
 761:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 762:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t data[32];
 763:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	i2cReadBytes(BQ27441_EXTENDED_BLOCKDATA, data, 32);
 764:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 765:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t csum = 0;
 766:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****     int i = 0;
 767:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	for (i = 0; i < 32; i++)
 768:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	{
 769:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		csum += data[i];
 770:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	}
 771:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	csum = 255 - csum;
 772:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 773:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return csum;
 774:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 15


 775:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 776:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Use the BlockDataCheckSum() command to write a checksum value
 777:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool writeBlockChecksum(uint8_t csum)
 778:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 779:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return i2cWriteBytes(BQ27441_EXTENDED_CHECKSUM, &csum, 1);
 780:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 781:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 782:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Read a byte from extended data specifying a class ID and position offset
 783:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static uint8_t readExtendedData(uint8_t classID, uint8_t offset)
 784:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 785:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t retData = 0;
 786:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (!_userConfigControl){
 787:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****         userControl = false;    
 788:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		lipo_enterConfig();
 789:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****     }
 790:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****     
 791:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (!blockDataControl())	  // // enable block data memory control
 792:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return false;			  // Return false if enable fails
 793:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (!blockDataClass(classID)) // Write class ID using DataBlockClass()
 794:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return false;
 795:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 796:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	blockDataOffset(offset / 32); // Write 32-bit block offset (usually 0)
 797:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 798:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	computeBlockChecksum(); // Compute checksum going in
 799:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t oldCsum = blockDataChecksum();
 800:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	/*for (int i=0; i<32; i++)
 801:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		Serial.print(String(readBlockData(i)) + " ");*/
 802:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	retData = readBlockData(offset % 32); // Read from offset (limit to 0-31)
 803:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 804:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (!_userConfigControl)
 805:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		lipo_exitConfig();
 806:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 807:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return retData;
 808:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 809:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 810:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Write a specified number of bytes to extended data specifying a
 811:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // class ID, position offset.
 812:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static bool writeExtendedData(uint8_t classID, uint8_t offset, uint8_t *data, uint8_t len)
 813:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 814:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	serial_println("MADE 1");
 815:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (len > 32)
 816:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return false;
 817:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 818:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (!_userConfigControl){
 819:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    userControl = false;
 820:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****         lipo_enterConfig();
 821:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****     }
 822:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****     serial_println("MADE 2");
 823:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (!blockDataControl())	  // // enable block data memory control
 824:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return false;			  // Return false if enable fails
 825:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (!blockDataClass(classID)) // Write class ID using DataBlockClass()
 826:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return false;
 827:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 828:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	blockDataOffset(offset / 32); // Write 32-bit block offset (usually 0)
 829:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	computeBlockChecksum();		  // Compute checksum going in
 830:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t oldCsum = blockDataChecksum();
 831:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	serial_println("MADE 3");
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 16


 832:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	// Write data bytes:
 833:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****     int i = 0;
 834:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	for (i = 0; i < len; i++)
 835:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	{
 836:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		// Write to offset, mod 32 if offset is greater than 32
 837:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		// The blockDataOffset above sets the 32-bit block
 838:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		writeBlockData((offset % 32) + i, data[i]);
 839:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	}
 840:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	serial_println("MADE 4");
 841:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	// Write new checksum using BlockDataChecksum (0x60)
 842:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t newCsum = computeBlockChecksum(); // Compute the new checksum
 843:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	writeBlockChecksum(newCsum);
 844:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	serial_println("MADE 5");
 845:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (!_userConfigControl)
 846:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		lipo_exitConfig();
 847:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	serial_println("MADE 6");
 848:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return true;
 849:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 850:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 851:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** /*****************************************************************************
 852:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****  ************************ I2C Read and Write Routines ************************
 853:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****  *****************************************************************************/
 854:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 855:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Read a specified number of bytes over I2C at a given subAddress
 856:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static int16_t i2cReadBytes(uint8_t subAddress, uint8_t *dest, uint8_t count)
 857:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 858:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t _buffer[256] = {0}; //256 because count is an 8 bit number which means that the highest nu
 859:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	int16_t timeout = BQ72441_I2C_TIMEOUT;
 860:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	I2C_I2CMasterSendStart(_deviceAddress, _write); //Wire.beginTransmission(_deviceAddress);
 861:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	I2C_I2CMasterWriteByte(subAddress);             //Wire.write(subAddress);
 862:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	I2C_I2CMasterSendStop();                        //Wire.endTransmission(true);
 863:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 864:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	 I2C_I2CMasterReadBuf(_deviceAddress, _buffer, count, I2C_I2C_MODE_COMPLETE_XFER); //Wire.requestF
 865:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	/*
 866:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	I2C_I2CMasterGetReadBufSize();
 867:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	Returns the number of bytes that has been transferred with the I2C_I2CMasterReadBuf() function.
 868:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
 869:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	while ((I2C_I2CMasterGetReadBufSize() < count) && timeout--){
 870:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		CyDelay(1);
 871:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	}
 872:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (timeout)
 873:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	{
 874:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****         int i = 0;
 875:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		for (i = 0; i < count; i++)
 876:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		{
 877:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 			dest[i] = _buffer[i]; //Wire.read();
 878:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		}
 879:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	}
 880:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 881:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return timeout;
 882:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 883:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 884:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** // Write a specified number of bytes over I2C to a given subAddress
 885:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** static uint16_t i2cWriteBytes(uint8_t subAddress, uint8_t *src, uint8_t count)
 886:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
  25              		.loc 1 886 0
  26              		.cfi_startproc
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 17


  27              	.LVL0:
  28 0000 70B5     		push	{r4, r5, r6, lr}
  29              		.cfi_def_cfa_offset 16
  30              		.cfi_offset 4, -16
  31              		.cfi_offset 5, -12
  32              		.cfi_offset 6, -8
  33              		.cfi_offset 14, -4
  34 0002 041C     		mov	r4, r0
  35 0004 0E1C     		mov	r6, r1
  36 0006 151C     		mov	r5, r2
 887:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	/*
 888:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	-Generates Start condition and sends slave address with read/write bit. Disables the I2C interrupt
 889:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	-This function is blocking. It does not return until the Start condition and address byte are sent
 890:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	 a ACK/NAK is received, or errors have occurred.
 891:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
 892:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	I2C_I2CMasterSendStart(_deviceAddress, _write); //Wire.beginTransmission(_deviceAddress);
  37              		.loc 1 892 0
  38 0008 5520     		mov	r0, #85
  39              	.LVL1:
  40 000a 0021     		mov	r1, #0
  41              	.LVL2:
  42 000c FFF7FEFF 		bl	I2C_I2CMasterSendStart
  43              	.LVL3:
 893:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 894:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	/*
 895:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	-Sends one byte to a slave.
 896:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	-This function is blocking and does not return until the byte is transmitted or an error occurs.
 897:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
 898:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	I2C_I2CMasterWriteByte(subAddress); 			//Wire.write(subAddress);
  44              		.loc 1 898 0
  45 0010 201C     		mov	r0, r4
  46 0012 FFF7FEFF 		bl	I2C_I2CMasterWriteByte
  47              	.LVL4:
 899:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 900:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	/*
 901:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	-Sends multiple byte to a slave.
 902:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	-The function is blocking and does not return until the byte is transmitted or an error occurs.
 903:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
 904:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****     int i = 0;
 905:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****     for (i = 0; i < count; i++)
  48              		.loc 1 905 0
  49 0016 0024     		mov	r4, #0
  50 0018 03E0     		b	.L2
  51              	.LVL5:
  52              	.L3:
 906:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	{
 907:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		I2C_I2CMasterWriteByte(src[i]);				//Wire.write(src[i]);
  53              		.loc 1 907 0 discriminator 3
  54 001a 305D     		ldrb	r0, [r6, r4]
  55 001c FFF7FEFF 		bl	I2C_I2CMasterWriteByte
  56              	.LVL6:
 905:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	{
  57              		.loc 1 905 0 discriminator 3
  58 0020 0134     		add	r4, r4, #1
  59              	.LVL7:
  60              	.L2:
 905:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	{
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 18


  61              		.loc 1 905 0 is_stmt 0 discriminator 1
  62 0022 A542     		cmp	r5, r4
  63 0024 F9DC     		bgt	.L3
 908:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	}
 909:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 
 910:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	/*
 911:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	-Generates Stop condition on the bus. The NAK is generated before Stop in case of a read transacti
 912:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	-At least one byte has to be read if a Start or ReStart condition with read direction was generate
 913:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	-This function is blocking and does not return until a Stop condition is generated or error occurr
 914:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	*/
 915:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	I2C_I2CMasterSendStop(); 						//Wire.endTransmission(true)
  64              		.loc 1 915 0 is_stmt 1
  65 0026 FFF7FEFF 		bl	I2C_I2CMasterSendStop
  66              	.LVL8:
 916:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****     
 917:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return true;
 918:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }...
  67              		.loc 1 918 0
  68 002a 0120     		mov	r0, #1
  69              		@ sp needed
  70              	.LVL9:
  71              	.LVL10:
  72 002c 70BD     		pop	{r4, r5, r6, pc}
  73              		.cfi_endproc
  74              	.LFE90:
  75              		.size	i2cWriteBytes, .-i2cWriteBytes
  76 002e C046     		.section	.text.blockDataControl,"ax",%progbits
  77              		.align	2
  78              		.code	16
  79              		.thumb_func
  80              		.type	blockDataControl, %function
  81              	blockDataControl:
  82              	.LFB79:
 717:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
  83              		.loc 1 717 0
  84              		.cfi_startproc
  85 0000 00B5     		push	{lr}
  86              		.cfi_def_cfa_offset 4
  87              		.cfi_offset 14, -4
  88 0002 83B0     		sub	sp, sp, #12
  89              		.cfi_def_cfa_offset 16
 718:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t enableByte = 0x00;
  90              		.loc 1 718 0
  91 0004 6B46     		mov	r3, sp
  92 0006 D91D     		add	r1, r3, #7
  93 0008 0023     		mov	r3, #0
  94 000a 0B70     		strb	r3, [r1]
 719:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return i2cWriteBytes(BQ27441_EXTENDED_CONTROL, &enableByte, 1);
  95              		.loc 1 719 0
  96 000c 6120     		mov	r0, #97
  97 000e 0122     		mov	r2, #1
  98 0010 FFF7FEFF 		bl	i2cWriteBytes
  99              	.LVL11:
 720:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 100              		.loc 1 720 0
 101 0014 03B0     		add	sp, sp, #12
 102              		@ sp needed
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 19


 103 0016 00BD     		pop	{pc}
 104              		.cfi_endproc
 105              	.LFE79:
 106              		.size	blockDataControl, .-blockDataControl
 107              		.section	.text.blockDataClass,"ax",%progbits
 108              		.align	2
 109              		.code	16
 110              		.thumb_func
 111              		.type	blockDataClass, %function
 112              	blockDataClass:
 113              	.LFB80:
 724:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 114              		.loc 1 724 0
 115              		.cfi_startproc
 116              	.LVL12:
 117 0000 00B5     		push	{lr}
 118              		.cfi_def_cfa_offset 4
 119              		.cfi_offset 14, -4
 120 0002 83B0     		sub	sp, sp, #12
 121              		.cfi_def_cfa_offset 16
 122 0004 6B46     		mov	r3, sp
 123 0006 D91D     		add	r1, r3, #7
 124 0008 0870     		strb	r0, [r1]
 725:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return i2cWriteBytes(BQ27441_EXTENDED_DATACLASS, &id, 1);
 125              		.loc 1 725 0
 126 000a 3E20     		mov	r0, #62
 127              	.LVL13:
 128 000c 0122     		mov	r2, #1
 129 000e FFF7FEFF 		bl	i2cWriteBytes
 130              	.LVL14:
 726:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 131              		.loc 1 726 0
 132 0012 03B0     		add	sp, sp, #12
 133              	.LVL15:
 134              		@ sp needed
 135 0014 00BD     		pop	{pc}
 136              		.cfi_endproc
 137              	.LFE80:
 138              		.size	blockDataClass, .-blockDataClass
 139 0016 C046     		.section	.text.blockDataOffset,"ax",%progbits
 140              		.align	2
 141              		.code	16
 142              		.thumb_func
 143              		.type	blockDataOffset, %function
 144              	blockDataOffset:
 145              	.LFB81:
 730:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 146              		.loc 1 730 0
 147              		.cfi_startproc
 148              	.LVL16:
 149 0000 00B5     		push	{lr}
 150              		.cfi_def_cfa_offset 4
 151              		.cfi_offset 14, -4
 152 0002 83B0     		sub	sp, sp, #12
 153              		.cfi_def_cfa_offset 16
 154 0004 6B46     		mov	r3, sp
 155 0006 D91D     		add	r1, r3, #7
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 20


 156 0008 0870     		strb	r0, [r1]
 731:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return i2cWriteBytes(BQ27441_EXTENDED_DATABLOCK, &offset, 1);
 157              		.loc 1 731 0
 158 000a 3F20     		mov	r0, #63
 159              	.LVL17:
 160 000c 0122     		mov	r2, #1
 161 000e FFF7FEFF 		bl	i2cWriteBytes
 162              	.LVL18:
 732:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 163              		.loc 1 732 0
 164 0012 03B0     		add	sp, sp, #12
 165              	.LVL19:
 166              		@ sp needed
 167 0014 00BD     		pop	{pc}
 168              		.cfi_endproc
 169              	.LFE81:
 170              		.size	blockDataOffset, .-blockDataOffset
 171 0016 C046     		.section	.text.writeBlockData,"ax",%progbits
 172              		.align	2
 173              		.code	16
 174              		.thumb_func
 175              		.type	writeBlockData, %function
 176              	writeBlockData:
 177              	.LFB84:
 753:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 178              		.loc 1 753 0
 179              		.cfi_startproc
 180              	.LVL20:
 181 0000 00B5     		push	{lr}
 182              		.cfi_def_cfa_offset 4
 183              		.cfi_offset 14, -4
 184 0002 83B0     		sub	sp, sp, #12
 185              		.cfi_def_cfa_offset 16
 186 0004 6B46     		mov	r3, sp
 187 0006 D971     		strb	r1, [r3, #7]
 188 0008 0733     		add	r3, r3, #7
 754:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t address = offset + BQ27441_EXTENDED_BLOCKDATA;
 189              		.loc 1 754 0
 190 000a 4030     		add	r0, r0, #64
 191              	.LVL21:
 192 000c C0B2     		uxtb	r0, r0
 193              	.LVL22:
 755:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return i2cWriteBytes(address, &data, 1);
 194              		.loc 1 755 0
 195 000e 191C     		mov	r1, r3
 196              	.LVL23:
 197 0010 0122     		mov	r2, #1
 198 0012 FFF7FEFF 		bl	i2cWriteBytes
 199              	.LVL24:
 756:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 200              		.loc 1 756 0
 201 0016 03B0     		add	sp, sp, #12
 202              	.LVL25:
 203              		@ sp needed
 204 0018 00BD     		pop	{pc}
 205              		.cfi_endproc
 206              	.LFE84:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 21


 207              		.size	writeBlockData, .-writeBlockData
 208 001a C046     		.section	.text.writeBlockChecksum,"ax",%progbits
 209              		.align	2
 210              		.code	16
 211              		.thumb_func
 212              		.type	writeBlockChecksum, %function
 213              	writeBlockChecksum:
 214              	.LFB86:
 778:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 215              		.loc 1 778 0
 216              		.cfi_startproc
 217              	.LVL26:
 218 0000 00B5     		push	{lr}
 219              		.cfi_def_cfa_offset 4
 220              		.cfi_offset 14, -4
 221 0002 83B0     		sub	sp, sp, #12
 222              		.cfi_def_cfa_offset 16
 223 0004 6B46     		mov	r3, sp
 224 0006 D91D     		add	r1, r3, #7
 225 0008 0870     		strb	r0, [r1]
 779:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return i2cWriteBytes(BQ27441_EXTENDED_CHECKSUM, &csum, 1);
 226              		.loc 1 779 0
 227 000a 6020     		mov	r0, #96
 228              	.LVL27:
 229 000c 0122     		mov	r2, #1
 230 000e FFF7FEFF 		bl	i2cWriteBytes
 231              	.LVL28:
 780:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 232              		.loc 1 780 0
 233 0012 03B0     		add	sp, sp, #12
 234              	.LVL29:
 235              		@ sp needed
 236 0014 00BD     		pop	{pc}
 237              		.cfi_endproc
 238              	.LFE86:
 239              		.size	writeBlockChecksum, .-writeBlockChecksum
 240 0016 C046     		.section	.text.executeControlWord,"ax",%progbits
 241              		.align	2
 242              		.code	16
 243              		.thumb_func
 244              		.type	executeControlWord, %function
 245              	executeControlWord:
 246              	.LFB78:
 699:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 247              		.loc 1 699 0
 248              		.cfi_startproc
 249              	.LVL30:
 250 0000 00B5     		push	{lr}
 251              		.cfi_def_cfa_offset 4
 252              		.cfi_offset 14, -4
 253 0002 83B0     		sub	sp, sp, #12
 254              		.cfi_def_cfa_offset 16
 700:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t subCommandMSB = (function >> 8);
 255              		.loc 1 700 0
 256 0004 030A     		lsr	r3, r0, #8
 257              	.LVL31:
 702:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t command[2] = {subCommandLSB, subCommandMSB};
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 22


 258              		.loc 1 702 0
 259 0006 01A9     		add	r1, sp, #4
 260 0008 0870     		strb	r0, [r1]
 261 000a 4B70     		strb	r3, [r1, #1]
 705:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (i2cWriteBytes((uint8_t)0, command, 2))
 262              		.loc 1 705 0
 263 000c 0020     		mov	r0, #0
 264              	.LVL32:
 265 000e 0222     		mov	r2, #2
 266 0010 FFF7FEFF 		bl	i2cWriteBytes
 267              	.LVL33:
 268 0014 0028     		cmp	r0, #0
 269 0016 00D0     		beq	.L10
 706:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return true;
 270              		.loc 1 706 0
 271 0018 0120     		mov	r0, #1
 272              	.L10:
 709:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 273              		.loc 1 709 0
 274 001a 03B0     		add	sp, sp, #12
 275              		@ sp needed
 276 001c 00BD     		pop	{pc}
 277              		.cfi_endproc
 278              	.LFE78:
 279              		.size	executeControlWord, .-executeControlWord
 280 001e C046     		.section	.text.softReset,"ax",%progbits
 281              		.align	2
 282              		.code	16
 283              		.thumb_func
 284              		.type	softReset, %function
 285              	softReset:
 286              	.LFB75:
 667:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 287              		.loc 1 667 0
 288              		.cfi_startproc
 289 0000 08B5     		push	{r3, lr}
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 3, -8
 292              		.cfi_offset 14, -4
 668:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return executeControlWord(BQ27441_CONTROL_SOFT_RESET);
 293              		.loc 1 668 0
 294 0002 4220     		mov	r0, #66
 295 0004 FFF7FEFF 		bl	executeControlWord
 296              	.LVL34:
 669:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 297              		.loc 1 669 0
 298              		@ sp needed
 299 0008 08BD     		pop	{r3, pc}
 300              		.cfi_endproc
 301              	.LFE75:
 302              		.size	softReset, .-softReset
 303 000a C046     		.section	.text.i2cReadBytes,"ax",%progbits
 304              		.align	2
 305              		.code	16
 306              		.thumb_func
 307              		.type	i2cReadBytes, %function
 308              	i2cReadBytes:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 23


 309              	.LFB89:
 857:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 310              		.loc 1 857 0
 311              		.cfi_startproc
 312              	.LVL35:
 313 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 314              		.cfi_def_cfa_offset 20
 315              		.cfi_offset 4, -20
 316              		.cfi_offset 5, -16
 317              		.cfi_offset 6, -12
 318              		.cfi_offset 7, -8
 319              		.cfi_offset 14, -4
 320 0002 4746     		mov	r7, r8
 321 0004 80B4     		push	{r7}
 322              		.cfi_def_cfa_offset 24
 323              		.cfi_offset 8, -24
 324 0006 C0B0     		sub	sp, sp, #256
 325              		.cfi_def_cfa_offset 280
 326 0008 041C     		mov	r4, r0
 327 000a 0E1C     		mov	r6, r1
 328 000c 151C     		mov	r5, r2
 858:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t _buffer[256] = {0}; //256 because count is an 8 bit number which means that the highest nu
 329              		.loc 1 858 0
 330 000e 6846     		mov	r0, sp
 331              	.LVL36:
 332 0010 0021     		mov	r1, #0
 333              	.LVL37:
 334 0012 8022     		mov	r2, #128
 335              	.LVL38:
 336 0014 5200     		lsl	r2, r2, #1
 337 0016 FFF7FEFF 		bl	memset
 338              	.LVL39:
 860:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	I2C_I2CMasterSendStart(_deviceAddress, _write); //Wire.beginTransmission(_deviceAddress);
 339              		.loc 1 860 0
 340 001a 5520     		mov	r0, #85
 341 001c 0021     		mov	r1, #0
 342 001e FFF7FEFF 		bl	I2C_I2CMasterSendStart
 343              	.LVL40:
 861:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	I2C_I2CMasterWriteByte(subAddress);             //Wire.write(subAddress);
 344              		.loc 1 861 0
 345 0022 201C     		mov	r0, r4
 346 0024 FFF7FEFF 		bl	I2C_I2CMasterWriteByte
 347              	.LVL41:
 862:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	I2C_I2CMasterSendStop();                        //Wire.endTransmission(true);
 348              		.loc 1 862 0
 349 0028 FFF7FEFF 		bl	I2C_I2CMasterSendStop
 350              	.LVL42:
 864:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	 I2C_I2CMasterReadBuf(_deviceAddress, _buffer, count, I2C_I2C_MODE_COMPLETE_XFER); //Wire.requestF
 351              		.loc 1 864 0
 352 002c A846     		mov	r8, r5
 353 002e 5520     		mov	r0, #85
 354 0030 6946     		mov	r1, sp
 355 0032 2A1C     		mov	r2, r5
 356 0034 0023     		mov	r3, #0
 357 0036 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 358              	.LVL43:
 859:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	int16_t timeout = BQ72441_I2C_TIMEOUT;
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 24


 359              		.loc 1 859 0
 360 003a FA27     		mov	r7, #250
 361 003c FF00     		lsl	r7, r7, #3
 869:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	while ((I2C_I2CMasterGetReadBufSize() < count) && timeout--){
 362              		.loc 1 869 0
 363 003e 03E0     		b	.L13
 364              	.LVL44:
 365              	.L15:
 870:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		CyDelay(1);
 366              		.loc 1 870 0
 367 0040 0120     		mov	r0, #1
 368 0042 FFF7FEFF 		bl	CyDelay
 369              	.LVL45:
 869:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	while ((I2C_I2CMasterGetReadBufSize() < count) && timeout--){
 370              		.loc 1 869 0
 371 0046 271C     		mov	r7, r4
 372              	.LVL46:
 373              	.L13:
 374 0048 FFF7FEFF 		bl	I2C_I2CMasterGetReadBufSize
 375              	.LVL47:
 376 004c 8045     		cmp	r8, r0
 377 004e 04D9     		bls	.L14
 869:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	while ((I2C_I2CMasterGetReadBufSize() < count) && timeout--){
 378              		.loc 1 869 0 is_stmt 0 discriminator 1
 379 0050 7B1E     		sub	r3, r7, #1
 380 0052 9CB2     		uxth	r4, r3
 381              	.LVL48:
 382 0054 002F     		cmp	r7, #0
 383 0056 F3D1     		bne	.L15
 869:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	while ((I2C_I2CMasterGetReadBufSize() < count) && timeout--){
 384              		.loc 1 869 0
 385 0058 271C     		mov	r7, r4
 386              	.LVL49:
 387              	.L14:
 872:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (timeout)
 388              		.loc 1 872 0 is_stmt 1
 389 005a 002F     		cmp	r7, #0
 390 005c 05D1     		bne	.L19
 391              	.LBB2:
 392 005e 07E0     		b	.L17
 393              	.LVL50:
 394              	.L18:
 877:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 			dest[i] = _buffer[i]; //Wire.read();
 395              		.loc 1 877 0 discriminator 3
 396 0060 6A46     		mov	r2, sp
 397 0062 D25C     		ldrb	r2, [r2, r3]
 398 0064 F254     		strb	r2, [r6, r3]
 875:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		for (i = 0; i < count; i++)
 399              		.loc 1 875 0 discriminator 3
 400 0066 0133     		add	r3, r3, #1
 401              	.LVL51:
 402 0068 00E0     		b	.L16
 403              	.LVL52:
 404              	.L19:
 405              	.LBE2:
 406 006a 0023     		mov	r3, #0
 407              	.L16:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 25


 408              	.LVL53:
 409              	.LBB3:
 875:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		for (i = 0; i < count; i++)
 410              		.loc 1 875 0 is_stmt 0 discriminator 1
 411 006c 9D42     		cmp	r5, r3
 412 006e F7DC     		bgt	.L18
 413              	.LVL54:
 414              	.L17:
 415              	.LBE3:
 881:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return timeout;
 416              		.loc 1 881 0 is_stmt 1
 417 0070 38B2     		sxth	r0, r7
 882:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 418              		.loc 1 882 0
 419 0072 40B0     		add	sp, sp, #256
 420              		@ sp needed
 421              	.LVL55:
 422              	.LVL56:
 423 0074 04BC     		pop	{r2}
 424 0076 9046     		mov	r8, r2
 425 0078 F0BD     		pop	{r4, r5, r6, r7, pc}
 426              		.cfi_endproc
 427              	.LFE89:
 428              		.size	i2cReadBytes, .-i2cReadBytes
 429 007a C046     		.section	.text.blockDataChecksum,"ax",%progbits
 430              		.align	2
 431              		.code	16
 432              		.thumb_func
 433              		.type	blockDataChecksum, %function
 434              	blockDataChecksum:
 435              	.LFB82:
 736:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 436              		.loc 1 736 0
 437              		.cfi_startproc
 438 0000 10B5     		push	{r4, lr}
 439              		.cfi_def_cfa_offset 8
 440              		.cfi_offset 4, -8
 441              		.cfi_offset 14, -4
 442 0002 82B0     		sub	sp, sp, #8
 443              		.cfi_def_cfa_offset 16
 738:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	i2cReadBytes(BQ27441_EXTENDED_CHECKSUM, &csum, 1);
 444              		.loc 1 738 0
 445 0004 6B46     		mov	r3, sp
 446 0006 DC1D     		add	r4, r3, #7
 447 0008 6020     		mov	r0, #96
 448 000a 211C     		mov	r1, r4
 449 000c 0122     		mov	r2, #1
 450 000e FFF7FEFF 		bl	i2cReadBytes
 451              	.LVL57:
 739:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return csum;
 452              		.loc 1 739 0
 453 0012 2078     		ldrb	r0, [r4]
 740:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 454              		.loc 1 740 0
 455 0014 02B0     		add	sp, sp, #8
 456              		@ sp needed
 457 0016 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 26


 458              		.cfi_endproc
 459              	.LFE82:
 460              		.size	blockDataChecksum, .-blockDataChecksum
 461              		.section	.text.computeBlockChecksum,"ax",%progbits
 462              		.align	2
 463              		.code	16
 464              		.thumb_func
 465              		.type	computeBlockChecksum, %function
 466              	computeBlockChecksum:
 467              	.LFB85:
 761:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 468              		.loc 1 761 0
 469              		.cfi_startproc
 470 0000 00B5     		push	{lr}
 471              		.cfi_def_cfa_offset 4
 472              		.cfi_offset 14, -4
 473 0002 89B0     		sub	sp, sp, #36
 474              		.cfi_def_cfa_offset 40
 763:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	i2cReadBytes(BQ27441_EXTENDED_BLOCKDATA, data, 32);
 475              		.loc 1 763 0
 476 0004 4020     		mov	r0, #64
 477 0006 6946     		mov	r1, sp
 478 0008 2022     		mov	r2, #32
 479 000a FFF7FEFF 		bl	i2cReadBytes
 480              	.LVL58:
 767:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	for (i = 0; i < 32; i++)
 481              		.loc 1 767 0
 482 000e 0022     		mov	r2, #0
 765:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t csum = 0;
 483              		.loc 1 765 0
 484 0010 0023     		mov	r3, #0
 767:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	for (i = 0; i < 32; i++)
 485              		.loc 1 767 0
 486 0012 04E0     		b	.L22
 487              	.LVL59:
 488              	.L23:
 769:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		csum += data[i];
 489              		.loc 1 769 0 discriminator 3
 490 0014 6946     		mov	r1, sp
 491 0016 895C     		ldrb	r1, [r1, r2]
 492 0018 CB18     		add	r3, r1, r3
 493              	.LVL60:
 494 001a DBB2     		uxtb	r3, r3
 495              	.LVL61:
 767:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	for (i = 0; i < 32; i++)
 496              		.loc 1 767 0 discriminator 3
 497 001c 0132     		add	r2, r2, #1
 498              	.LVL62:
 499              	.L22:
 767:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	for (i = 0; i < 32; i++)
 500              		.loc 1 767 0 is_stmt 0 discriminator 1
 501 001e 1F2A     		cmp	r2, #31
 502 0020 F8DD     		ble	.L23
 771:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	csum = 255 - csum;
 503              		.loc 1 771 0 is_stmt 1
 504 0022 DB43     		mvn	r3, r3
 505              	.LVL63:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 27


 506 0024 D8B2     		uxtb	r0, r3
 507              	.LVL64:
 774:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 508              		.loc 1 774 0
 509 0026 09B0     		add	sp, sp, #36
 510              		@ sp needed
 511 0028 00BD     		pop	{pc}
 512              		.cfi_endproc
 513              	.LFE85:
 514              		.size	computeBlockChecksum, .-computeBlockChecksum
 515 002a C046     		.section	.text.readWord,"ax",%progbits
 516              		.align	2
 517              		.code	16
 518              		.thumb_func
 519              		.type	readWord, %function
 520              	readWord:
 521              	.LFB76:
 673:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 522              		.loc 1 673 0
 523              		.cfi_startproc
 524              	.LVL65:
 525 0000 10B5     		push	{r4, lr}
 526              		.cfi_def_cfa_offset 8
 527              		.cfi_offset 4, -8
 528              		.cfi_offset 14, -4
 529 0002 82B0     		sub	sp, sp, #8
 530              		.cfi_def_cfa_offset 16
 675:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	i2cReadBytes(subAddress, data, 2);
 531              		.loc 1 675 0
 532 0004 C0B2     		uxtb	r0, r0
 533              	.LVL66:
 534 0006 01AC     		add	r4, sp, #4
 535 0008 211C     		mov	r1, r4
 536 000a 0222     		mov	r2, #2
 537 000c FFF7FEFF 		bl	i2cReadBytes
 538              	.LVL67:
 676:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return ((uint16_t)data[1] << 8) | data[0];
 539              		.loc 1 676 0
 540 0010 6078     		ldrb	r0, [r4, #1]
 541 0012 0002     		lsl	r0, r0, #8
 542 0014 2378     		ldrb	r3, [r4]
 543 0016 1843     		orr	r0, r3
 677:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 544              		.loc 1 677 0
 545 0018 02B0     		add	sp, sp, #8
 546              		@ sp needed
 547 001a 10BD     		pop	{r4, pc}
 548              		.cfi_endproc
 549              	.LFE76:
 550              		.size	readWord, .-readWord
 551              		.section	.text.opConfig,"ax",%progbits
 552              		.align	2
 553              		.code	16
 554              		.thumb_func
 555              		.type	opConfig, %function
 556              	opConfig:
 557              	.LFB73:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 28


 650:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 558              		.loc 1 650 0
 559              		.cfi_startproc
 560 0000 08B5     		push	{r3, lr}
 561              		.cfi_def_cfa_offset 8
 562              		.cfi_offset 3, -8
 563              		.cfi_offset 14, -4
 651:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readWord(BQ27441_EXTENDED_OPCONFIG);
 564              		.loc 1 651 0
 565 0002 3A20     		mov	r0, #58
 566 0004 FFF7FEFF 		bl	readWord
 567              	.LVL68:
 652:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 568              		.loc 1 652 0
 569              		@ sp needed
 570 0008 08BD     		pop	{r3, pc}
 571              		.cfi_endproc
 572              	.LFE73:
 573              		.size	opConfig, .-opConfig
 574 000a C046     		.section	.text.readBlockData,"ax",%progbits
 575              		.align	2
 576              		.code	16
 577              		.thumb_func
 578              		.type	readBlockData, %function
 579              	readBlockData:
 580              	.LFB83:
 744:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 581              		.loc 1 744 0
 582              		.cfi_startproc
 583              	.LVL69:
 584 0000 10B5     		push	{r4, lr}
 585              		.cfi_def_cfa_offset 8
 586              		.cfi_offset 4, -8
 587              		.cfi_offset 14, -4
 588 0002 82B0     		sub	sp, sp, #8
 589              		.cfi_def_cfa_offset 16
 746:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t address = offset + BQ27441_EXTENDED_BLOCKDATA;
 590              		.loc 1 746 0
 591 0004 4030     		add	r0, r0, #64
 592              	.LVL70:
 593 0006 C0B2     		uxtb	r0, r0
 594              	.LVL71:
 747:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	i2cReadBytes(address, &ret, 1);
 595              		.loc 1 747 0
 596 0008 6B46     		mov	r3, sp
 597 000a DC1D     		add	r4, r3, #7
 598 000c 211C     		mov	r1, r4
 599 000e 0122     		mov	r2, #1
 600 0010 FFF7FEFF 		bl	i2cReadBytes
 601              	.LVL72:
 748:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return ret;
 602              		.loc 1 748 0
 603 0014 2078     		ldrb	r0, [r4]
 749:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 604              		.loc 1 749 0
 605 0016 02B0     		add	sp, sp, #8
 606              		@ sp needed
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 29


 607 0018 10BD     		pop	{r4, pc}
 608              		.cfi_endproc
 609              	.LFE83:
 610              		.size	readBlockData, .-readBlockData
 611 001a C046     		.section	.text.readControlWord,"ax",%progbits
 612              		.align	2
 613              		.code	16
 614              		.thumb_func
 615              		.type	readControlWord, %function
 616              	readControlWord:
 617              	.LFB77:
 681:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 618              		.loc 1 681 0
 619              		.cfi_startproc
 620              	.LVL73:
 621 0000 00B5     		push	{lr}
 622              		.cfi_def_cfa_offset 4
 623              		.cfi_offset 14, -4
 624 0002 83B0     		sub	sp, sp, #12
 625              		.cfi_def_cfa_offset 16
 682:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t subCommandMSB = (function >> 8);
 626              		.loc 1 682 0
 627 0004 030A     		lsr	r3, r0, #8
 628              	.LVL74:
 684:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t command[2] = {subCommandLSB, subCommandMSB};
 629              		.loc 1 684 0
 630 0006 01A9     		add	r1, sp, #4
 631 0008 0870     		strb	r0, [r1]
 632 000a 4B70     		strb	r3, [r1, #1]
 685:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t data[2] = {0, 0};
 633              		.loc 1 685 0
 634 000c 0023     		mov	r3, #0
 635              	.LVL75:
 636 000e 6A46     		mov	r2, sp
 637 0010 1370     		strb	r3, [r2]
 638 0012 5370     		strb	r3, [r2, #1]
 687:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	i2cWriteBytes((uint8_t)0, command, 2);
 639              		.loc 1 687 0
 640 0014 0020     		mov	r0, #0
 641              	.LVL76:
 642 0016 0222     		mov	r2, #2
 643 0018 FFF7FEFF 		bl	i2cWriteBytes
 644              	.LVL77:
 689:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (i2cReadBytes((uint8_t)0, data, 2))
 645              		.loc 1 689 0
 646 001c 0020     		mov	r0, #0
 647 001e 6946     		mov	r1, sp
 648 0020 0222     		mov	r2, #2
 649 0022 FFF7FEFF 		bl	i2cReadBytes
 650              	.LVL78:
 651 0026 0028     		cmp	r0, #0
 652 0028 05D0     		beq	.L29
 691:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return ((uint16_t)data[1] << 8) | data[0];
 653              		.loc 1 691 0
 654 002a 6B46     		mov	r3, sp
 655 002c 5878     		ldrb	r0, [r3, #1]
 656 002e 0002     		lsl	r0, r0, #8
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 30


 657 0030 1B78     		ldrb	r3, [r3]
 658 0032 1843     		orr	r0, r3
 659 0034 00E0     		b	.L28
 660              	.L29:
 694:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return false;
 661              		.loc 1 694 0
 662 0036 0020     		mov	r0, #0
 663              	.L28:
 695:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 664              		.loc 1 695 0
 665 0038 03B0     		add	sp, sp, #12
 666              		@ sp needed
 667 003a 00BD     		pop	{pc}
 668              		.cfi_endproc
 669              	.LFE77:
 670              		.size	readControlWord, .-readControlWord
 671              		.section	.text.unseal,"ax",%progbits
 672              		.align	2
 673              		.code	16
 674              		.thumb_func
 675              		.type	unseal, %function
 676              	unseal:
 677              	.LFB72:
 638:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 678              		.loc 1 638 0
 679              		.cfi_startproc
 680 0000 08B5     		push	{r3, lr}
 681              		.cfi_def_cfa_offset 8
 682              		.cfi_offset 3, -8
 683              		.cfi_offset 14, -4
 641:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (readControlWord(BQ27441_UNSEAL_KEY))
 684              		.loc 1 641 0
 685 0002 8020     		mov	r0, #128
 686 0004 0002     		lsl	r0, r0, #8
 687 0006 FFF7FEFF 		bl	readControlWord
 688              	.LVL79:
 689 000a 0028     		cmp	r0, #0
 690 000c 03D0     		beq	.L31
 643:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return readControlWord(BQ27441_UNSEAL_KEY);
 691              		.loc 1 643 0
 692 000e 8020     		mov	r0, #128
 693 0010 0002     		lsl	r0, r0, #8
 694 0012 FFF7FEFF 		bl	readControlWord
 695              	.LVL80:
 696              	.L31:
 646:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 697              		.loc 1 646 0
 698              		@ sp needed
 699 0016 08BD     		pop	{r3, pc}
 700              		.cfi_endproc
 701              	.LFE72:
 702              		.size	unseal, .-unseal
 703              		.section	.text.seal,"ax",%progbits
 704              		.align	2
 705              		.code	16
 706              		.thumb_func
 707              		.type	seal, %function
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 31


 708              	seal:
 709              	.LFB71:
 632:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 710              		.loc 1 632 0
 711              		.cfi_startproc
 712 0000 08B5     		push	{r3, lr}
 713              		.cfi_def_cfa_offset 8
 714              		.cfi_offset 3, -8
 715              		.cfi_offset 14, -4
 633:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readControlWord(BQ27441_CONTROL_SEALED);
 716              		.loc 1 633 0
 717 0002 2020     		mov	r0, #32
 718 0004 FFF7FEFF 		bl	readControlWord
 719              	.LVL81:
 634:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 720              		.loc 1 634 0
 721              		@ sp needed
 722 0008 08BD     		pop	{r3, pc}
 723              		.cfi_endproc
 724              	.LFE71:
 725              		.size	seal, .-seal
 726 000a C046     		.section	.text.lipo_voltage,"ax",%progbits
 727              		.align	2
 728              		.global	lipo_voltage
 729              		.code	16
 730              		.thumb_func
 731              		.type	lipo_voltage, %function
 732              	lipo_voltage:
 733              	.LFB36:
 263:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 734              		.loc 1 263 0
 735              		.cfi_startproc
 736 0000 08B5     		push	{r3, lr}
 737              		.cfi_def_cfa_offset 8
 738              		.cfi_offset 3, -8
 739              		.cfi_offset 14, -4
 264:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readWord(BQ27441_COMMAND_VOLTAGE);
 740              		.loc 1 264 0
 741 0002 0420     		mov	r0, #4
 742 0004 FFF7FEFF 		bl	readWord
 743              	.LVL82:
 265:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 744              		.loc 1 265 0
 745              		@ sp needed
 746 0008 08BD     		pop	{r3, pc}
 747              		.cfi_endproc
 748              	.LFE36:
 749              		.size	lipo_voltage, .-lipo_voltage
 750 000a C046     		.section	.text.set_lipo_current_arg,"ax",%progbits
 751              		.align	2
 752              		.global	set_lipo_current_arg
 753              		.code	16
 754              		.thumb_func
 755              		.type	set_lipo_current_arg, %function
 756              	set_lipo_current_arg:
 757              	.LFB37:
 269:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** void set_lipo_current_arg(current_measure userInput){
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 32


 758              		.loc 1 269 0
 759              		.cfi_startproc
 760              	.LVL83:
 270:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	current_measure_type  = userInput;
 761              		.loc 1 270 0
 762 0000 014B     		ldr	r3, .L35
 763 0002 1870     		strb	r0, [r3]
 271:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 764              		.loc 1 271 0
 765              		@ sp needed
 766 0004 7047     		bx	lr
 767              	.L36:
 768 0006 C046     		.align	2
 769              	.L35:
 770 0008 00000000 		.word	.LANCHOR0
 771              		.cfi_endproc
 772              	.LFE37:
 773              		.size	set_lipo_current_arg, .-set_lipo_current_arg
 774              		.section	.text.lipo_current,"ax",%progbits
 775              		.align	2
 776              		.global	lipo_current
 777              		.code	16
 778              		.thumb_func
 779              		.type	lipo_current, %function
 780              	lipo_current:
 781              	.LFB38:
 274:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 782              		.loc 1 274 0
 783              		.cfi_startproc
 784 0000 08B5     		push	{r3, lr}
 785              		.cfi_def_cfa_offset 8
 786              		.cfi_offset 3, -8
 787              		.cfi_offset 14, -4
 788              	.LVL84:
 276:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	switch (current_measure_type)
 789              		.loc 1 276 0
 790 0002 0D4B     		ldr	r3, .L44
 791 0004 1B78     		ldrb	r3, [r3]
 792 0006 012B     		cmp	r3, #1
 793 0008 09D0     		beq	.L39
 794 000a 002B     		cmp	r3, #0
 795 000c 02D0     		beq	.L40
 796 000e 022B     		cmp	r3, #2
 797 0010 0AD0     		beq	.L41
 798 0012 0EE0     		b	.L43
 799              	.L40:
 279:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		current = (int16_t)readWord(BQ27441_COMMAND_AVG_CURRENT);
 800              		.loc 1 279 0
 801 0014 1020     		mov	r0, #16
 802 0016 FFF7FEFF 		bl	readWord
 803              	.LVL85:
 804 001a 80B2     		uxth	r0, r0
 805              	.LVL86:
 280:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 806              		.loc 1 280 0
 807 001c 0AE0     		b	.L38
 808              	.LVL87:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 33


 809              	.L39:
 282:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		current = (int16_t)readWord(BQ27441_COMMAND_STDBY_CURRENT);
 810              		.loc 1 282 0
 811 001e 1220     		mov	r0, #18
 812 0020 FFF7FEFF 		bl	readWord
 813              	.LVL88:
 814 0024 80B2     		uxth	r0, r0
 815              	.LVL89:
 283:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 816              		.loc 1 283 0
 817 0026 05E0     		b	.L38
 818              	.LVL90:
 819              	.L41:
 285:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		current = (int16_t)readWord(BQ27441_COMMAND_MAX_CURRENT);
 820              		.loc 1 285 0
 821 0028 1420     		mov	r0, #20
 822 002a FFF7FEFF 		bl	readWord
 823              	.LVL91:
 824 002e 80B2     		uxth	r0, r0
 825              	.LVL92:
 286:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 826              		.loc 1 286 0
 827 0030 00E0     		b	.L38
 828              	.LVL93:
 829              	.L43:
 275:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	int16_t current = 0;
 830              		.loc 1 275 0
 831 0032 0020     		mov	r0, #0
 832              	.LVL94:
 833              	.L38:
 289:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return current;
 834              		.loc 1 289 0
 835 0034 00B2     		sxth	r0, r0
 290:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 836              		.loc 1 290 0
 837              		@ sp needed
 838 0036 08BD     		pop	{r3, pc}
 839              	.L45:
 840              		.align	2
 841              	.L44:
 842 0038 00000000 		.word	.LANCHOR0
 843              		.cfi_endproc
 844              	.LFE38:
 845              		.size	lipo_current, .-lipo_current
 846              		.section	.text.set_lipo_capacity_arg,"ax",%progbits
 847              		.align	2
 848              		.global	set_lipo_capacity_arg
 849              		.code	16
 850              		.thumb_func
 851              		.type	set_lipo_capacity_arg, %function
 852              	set_lipo_capacity_arg:
 853              	.LFB39:
 294:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** void set_lipo_capacity_arg(capacity_measure userInput){
 854              		.loc 1 294 0
 855              		.cfi_startproc
 856              	.LVL95:
 295:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	capacity_measure_type = userInput;
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 34


 857              		.loc 1 295 0
 858 0000 014B     		ldr	r3, .L47
 859 0002 5870     		strb	r0, [r3, #1]
 296:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 860              		.loc 1 296 0
 861              		@ sp needed
 862 0004 7047     		bx	lr
 863              	.L48:
 864 0006 C046     		.align	2
 865              	.L47:
 866 0008 00000000 		.word	.LANCHOR0
 867              		.cfi_endproc
 868              	.LFE39:
 869              		.size	set_lipo_capacity_arg, .-set_lipo_capacity_arg
 870              		.section	.text.lipo_capacity,"ax",%progbits
 871              		.align	2
 872              		.global	lipo_capacity
 873              		.code	16
 874              		.thumb_func
 875              		.type	lipo_capacity, %function
 876              	lipo_capacity:
 877              	.LFB40:
 298:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 878              		.loc 1 298 0
 879              		.cfi_startproc
 880 0000 08B5     		push	{r3, lr}
 881              		.cfi_def_cfa_offset 8
 882              		.cfi_offset 3, -8
 883              		.cfi_offset 14, -4
 884              	.LVL96:
 300:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	switch (capacity_measure_type)
 885              		.loc 1 300 0
 886 0002 174B     		ldr	r3, .L63
 887 0004 5A78     		ldrb	r2, [r3, #1]
 888 0006 082A     		cmp	r2, #8
 889 0008 27D8     		bhi	.L62
 890 000a 9300     		lsl	r3, r2, #2
 891 000c 154A     		ldr	r2, .L63+4
 892 000e D358     		ldr	r3, [r2, r3]
 893 0010 9F46     		mov	pc, r3
 894              		.section	.rodata
 895              		.align	2
 896              	.L52:
 897 0000 12000000 		.word	.L51
 898 0004 1A000000 		.word	.L53
 899 0008 22000000 		.word	.L54
 900 000c 2A000000 		.word	.L55
 901 0010 32000000 		.word	.L56
 902 0014 3A000000 		.word	.L57
 903 0018 42000000 		.word	.L58
 904 001c 4A000000 		.word	.L59
 905 0020 52000000 		.word	.L60
 906              		.section	.text.lipo_capacity
 907              	.L51:
 303:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return readWord(BQ27441_COMMAND_REM_CAPACITY);
 908              		.loc 1 303 0
 909 0012 0C20     		mov	r0, #12
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 35


 910 0014 FFF7FEFF 		bl	readWord
 911              	.LVL97:
 912 0018 20E0     		b	.L61
 913              	.L53:
 306:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return readWord(BQ27441_COMMAND_FULL_CAPACITY);
 914              		.loc 1 306 0
 915 001a 0E20     		mov	r0, #14
 916 001c FFF7FEFF 		bl	readWord
 917              	.LVL98:
 918 0020 1CE0     		b	.L61
 919              	.L54:
 309:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		capacity = readWord(BQ27441_COMMAND_NOM_CAPACITY);
 920              		.loc 1 309 0
 921 0022 0820     		mov	r0, #8
 922 0024 FFF7FEFF 		bl	readWord
 923              	.LVL99:
 310:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 924              		.loc 1 310 0
 925 0028 18E0     		b	.L61
 926              	.LVL100:
 927              	.L55:
 312:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		capacity = readWord(BQ27441_COMMAND_AVAIL_CAPACITY);
 928              		.loc 1 312 0
 929 002a 0A20     		mov	r0, #10
 930 002c FFF7FEFF 		bl	readWord
 931              	.LVL101:
 313:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 932              		.loc 1 313 0
 933 0030 14E0     		b	.L61
 934              	.LVL102:
 935              	.L56:
 315:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		capacity = readWord(BQ27441_COMMAND_REM_CAP_FIL);
 936              		.loc 1 315 0
 937 0032 2A20     		mov	r0, #42
 938 0034 FFF7FEFF 		bl	readWord
 939              	.LVL103:
 316:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 940              		.loc 1 316 0
 941 0038 10E0     		b	.L61
 942              	.LVL104:
 943              	.L57:
 318:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		capacity = readWord(BQ27441_COMMAND_REM_CAP_UNFL);
 944              		.loc 1 318 0
 945 003a 2820     		mov	r0, #40
 946 003c FFF7FEFF 		bl	readWord
 947              	.LVL105:
 319:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 948              		.loc 1 319 0
 949 0040 0CE0     		b	.L61
 950              	.LVL106:
 951              	.L58:
 321:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		capacity = readWord(BQ27441_COMMAND_FULL_CAP_FIL);
 952              		.loc 1 321 0
 953 0042 2E20     		mov	r0, #46
 954 0044 FFF7FEFF 		bl	readWord
 955              	.LVL107:
 322:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 36


 956              		.loc 1 322 0
 957 0048 08E0     		b	.L61
 958              	.LVL108:
 959              	.L59:
 324:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		capacity = readWord(BQ27441_COMMAND_FULL_CAP_UNFL);
 960              		.loc 1 324 0
 961 004a 2C20     		mov	r0, #44
 962 004c FFF7FEFF 		bl	readWord
 963              	.LVL109:
 325:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 964              		.loc 1 325 0
 965 0050 04E0     		b	.L61
 966              	.LVL110:
 967              	.L60:
 327:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		capacity = readWord(BQ27441_EXTENDED_CAPACITY);
 968              		.loc 1 327 0
 969 0052 3C20     		mov	r0, #60
 970 0054 FFF7FEFF 		bl	readWord
 971              	.LVL111:
 972 0058 00E0     		b	.L61
 973              	.LVL112:
 974              	.L62:
 299:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t capacity = 0;
 975              		.loc 1 299 0
 976 005a 0020     		mov	r0, #0
 977              	.LVL113:
 978              	.L61:
 331:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 979              		.loc 1 331 0
 980              		@ sp needed
 981 005c 08BD     		pop	{r3, pc}
 982              	.L64:
 983 005e C046     		.align	2
 984              	.L63:
 985 0060 00000000 		.word	.LANCHOR0
 986 0064 00000000 		.word	.L52
 987              		.cfi_endproc
 988              	.LFE40:
 989              		.size	lipo_capacity, .-lipo_capacity
 990              		.section	.text.lipo_power,"ax",%progbits
 991              		.align	2
 992              		.global	lipo_power
 993              		.code	16
 994              		.thumb_func
 995              		.type	lipo_power, %function
 996              	lipo_power:
 997              	.LFB41:
 335:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 998              		.loc 1 335 0
 999              		.cfi_startproc
 1000 0000 08B5     		push	{r3, lr}
 1001              		.cfi_def_cfa_offset 8
 1002              		.cfi_offset 3, -8
 1003              		.cfi_offset 14, -4
 336:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return (int16_t)readWord(BQ27441_COMMAND_AVG_POWER);
 1004              		.loc 1 336 0
 1005 0002 1820     		mov	r0, #24
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 37


 1006 0004 FFF7FEFF 		bl	readWord
 1007              	.LVL114:
 1008 0008 00B2     		sxth	r0, r0
 337:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1009              		.loc 1 337 0
 1010              		@ sp needed
 1011 000a 08BD     		pop	{r3, pc}
 1012              		.cfi_endproc
 1013              	.LFE41:
 1014              		.size	lipo_power, .-lipo_power
 1015              		.section	.text.set_lipo_soc_arg,"ax",%progbits
 1016              		.align	2
 1017              		.global	set_lipo_soc_arg
 1018              		.code	16
 1019              		.thumb_func
 1020              		.type	set_lipo_soc_arg, %function
 1021              	set_lipo_soc_arg:
 1022              	.LFB42:
 341:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** void set_lipo_soc_arg(soc_measure userInput){
 1023              		.loc 1 341 0
 1024              		.cfi_startproc
 1025              	.LVL115:
 342:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	soc_measure_type = userInput;
 1026              		.loc 1 342 0
 1027 0000 014B     		ldr	r3, .L67
 1028 0002 9870     		strb	r0, [r3, #2]
 343:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1029              		.loc 1 343 0
 1030              		@ sp needed
 1031 0004 7047     		bx	lr
 1032              	.L68:
 1033 0006 C046     		.align	2
 1034              	.L67:
 1035 0008 00000000 		.word	.LANCHOR0
 1036              		.cfi_endproc
 1037              	.LFE42:
 1038              		.size	set_lipo_soc_arg, .-set_lipo_soc_arg
 1039              		.section	.text.lipo_soc,"ax",%progbits
 1040              		.align	2
 1041              		.global	lipo_soc
 1042              		.code	16
 1043              		.thumb_func
 1044              		.type	lipo_soc, %function
 1045              	lipo_soc:
 1046              	.LFB43:
 345:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1047              		.loc 1 345 0
 1048              		.cfi_startproc
 1049 0000 08B5     		push	{r3, lr}
 1050              		.cfi_def_cfa_offset 8
 1051              		.cfi_offset 3, -8
 1052              		.cfi_offset 14, -4
 1053              	.LVL116:
 347:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	switch (soc_measure_type)
 1054              		.loc 1 347 0
 1055 0002 084B     		ldr	r3, .L75
 1056 0004 9B78     		ldrb	r3, [r3, #2]
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 38


 1057 0006 002B     		cmp	r3, #0
 1058 0008 02D0     		beq	.L71
 1059 000a 012B     		cmp	r3, #1
 1060 000c 04D0     		beq	.L72
 1061 000e 07E0     		b	.L74
 1062              	.L71:
 350:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		socRet = readWord(BQ27441_COMMAND_SOC);
 1063              		.loc 1 350 0
 1064 0010 1C20     		mov	r0, #28
 1065 0012 FFF7FEFF 		bl	readWord
 1066              	.LVL117:
 351:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 1067              		.loc 1 351 0
 1068 0016 04E0     		b	.L70
 1069              	.LVL118:
 1070              	.L72:
 353:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		socRet = readWord(BQ27441_COMMAND_SOC_UNFL);
 1071              		.loc 1 353 0
 1072 0018 3020     		mov	r0, #48
 1073 001a FFF7FEFF 		bl	readWord
 1074              	.LVL119:
 354:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 1075              		.loc 1 354 0
 1076 001e 00E0     		b	.L70
 1077              	.LVL120:
 1078              	.L74:
 346:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t socRet = 0;
 1079              		.loc 1 346 0
 1080 0020 0020     		mov	r0, #0
 1081              	.LVL121:
 1082              	.L70:
 358:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1083              		.loc 1 358 0
 1084              		@ sp needed
 1085 0022 08BD     		pop	{r3, pc}
 1086              	.L76:
 1087              		.align	2
 1088              	.L75:
 1089 0024 00000000 		.word	.LANCHOR0
 1090              		.cfi_endproc
 1091              	.LFE43:
 1092              		.size	lipo_soc, .-lipo_soc
 1093              		.section	.text.set_lipo_soh_arg,"ax",%progbits
 1094              		.align	2
 1095              		.global	set_lipo_soh_arg
 1096              		.code	16
 1097              		.thumb_func
 1098              		.type	set_lipo_soh_arg, %function
 1099              	set_lipo_soh_arg:
 1100              	.LFB44:
 362:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** void set_lipo_soh_arg(soh_measure userInput){
 1101              		.loc 1 362 0
 1102              		.cfi_startproc
 1103              	.LVL122:
 363:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	soh_measure_type = userInput;
 1104              		.loc 1 363 0
 1105 0000 014B     		ldr	r3, .L78
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 39


 1106 0002 D870     		strb	r0, [r3, #3]
 364:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1107              		.loc 1 364 0
 1108              		@ sp needed
 1109 0004 7047     		bx	lr
 1110              	.L79:
 1111 0006 C046     		.align	2
 1112              	.L78:
 1113 0008 00000000 		.word	.LANCHOR0
 1114              		.cfi_endproc
 1115              	.LFE44:
 1116              		.size	set_lipo_soh_arg, .-set_lipo_soh_arg
 1117              		.section	.text.lipo_soh,"ax",%progbits
 1118              		.align	2
 1119              		.global	lipo_soh
 1120              		.code	16
 1121              		.thumb_func
 1122              		.type	lipo_soh, %function
 1123              	lipo_soh:
 1124              	.LFB45:
 366:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1125              		.loc 1 366 0
 1126              		.cfi_startproc
 1127 0000 08B5     		push	{r3, lr}
 1128              		.cfi_def_cfa_offset 8
 1129              		.cfi_offset 3, -8
 1130              		.cfi_offset 14, -4
 367:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t sohRaw = readWord(BQ27441_COMMAND_SOH);
 1131              		.loc 1 367 0
 1132 0002 2020     		mov	r0, #32
 1133 0004 FFF7FEFF 		bl	readWord
 1134              	.LVL123:
 368:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t sohStatus = sohRaw >> 8;
 1135              		.loc 1 368 0
 1136 0008 030A     		lsr	r3, r0, #8
 1137 000a DBB2     		uxtb	r3, r3
 1138              	.LVL124:
 369:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t sohPercent = sohRaw & 0x00FF;
 1139              		.loc 1 369 0
 1140 000c C0B2     		uxtb	r0, r0
 1141              	.LVL125:
 371:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (soh_measure_type == PERCENT)
 1142              		.loc 1 371 0
 1143 000e 034A     		ldr	r2, .L83
 1144 0010 D278     		ldrb	r2, [r2, #3]
 1145 0012 002A     		cmp	r2, #0
 1146 0014 00D0     		beq	.L81
 374:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return sohStatus;
 1147              		.loc 1 374 0
 1148 0016 181C     		mov	r0, r3
 1149              	.LVL126:
 1150              	.L81:
 375:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1151              		.loc 1 375 0
 1152              		@ sp needed
 1153 0018 08BD     		pop	{r3, pc}
 1154              	.L84:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 40


 1155 001a C046     		.align	2
 1156              	.L83:
 1157 001c 00000000 		.word	.LANCHOR0
 1158              		.cfi_endproc
 1159              	.LFE45:
 1160              		.size	lipo_soh, .-lipo_soh
 1161              		.section	.text.set_lipo_temperature_arg,"ax",%progbits
 1162              		.align	2
 1163              		.global	set_lipo_temperature_arg
 1164              		.code	16
 1165              		.thumb_func
 1166              		.type	set_lipo_temperature_arg, %function
 1167              	set_lipo_temperature_arg:
 1168              	.LFB46:
 379:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** void set_lipo_temperature_arg(temp_measure userInput){
 1169              		.loc 1 379 0
 1170              		.cfi_startproc
 1171              	.LVL127:
 380:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	temp_measure_type = userInput;
 1172              		.loc 1 380 0
 1173 0000 014B     		ldr	r3, .L86
 1174 0002 1871     		strb	r0, [r3, #4]
 381:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1175              		.loc 1 381 0
 1176              		@ sp needed
 1177 0004 7047     		bx	lr
 1178              	.L87:
 1179 0006 C046     		.align	2
 1180              	.L86:
 1181 0008 00000000 		.word	.LANCHOR0
 1182              		.cfi_endproc
 1183              	.LFE46:
 1184              		.size	set_lipo_temperature_arg, .-set_lipo_temperature_arg
 1185              		.section	.text.lipo_temperature,"ax",%progbits
 1186              		.align	2
 1187              		.global	lipo_temperature
 1188              		.code	16
 1189              		.thumb_func
 1190              		.type	lipo_temperature, %function
 1191              	lipo_temperature:
 1192              	.LFB47:
 383:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1193              		.loc 1 383 0
 1194              		.cfi_startproc
 1195 0000 08B5     		push	{r3, lr}
 1196              		.cfi_def_cfa_offset 8
 1197              		.cfi_offset 3, -8
 1198              		.cfi_offset 14, -4
 1199              	.LVL128:
 385:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	switch (temp_measure_type)
 1200              		.loc 1 385 0
 1201 0002 084B     		ldr	r3, .L94
 1202 0004 1B79     		ldrb	r3, [r3, #4]
 1203 0006 002B     		cmp	r3, #0
 1204 0008 02D0     		beq	.L90
 1205 000a 012B     		cmp	r3, #1
 1206 000c 04D0     		beq	.L91
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 41


 1207 000e 07E0     		b	.L93
 1208              	.L90:
 388:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		temp = readWord(BQ27441_COMMAND_TEMP);
 1209              		.loc 1 388 0
 1210 0010 0220     		mov	r0, #2
 1211 0012 FFF7FEFF 		bl	readWord
 1212              	.LVL129:
 389:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 1213              		.loc 1 389 0
 1214 0016 04E0     		b	.L89
 1215              	.LVL130:
 1216              	.L91:
 391:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		temp = readWord(BQ27441_COMMAND_INT_TEMP);
 1217              		.loc 1 391 0
 1218 0018 1E20     		mov	r0, #30
 1219 001a FFF7FEFF 		bl	readWord
 1220              	.LVL131:
 392:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		break;
 1221              		.loc 1 392 0
 1222 001e 00E0     		b	.L89
 1223              	.LVL132:
 1224              	.L93:
 384:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t temp = 0;
 1225              		.loc 1 384 0
 1226 0020 0020     		mov	r0, #0
 1227              	.LVL133:
 1228              	.L89:
 395:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1229              		.loc 1 395 0
 1230              		@ sp needed
 1231 0022 08BD     		pop	{r3, pc}
 1232              	.L95:
 1233              		.align	2
 1234              	.L94:
 1235 0024 00000000 		.word	.LANCHOR0
 1236              		.cfi_endproc
 1237              	.LFE47:
 1238              		.size	lipo_temperature, .-lipo_temperature
 1239              		.section	.text.lipo_GPOUTPolarity,"ax",%progbits
 1240              		.align	2
 1241              		.global	lipo_GPOUTPolarity
 1242              		.code	16
 1243              		.thumb_func
 1244              		.type	lipo_GPOUTPolarity, %function
 1245              	lipo_GPOUTPolarity:
 1246              	.LFB48:
 402:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1247              		.loc 1 402 0
 1248              		.cfi_startproc
 1249 0000 08B5     		push	{r3, lr}
 1250              		.cfi_def_cfa_offset 8
 1251              		.cfi_offset 3, -8
 1252              		.cfi_offset 14, -4
 403:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t opConfigRegister = opConfig();
 1253              		.loc 1 403 0
 1254 0002 FFF7FEFF 		bl	opConfig
 1255              	.LVL134:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 42


 405:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return (opConfigRegister & BQ27441_OPCONFIG_GPIOPOL);
 1256              		.loc 1 405 0
 1257 0006 8023     		mov	r3, #128
 1258 0008 1B01     		lsl	r3, r3, #4
 1259 000a 1840     		and	r0, r3
 1260              	.LVL135:
 406:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1261              		.loc 1 406 0
 1262              		@ sp needed
 1263 000c 08BD     		pop	{r3, pc}
 1264              		.cfi_endproc
 1265              	.LFE48:
 1266              		.size	lipo_GPOUTPolarity, .-lipo_GPOUTPolarity
 1267 000e C046     		.section	.text.lipo_GPOUTFunction,"ax",%progbits
 1268              		.align	2
 1269              		.global	lipo_GPOUTFunction
 1270              		.code	16
 1271              		.thumb_func
 1272              		.type	lipo_GPOUTFunction, %function
 1273              	lipo_GPOUTFunction:
 1274              	.LFB50:
 429:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1275              		.loc 1 429 0
 1276              		.cfi_startproc
 1277 0000 08B5     		push	{r3, lr}
 1278              		.cfi_def_cfa_offset 8
 1279              		.cfi_offset 3, -8
 1280              		.cfi_offset 14, -4
 430:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t opConfigRegister = opConfig();
 1281              		.loc 1 430 0
 1282 0002 FFF7FEFF 		bl	opConfig
 1283              	.LVL136:
 432:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return (opConfigRegister & BQ27441_OPCONFIG_BATLOWEN);
 1284              		.loc 1 432 0
 1285 0006 0423     		mov	r3, #4
 1286 0008 1840     		and	r0, r3
 1287              	.LVL137:
 433:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1288              		.loc 1 433 0
 1289              		@ sp needed
 1290 000a 08BD     		pop	{r3, pc}
 1291              		.cfi_endproc
 1292              	.LFE50:
 1293              		.size	lipo_GPOUTFunction, .-lipo_GPOUTFunction
 1294              		.section	.text.lipo_pulseGPOUT,"ax",%progbits
 1295              		.align	2
 1296              		.global	lipo_pulseGPOUT
 1297              		.code	16
 1298              		.thumb_func
 1299              		.type	lipo_pulseGPOUT, %function
 1300              	lipo_pulseGPOUT:
 1301              	.LFB62:
 529:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1302              		.loc 1 529 0
 1303              		.cfi_startproc
 1304 0000 08B5     		push	{r3, lr}
 1305              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 43


 1306              		.cfi_offset 3, -8
 1307              		.cfi_offset 14, -4
 530:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return executeControlWord(BQ27441_CONTROL_PULSE_SOC_INT);
 1308              		.loc 1 530 0
 1309 0002 2320     		mov	r0, #35
 1310 0004 FFF7FEFF 		bl	executeControlWord
 1311              	.LVL138:
 531:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1312              		.loc 1 531 0
 1313              		@ sp needed
 1314 0008 08BD     		pop	{r3, pc}
 1315              		.cfi_endproc
 1316              	.LFE62:
 1317              		.size	lipo_pulseGPOUT, .-lipo_pulseGPOUT
 1318 000a C046     		.section	.text.lipo_deviceType,"ax",%progbits
 1319              		.align	2
 1320              		.global	lipo_deviceType
 1321              		.code	16
 1322              		.thumb_func
 1323              		.type	lipo_deviceType, %function
 1324              	lipo_deviceType:
 1325              	.LFB63:
 539:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1326              		.loc 1 539 0
 1327              		.cfi_startproc
 1328 0000 08B5     		push	{r3, lr}
 1329              		.cfi_def_cfa_offset 8
 1330              		.cfi_offset 3, -8
 1331              		.cfi_offset 14, -4
 540:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readControlWord(BQ27441_CONTROL_DEVICE_TYPE);
 1332              		.loc 1 540 0
 1333 0002 0120     		mov	r0, #1
 1334 0004 FFF7FEFF 		bl	readControlWord
 1335              	.LVL139:
 541:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1336              		.loc 1 541 0
 1337              		@ sp needed
 1338 0008 08BD     		pop	{r3, pc}
 1339              		.cfi_endproc
 1340              	.LFE63:
 1341              		.size	lipo_deviceType, .-lipo_deviceType
 1342 000a C046     		.section	.text.lipo_begin,"ax",%progbits
 1343              		.align	2
 1344              		.global	lipo_begin
 1345              		.code	16
 1346              		.thumb_func
 1347              		.type	lipo_begin, %function
 1348              	lipo_begin:
 1349              	.LFB34:
 230:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1350              		.loc 1 230 0
 1351              		.cfi_startproc
 1352 0000 08B5     		push	{r3, lr}
 1353              		.cfi_def_cfa_offset 8
 1354              		.cfi_offset 3, -8
 1355              		.cfi_offset 14, -4
 1356              	.LVL140:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 44


 233:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	I2C_Start(); // Initialize I2C master
 1357              		.loc 1 233 0
 1358 0002 FFF7FEFF 		bl	I2C_Start
 1359              	.LVL141:
 235:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	deviceID = lipo_deviceType(); // Read deviceType from BQ27441
 1360              		.loc 1 235 0
 1361 0006 FFF7FEFF 		bl	lipo_deviceType
 1362              	.LVL142:
 237:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (deviceID == BQ27441_DEVICE_ID)
 1363              		.loc 1 237 0
 1364 000a 034B     		ldr	r3, .L103
 1365 000c 9842     		cmp	r0, r3
 1366 000e 01D1     		bne	.L102
 239:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return true; // If device ID is valid, return true
 1367              		.loc 1 239 0
 1368 0010 0120     		mov	r0, #1
 1369              	.LVL143:
 1370 0012 00E0     		b	.L101
 1371              	.LVL144:
 1372              	.L102:
 242:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return false; // Otherwise return false
 1373              		.loc 1 242 0
 1374 0014 0020     		mov	r0, #0
 1375              	.LVL145:
 1376              	.L101:
 243:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1377              		.loc 1 243 0
 1378              		@ sp needed
 1379 0016 08BD     		pop	{r3, pc}
 1380              	.L104:
 1381              		.align	2
 1382              	.L103:
 1383 0018 21040000 		.word	1057
 1384              		.cfi_endproc
 1385              	.LFE34:
 1386              		.size	lipo_begin, .-lipo_begin
 1387              		.section	.text.set_lipo_enterConfig_arg,"ax",%progbits
 1388              		.align	2
 1389              		.global	set_lipo_enterConfig_arg
 1390              		.code	16
 1391              		.thumb_func
 1392              		.type	set_lipo_enterConfig_arg, %function
 1393              	set_lipo_enterConfig_arg:
 1394              	.LFB64:
 546:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** void set_lipo_enterConfig_arg(bool userInput){
 1395              		.loc 1 546 0
 1396              		.cfi_startproc
 1397              	.LVL146:
 547:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	userControl = userInput;
 1398              		.loc 1 547 0
 1399 0000 014B     		ldr	r3, .L106
 1400 0002 1880     		strh	r0, [r3]
 548:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1401              		.loc 1 548 0
 1402              		@ sp needed
 1403 0004 7047     		bx	lr
 1404              	.L107:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 45


 1405 0006 C046     		.align	2
 1406              	.L106:
 1407 0008 00000000 		.word	.LANCHOR1
 1408              		.cfi_endproc
 1409              	.LFE64:
 1410              		.size	set_lipo_enterConfig_arg, .-set_lipo_enterConfig_arg
 1411              		.section	.text.set_lipo_exitConfig_arg,"ax",%progbits
 1412              		.align	2
 1413              		.global	set_lipo_exitConfig_arg
 1414              		.code	16
 1415              		.thumb_func
 1416              		.type	set_lipo_exitConfig_arg, %function
 1417              	set_lipo_exitConfig_arg:
 1418              	.LFB66:
 575:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** void set_lipo_exitConfig_arg(bool userInput){
 1419              		.loc 1 575 0
 1420              		.cfi_startproc
 1421              	.LVL147:
 576:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	resim = userInput;
 1422              		.loc 1 576 0
 1423 0000 014B     		ldr	r3, .L109
 1424 0002 5880     		strh	r0, [r3, #2]
 577:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1425              		.loc 1 577 0
 1426              		@ sp needed
 1427 0004 7047     		bx	lr
 1428              	.L110:
 1429 0006 C046     		.align	2
 1430              	.L109:
 1431 0008 00000000 		.word	.LANCHOR1
 1432              		.cfi_endproc
 1433              	.LFE66:
 1434              		.size	set_lipo_exitConfig_arg, .-set_lipo_exitConfig_arg
 1435              		.section	.text.lipo_flags,"ax",%progbits
 1436              		.align	2
 1437              		.global	lipo_flags
 1438              		.code	16
 1439              		.thumb_func
 1440              		.type	lipo_flags, %function
 1441              	lipo_flags:
 1442              	.LFB68:
 611:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1443              		.loc 1 611 0
 1444              		.cfi_startproc
 1445 0000 08B5     		push	{r3, lr}
 1446              		.cfi_def_cfa_offset 8
 1447              		.cfi_offset 3, -8
 1448              		.cfi_offset 14, -4
 612:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readWord(BQ27441_COMMAND_FLAGS);
 1449              		.loc 1 612 0
 1450 0002 0620     		mov	r0, #6
 1451 0004 FFF7FEFF 		bl	readWord
 1452              	.LVL148:
 613:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1453              		.loc 1 613 0
 1454              		@ sp needed
 1455 0008 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 46


 1456              		.cfi_endproc
 1457              	.LFE68:
 1458              		.size	lipo_flags, .-lipo_flags
 1459 000a C046     		.section	.text.lipo_socFlag,"ax",%progbits
 1460              		.align	2
 1461              		.global	lipo_socFlag
 1462              		.code	16
 1463              		.thumb_func
 1464              		.type	lipo_socFlag, %function
 1465              	lipo_socFlag:
 1466              	.LFB58:
 500:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1467              		.loc 1 500 0
 1468              		.cfi_startproc
 1469 0000 08B5     		push	{r3, lr}
 1470              		.cfi_def_cfa_offset 8
 1471              		.cfi_offset 3, -8
 1472              		.cfi_offset 14, -4
 501:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t flagState = lipo_flags();
 1473              		.loc 1 501 0
 1474 0002 FFF7FEFF 		bl	lipo_flags
 1475              	.LVL149:
 503:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return flagState & BQ27441_FLAG_SOC1;
 1476              		.loc 1 503 0
 1477 0006 0423     		mov	r3, #4
 1478 0008 1840     		and	r0, r3
 1479              	.LVL150:
 504:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1480              		.loc 1 504 0
 1481              		@ sp needed
 1482 000a 08BD     		pop	{r3, pc}
 1483              		.cfi_endproc
 1484              	.LFE58:
 1485              		.size	lipo_socFlag, .-lipo_socFlag
 1486              		.section	.text.lipo_socfFlag,"ax",%progbits
 1487              		.align	2
 1488              		.global	lipo_socfFlag
 1489              		.code	16
 1490              		.thumb_func
 1491              		.type	lipo_socfFlag, %function
 1492              	lipo_socfFlag:
 1493              	.LFB59:
 508:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1494              		.loc 1 508 0
 1495              		.cfi_startproc
 1496 0000 08B5     		push	{r3, lr}
 1497              		.cfi_def_cfa_offset 8
 1498              		.cfi_offset 3, -8
 1499              		.cfi_offset 14, -4
 509:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t flagState = lipo_flags();
 1500              		.loc 1 509 0
 1501 0002 FFF7FEFF 		bl	lipo_flags
 1502              	.LVL151:
 511:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return flagState & BQ27441_FLAG_SOCF;
 1503              		.loc 1 511 0
 1504 0006 0223     		mov	r3, #2
 1505 0008 1840     		and	r0, r3
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 47


 1506              	.LVL152:
 512:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1507              		.loc 1 512 0
 1508              		@ sp needed
 1509 000a 08BD     		pop	{r3, pc}
 1510              		.cfi_endproc
 1511              	.LFE59:
 1512              		.size	lipo_socfFlag, .-lipo_socfFlag
 1513              		.section	.text.lipo_exitConfig,"ax",%progbits
 1514              		.align	2
 1515              		.global	lipo_exitConfig
 1516              		.code	16
 1517              		.thumb_func
 1518              		.type	lipo_exitConfig, %function
 1519              	lipo_exitConfig:
 1520              	.LFB67:
 579:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1521              		.loc 1 579 0
 1522              		.cfi_startproc
 1523 0000 10B5     		push	{r4, lr}
 1524              		.cfi_def_cfa_offset 8
 1525              		.cfi_offset 4, -8
 1526              		.cfi_offset 14, -4
 587:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (resim)
 1527              		.loc 1 587 0
 1528 0002 154B     		ldr	r3, .L123
 1529 0004 5B88     		ldrh	r3, [r3, #2]
 1530 0006 002B     		cmp	r3, #0
 1531 0008 1ED0     		beq	.L115
 589:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		if (softReset())
 1532              		.loc 1 589 0
 1533 000a FFF7FEFF 		bl	softReset
 1534              	.LVL153:
 1535 000e 0028     		cmp	r0, #0
 1536 0010 05D1     		bne	.L120
 1537              	.LBB4:
 1538 0012 20E0     		b	.L117
 1539              	.LVL154:
 1540              	.L119:
 593:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 				CyDelay(1);
 1541              		.loc 1 593 0
 1542 0014 0120     		mov	r0, #1
 1543 0016 FFF7FEFF 		bl	CyDelay
 1544              	.LVL155:
 592:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 			while ((timeout--) && ((lipo_flags() & BQ27441_FLAG_CFGUPMODE)))
 1545              		.loc 1 592 0
 1546 001a A2B2     		uxth	r2, r4
 1547 001c 01E0     		b	.L116
 1548              	.LVL156:
 1549              	.L120:
 1550              	.LBE4:
 1551 001e FA22     		mov	r2, #250
 1552 0020 D200     		lsl	r2, r2, #3
 1553              	.L116:
 1554              	.LVL157:
 1555              	.LBB5:
 1556 0022 531E     		sub	r3, r2, #1
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 48


 1557 0024 9CB2     		uxth	r4, r3
 1558              	.LVL158:
 1559 0026 002A     		cmp	r2, #0
 1560 0028 03D0     		beq	.L118
 592:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 			while ((timeout--) && ((lipo_flags() & BQ27441_FLAG_CFGUPMODE)))
 1561              		.loc 1 592 0 is_stmt 0 discriminator 1
 1562 002a FFF7FEFF 		bl	lipo_flags
 1563              	.LVL159:
 1564 002e C306     		lsl	r3, r0, #27
 1565 0030 F0D4     		bmi	.L119
 1566              	.L118:
 594:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 			if (timeout > 0)
 1567              		.loc 1 594 0 is_stmt 1
 1568 0032 23B2     		sxth	r3, r4
 1569 0034 002B     		cmp	r3, #0
 1570 0036 0BDD     		ble	.L121
 596:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 				if (_sealFlag)
 1571              		.loc 1 596 0
 1572 0038 084B     		ldr	r3, .L123+4
 1573 003a DB88     		ldrh	r3, [r3, #6]
 1574 003c 002B     		cmp	r3, #0
 1575 003e 09D0     		beq	.L122
 597:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 					seal(); // Seal back up if we IC was sealed coming in
 1576              		.loc 1 597 0
 1577 0040 FFF7FEFF 		bl	seal
 1578              	.LVL160:
 598:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 				return true;
 1579              		.loc 1 598 0
 1580 0044 0120     		mov	r0, #1
 1581 0046 06E0     		b	.L117
 1582              	.LVL161:
 1583              	.L115:
 1584              	.LBE5:
 605:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return executeControlWord(BQ27441_CONTROL_EXIT_CFGUPDATE);
 1585              		.loc 1 605 0
 1586 0048 4320     		mov	r0, #67
 1587 004a FFF7FEFF 		bl	executeControlWord
 1588              	.LVL162:
 1589 004e 02E0     		b	.L117
 1590              	.LVL163:
 1591              	.L121:
 601:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return false;
 1592              		.loc 1 601 0
 1593 0050 0020     		mov	r0, #0
 1594 0052 00E0     		b	.L117
 1595              	.L122:
 1596              	.LBB6:
 598:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 				return true;
 1597              		.loc 1 598 0
 1598 0054 0120     		mov	r0, #1
 1599              	.LVL164:
 1600              	.L117:
 1601              	.LBE6:
 607:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1602              		.loc 1 607 0
 1603              		@ sp needed
 1604 0056 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 49


 1605              	.L124:
 1606              		.align	2
 1607              	.L123:
 1608 0058 00000000 		.word	.LANCHOR1
 1609 005c 00000000 		.word	.LANCHOR0
 1610              		.cfi_endproc
 1611              	.LFE67:
 1612              		.size	lipo_exitConfig, .-lipo_exitConfig
 1613              		.section	.text.lipo_status,"ax",%progbits
 1614              		.align	2
 1615              		.global	lipo_status
 1616              		.code	16
 1617              		.thumb_func
 1618              		.type	lipo_status, %function
 1619              	lipo_status:
 1620              	.LFB69:
 617:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1621              		.loc 1 617 0
 1622              		.cfi_startproc
 1623 0000 08B5     		push	{r3, lr}
 1624              		.cfi_def_cfa_offset 8
 1625              		.cfi_offset 3, -8
 1626              		.cfi_offset 14, -4
 618:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readControlWord(BQ27441_CONTROL_STATUS);
 1627              		.loc 1 618 0
 1628 0002 0020     		mov	r0, #0
 1629 0004 FFF7FEFF 		bl	readControlWord
 1630              	.LVL165:
 619:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1631              		.loc 1 619 0
 1632              		@ sp needed
 1633 0008 08BD     		pop	{r3, pc}
 1634              		.cfi_endproc
 1635              	.LFE69:
 1636              		.size	lipo_status, .-lipo_status
 1637 000a C046     		.section	.text.sealed,"ax",%progbits
 1638              		.align	2
 1639              		.code	16
 1640              		.thumb_func
 1641              		.type	sealed, %function
 1642              	sealed:
 1643              	.LFB70:
 625:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1644              		.loc 1 625 0
 1645              		.cfi_startproc
 1646 0000 08B5     		push	{r3, lr}
 1647              		.cfi_def_cfa_offset 8
 1648              		.cfi_offset 3, -8
 1649              		.cfi_offset 14, -4
 626:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t stat = lipo_status();
 1650              		.loc 1 626 0
 1651 0002 FFF7FEFF 		bl	lipo_status
 1652              	.LVL166:
 627:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return (stat & BQ27441_STATUS_SS);
 1653              		.loc 1 627 0
 1654 0006 8023     		mov	r3, #128
 1655 0008 9B01     		lsl	r3, r3, #6
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 50


 1656 000a 1840     		and	r0, r3
 1657              	.LVL167:
 628:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1658              		.loc 1 628 0
 1659              		@ sp needed
 1660 000c 08BD     		pop	{r3, pc}
 1661              		.cfi_endproc
 1662              	.LFE70:
 1663              		.size	sealed, .-sealed
 1664 000e C046     		.section	.text.lipo_enterConfig,"ax",%progbits
 1665              		.align	2
 1666              		.global	lipo_enterConfig
 1667              		.code	16
 1668              		.thumb_func
 1669              		.type	lipo_enterConfig, %function
 1670              	lipo_enterConfig:
 1671              	.LFB65:
 550:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1672              		.loc 1 550 0
 1673              		.cfi_startproc
 1674 0000 10B5     		push	{r4, lr}
 1675              		.cfi_def_cfa_offset 8
 1676              		.cfi_offset 4, -8
 1677              		.cfi_offset 14, -4
 551:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (userControl)
 1678              		.loc 1 551 0
 1679 0002 164B     		ldr	r3, .L136
 1680 0004 1B88     		ldrh	r3, [r3]
 1681 0006 002B     		cmp	r3, #0
 1682 0008 02D0     		beq	.L128
 552:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		_userConfigControl = true;
 1683              		.loc 1 552 0
 1684 000a 0122     		mov	r2, #1
 1685 000c 144B     		ldr	r3, .L136+4
 1686 000e 1A81     		strh	r2, [r3, #8]
 1687              	.L128:
 554:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (sealed())
 1688              		.loc 1 554 0
 1689 0010 FFF7FEFF 		bl	sealed
 1690              	.LVL168:
 1691 0014 0028     		cmp	r0, #0
 1692 0016 04D0     		beq	.L129
 556:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		_sealFlag = true;
 1693              		.loc 1 556 0
 1694 0018 0122     		mov	r2, #1
 1695 001a 114B     		ldr	r3, .L136+4
 1696 001c DA80     		strh	r2, [r3, #6]
 557:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		unseal(); // Must be unsealed before making changes
 1697              		.loc 1 557 0
 1698 001e FFF7FEFF 		bl	unseal
 1699              	.LVL169:
 1700              	.L129:
 560:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (executeControlWord(BQ27441_CONTROL_SET_CFGUPDATE))
 1701              		.loc 1 560 0
 1702 0022 1320     		mov	r0, #19
 1703 0024 FFF7FEFF 		bl	executeControlWord
 1704              	.LVL170:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 51


 1705 0028 0028     		cmp	r0, #0
 1706 002a 05D1     		bne	.L134
 1707              	.LBB7:
 1708 002c 14E0     		b	.L131
 1709              	.LVL171:
 1710              	.L133:
 564:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 			CyDelay(1);
 1711              		.loc 1 564 0
 1712 002e 0120     		mov	r0, #1
 1713 0030 FFF7FEFF 		bl	CyDelay
 1714              	.LVL172:
 563:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		while ((timeout--) && (!(lipo_status() & BQ27441_FLAG_CFGUPMODE)))
 1715              		.loc 1 563 0
 1716 0034 A2B2     		uxth	r2, r4
 1717 0036 01E0     		b	.L130
 1718              	.LVL173:
 1719              	.L134:
 1720              	.LBE7:
 1721 0038 FA22     		mov	r2, #250
 1722 003a D200     		lsl	r2, r2, #3
 1723              	.L130:
 1724              	.LVL174:
 1725              	.LBB8:
 1726 003c 531E     		sub	r3, r2, #1
 1727 003e 9CB2     		uxth	r4, r3
 1728              	.LVL175:
 1729 0040 002A     		cmp	r2, #0
 1730 0042 03D0     		beq	.L132
 563:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		while ((timeout--) && (!(lipo_status() & BQ27441_FLAG_CFGUPMODE)))
 1731              		.loc 1 563 0 is_stmt 0 discriminator 1
 1732 0044 FFF7FEFF 		bl	lipo_status
 1733              	.LVL176:
 1734 0048 C306     		lsl	r3, r0, #27
 1735 004a F0D5     		bpl	.L133
 1736              	.L132:
 566:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		if (timeout > 0)
 1737              		.loc 1 566 0 is_stmt 1
 1738 004c 23B2     		sxth	r3, r4
 1739 004e 002B     		cmp	r3, #0
 1740 0050 01DD     		ble	.L135
 567:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 			return true;
 1741              		.loc 1 567 0
 1742 0052 0120     		mov	r0, #1
 1743 0054 00E0     		b	.L131
 1744              	.L135:
 1745              	.LBE8:
 570:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return false;
 1746              		.loc 1 570 0
 1747 0056 0020     		mov	r0, #0
 1748              	.LVL177:
 1749              	.L131:
 571:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1750              		.loc 1 571 0
 1751              		@ sp needed
 1752 0058 10BD     		pop	{r4, pc}
 1753              	.L137:
 1754 005a C046     		.align	2
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 52


 1755              	.L136:
 1756 005c 00000000 		.word	.LANCHOR1
 1757 0060 00000000 		.word	.LANCHOR0
 1758              		.cfi_endproc
 1759              	.LFE65:
 1760              		.size	lipo_enterConfig, .-lipo_enterConfig
 1761              		.section	.text.writeExtendedData,"ax",%progbits
 1762              		.align	2
 1763              		.code	16
 1764              		.thumb_func
 1765              		.type	writeExtendedData, %function
 1766              	writeExtendedData:
 1767              	.LFB88:
 813:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1768              		.loc 1 813 0
 1769              		.cfi_startproc
 1770              	.LVL178:
 1771 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1772              		.cfi_def_cfa_offset 24
 1773              		.cfi_offset 3, -24
 1774              		.cfi_offset 4, -20
 1775              		.cfi_offset 5, -16
 1776              		.cfi_offset 6, -12
 1777              		.cfi_offset 7, -8
 1778              		.cfi_offset 14, -4
 1779 0002 041C     		mov	r4, r0
 1780 0004 0E1C     		mov	r6, r1
 1781 0006 171C     		mov	r7, r2
 1782 0008 1D1C     		mov	r5, r3
 814:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	serial_println("MADE 1");
 1783              		.loc 1 814 0
 1784 000a 2348     		ldr	r0, .L145
 1785              	.LVL179:
 1786 000c FFF7FEFF 		bl	serial_println
 1787              	.LVL180:
 815:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (len > 32)
 1788              		.loc 1 815 0
 1789 0010 202D     		cmp	r5, #32
 1790 0012 3FD8     		bhi	.L144
 818:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (!_userConfigControl){
 1791              		.loc 1 818 0
 1792 0014 214B     		ldr	r3, .L145+4
 1793 0016 1B89     		ldrh	r3, [r3, #8]
 1794 0018 002B     		cmp	r3, #0
 1795 001a 04D1     		bne	.L140
 819:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	    userControl = false;
 1796              		.loc 1 819 0
 1797 001c 0022     		mov	r2, #0
 1798 001e 204B     		ldr	r3, .L145+8
 1799 0020 1A80     		strh	r2, [r3]
 820:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****         lipo_enterConfig();
 1800              		.loc 1 820 0
 1801 0022 FFF7FEFF 		bl	lipo_enterConfig
 1802              	.LVL181:
 1803              	.L140:
 822:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****     serial_println("MADE 2");
 1804              		.loc 1 822 0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 53


 1805 0026 1F48     		ldr	r0, .L145+12
 1806 0028 FFF7FEFF 		bl	serial_println
 1807              	.LVL182:
 823:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (!blockDataControl())	  // // enable block data memory control
 1808              		.loc 1 823 0
 1809 002c FFF7FEFF 		bl	blockDataControl
 1810              	.LVL183:
 1811 0030 0028     		cmp	r0, #0
 1812 0032 30D0     		beq	.L139
 825:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (!blockDataClass(classID)) // Write class ID using DataBlockClass()
 1813              		.loc 1 825 0
 1814 0034 201C     		mov	r0, r4
 1815 0036 FFF7FEFF 		bl	blockDataClass
 1816              	.LVL184:
 1817 003a 0028     		cmp	r0, #0
 1818 003c 2BD0     		beq	.L139
 828:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	blockDataOffset(offset / 32); // Write 32-bit block offset (usually 0)
 1819              		.loc 1 828 0
 1820 003e 7009     		lsr	r0, r6, #5
 1821 0040 FFF7FEFF 		bl	blockDataOffset
 1822              	.LVL185:
 829:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	computeBlockChecksum();		  // Compute checksum going in
 1823              		.loc 1 829 0
 1824 0044 FFF7FEFF 		bl	computeBlockChecksum
 1825              	.LVL186:
 830:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t oldCsum = blockDataChecksum();
 1826              		.loc 1 830 0
 1827 0048 FFF7FEFF 		bl	blockDataChecksum
 1828              	.LVL187:
 831:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	serial_println("MADE 3");
 1829              		.loc 1 831 0
 1830 004c 1648     		ldr	r0, .L145+16
 1831 004e FFF7FEFF 		bl	serial_println
 1832              	.LVL188:
 834:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	for (i = 0; i < len; i++)
 1833              		.loc 1 834 0
 1834 0052 0024     		mov	r4, #0
 1835 0054 07E0     		b	.L141
 1836              	.LVL189:
 1837              	.L142:
 838:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		writeBlockData((offset % 32) + i, data[i]);
 1838              		.loc 1 838 0 discriminator 3
 1839 0056 1F20     		mov	r0, #31
 1840 0058 3040     		and	r0, r6
 1841 005a 0019     		add	r0, r0, r4
 1842 005c C0B2     		uxtb	r0, r0
 1843 005e 395D     		ldrb	r1, [r7, r4]
 1844 0060 FFF7FEFF 		bl	writeBlockData
 1845              	.LVL190:
 834:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	for (i = 0; i < len; i++)
 1846              		.loc 1 834 0 discriminator 3
 1847 0064 0134     		add	r4, r4, #1
 1848              	.LVL191:
 1849              	.L141:
 834:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	for (i = 0; i < len; i++)
 1850              		.loc 1 834 0 is_stmt 0 discriminator 1
 1851 0066 A542     		cmp	r5, r4
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 54


 1852 0068 F5DC     		bgt	.L142
 840:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	serial_println("MADE 4");
 1853              		.loc 1 840 0 is_stmt 1
 1854 006a 1048     		ldr	r0, .L145+20
 1855 006c FFF7FEFF 		bl	serial_println
 1856              	.LVL192:
 842:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t newCsum = computeBlockChecksum(); // Compute the new checksum
 1857              		.loc 1 842 0
 1858 0070 FFF7FEFF 		bl	computeBlockChecksum
 1859              	.LVL193:
 843:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	writeBlockChecksum(newCsum);
 1860              		.loc 1 843 0
 1861 0074 FFF7FEFF 		bl	writeBlockChecksum
 1862              	.LVL194:
 844:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	serial_println("MADE 5");
 1863              		.loc 1 844 0
 1864 0078 0D48     		ldr	r0, .L145+24
 1865 007a FFF7FEFF 		bl	serial_println
 1866              	.LVL195:
 845:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (!_userConfigControl)
 1867              		.loc 1 845 0
 1868 007e 074B     		ldr	r3, .L145+4
 1869 0080 1B89     		ldrh	r3, [r3, #8]
 1870 0082 002B     		cmp	r3, #0
 1871 0084 01D1     		bne	.L143
 846:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		lipo_exitConfig();
 1872              		.loc 1 846 0
 1873 0086 FFF7FEFF 		bl	lipo_exitConfig
 1874              	.LVL196:
 1875              	.L143:
 847:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	serial_println("MADE 6");
 1876              		.loc 1 847 0
 1877 008a 0A48     		ldr	r0, .L145+28
 1878 008c FFF7FEFF 		bl	serial_println
 1879              	.LVL197:
 848:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return true;
 1880              		.loc 1 848 0
 1881 0090 0120     		mov	r0, #1
 1882 0092 00E0     		b	.L139
 1883              	.LVL198:
 1884              	.L144:
 816:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return false;
 1885              		.loc 1 816 0
 1886 0094 0020     		mov	r0, #0
 1887              	.L139:
 849:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1888              		.loc 1 849 0
 1889              		@ sp needed
 1890              	.LVL199:
 1891 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1892              	.L146:
 1893              		.align	2
 1894              	.L145:
 1895 0098 00000000 		.word	.LC17
 1896 009c 00000000 		.word	.LANCHOR0
 1897 00a0 00000000 		.word	.LANCHOR1
 1898 00a4 08000000 		.word	.LC21
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 55


 1899 00a8 10000000 		.word	.LC23
 1900 00ac 18000000 		.word	.LC25
 1901 00b0 20000000 		.word	.LC27
 1902 00b4 28000000 		.word	.LC29
 1903              		.cfi_endproc
 1904              	.LFE88:
 1905              		.size	writeExtendedData, .-writeExtendedData
 1906              		.section	.text.lipo_setCapacity,"ax",%progbits
 1907              		.align	2
 1908              		.global	lipo_setCapacity
 1909              		.code	16
 1910              		.thumb_func
 1911              		.type	lipo_setCapacity, %function
 1912              	lipo_setCapacity:
 1913              	.LFB35:
 247:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1914              		.loc 1 247 0
 1915              		.cfi_startproc
 1916              	.LVL200:
 1917 0000 00B5     		push	{lr}
 1918              		.cfi_def_cfa_offset 4
 1919              		.cfi_offset 14, -4
 1920 0002 83B0     		sub	sp, sp, #12
 1921              		.cfi_def_cfa_offset 16
 251:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t capMSB = capacity >> 8;
 1922              		.loc 1 251 0
 1923 0004 030A     		lsr	r3, r0, #8
 1924              	.LVL201:
 253:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t capacityData[2] = {capMSB, capLSB};
 1925              		.loc 1 253 0
 1926 0006 01AA     		add	r2, sp, #4
 1927 0008 1370     		strb	r3, [r2]
 1928 000a 5070     		strb	r0, [r2, #1]
 254:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return writeExtendedData(BQ27441_ID_STATE, 10, capacityData, 2);
 1929              		.loc 1 254 0
 1930 000c 5220     		mov	r0, #82
 1931              	.LVL202:
 1932 000e 0A21     		mov	r1, #10
 1933 0010 0223     		mov	r3, #2
 1934              	.LVL203:
 1935 0012 FFF7FEFF 		bl	writeExtendedData
 1936              	.LVL204:
 255:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1937              		.loc 1 255 0
 1938 0016 03B0     		add	sp, sp, #12
 1939              		@ sp needed
 1940 0018 00BD     		pop	{pc}
 1941              		.cfi_endproc
 1942              	.LFE35:
 1943              		.size	lipo_setCapacity, .-lipo_setCapacity
 1944 001a C046     		.section	.text.writeOpConfig,"ax",%progbits
 1945              		.align	2
 1946              		.code	16
 1947              		.thumb_func
 1948              		.type	writeOpConfig, %function
 1949              	writeOpConfig:
 1950              	.LFB74:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 56


 656:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1951              		.loc 1 656 0
 1952              		.cfi_startproc
 1953              	.LVL205:
 1954 0000 00B5     		push	{lr}
 1955              		.cfi_def_cfa_offset 4
 1956              		.cfi_offset 14, -4
 1957 0002 83B0     		sub	sp, sp, #12
 1958              		.cfi_def_cfa_offset 16
 657:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t opConfigMSB = value >> 8;
 1959              		.loc 1 657 0
 1960 0004 030A     		lsr	r3, r0, #8
 1961              	.LVL206:
 659:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t opConfigData[2] = {opConfigMSB, opConfigLSB};
 1962              		.loc 1 659 0
 1963 0006 01AA     		add	r2, sp, #4
 1964 0008 1370     		strb	r3, [r2]
 1965 000a 5070     		strb	r0, [r2, #1]
 662:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return writeExtendedData(BQ27441_ID_REGISTERS, 0, opConfigData, 2);
 1966              		.loc 1 662 0
 1967 000c 4020     		mov	r0, #64
 1968              	.LVL207:
 1969 000e 0021     		mov	r1, #0
 1970 0010 0223     		mov	r3, #2
 1971              	.LVL208:
 1972 0012 FFF7FEFF 		bl	writeExtendedData
 1973              	.LVL209:
 663:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 1974              		.loc 1 663 0
 1975 0016 03B0     		add	sp, sp, #12
 1976              		@ sp needed
 1977 0018 00BD     		pop	{pc}
 1978              		.cfi_endproc
 1979              	.LFE74:
 1980              		.size	writeOpConfig, .-writeOpConfig
 1981 001a C046     		.section	.text.lipo_setGPOUTPolarity,"ax",%progbits
 1982              		.align	2
 1983              		.global	lipo_setGPOUTPolarity
 1984              		.code	16
 1985              		.thumb_func
 1986              		.type	lipo_setGPOUTPolarity, %function
 1987              	lipo_setGPOUTPolarity:
 1988              	.LFB49:
 410:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 1989              		.loc 1 410 0
 1990              		.cfi_startproc
 1991              	.LVL210:
 1992 0000 10B5     		push	{r4, lr}
 1993              		.cfi_def_cfa_offset 8
 1994              		.cfi_offset 4, -8
 1995              		.cfi_offset 14, -4
 1996 0002 041C     		mov	r4, r0
 411:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t oldOpConfig = opConfig();
 1997              		.loc 1 411 0
 1998 0004 FFF7FEFF 		bl	opConfig
 1999              	.LVL211:
 414:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if ((activeHigh && (oldOpConfig & BQ27441_OPCONFIG_GPIOPOL)) ||
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 57


 2000              		.loc 1 414 0
 2001 0008 002C     		cmp	r4, #0
 2002 000a 01D0     		beq	.L150
 414:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if ((activeHigh && (oldOpConfig & BQ27441_OPCONFIG_GPIOPOL)) ||
 2003              		.loc 1 414 0 is_stmt 0 discriminator 1
 2004 000c 0305     		lsl	r3, r0, #20
 2005 000e 0FD4     		bmi	.L155
 2006              	.L150:
 414:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if ((activeHigh && (oldOpConfig & BQ27441_OPCONFIG_GPIOPOL)) ||
 2007              		.loc 1 414 0 discriminator 3
 2008 0010 002C     		cmp	r4, #0
 2009 0012 01D1     		bne	.L152
 415:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		(!activeHigh && !(oldOpConfig & BQ27441_OPCONFIG_GPIOPOL)))
 2010              		.loc 1 415 0 is_stmt 1
 2011 0014 0305     		lsl	r3, r0, #20
 2012 0016 0DD5     		bpl	.L156
 2013              	.L152:
 2014              	.LVL212:
 419:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (activeHigh)
 2015              		.loc 1 419 0
 2016 0018 002C     		cmp	r4, #0
 2017 001a 04D0     		beq	.L153
 420:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		newOpConfig |= BQ27441_OPCONFIG_GPIOPOL;
 2018              		.loc 1 420 0
 2019 001c 8023     		mov	r3, #128
 2020 001e 1B01     		lsl	r3, r3, #4
 2021 0020 1843     		orr	r0, r3
 2022              	.LVL213:
 2023 0022 80B2     		uxth	r0, r0
 2024              	.LVL214:
 2025 0024 01E0     		b	.L154
 2026              	.LVL215:
 2027              	.L153:
 422:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		newOpConfig &= ~(BQ27441_OPCONFIG_GPIOPOL);
 2028              		.loc 1 422 0
 2029 0026 044B     		ldr	r3, .L157
 2030 0028 1840     		and	r0, r3
 2031              	.LVL216:
 2032              	.L154:
 424:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return writeOpConfig(newOpConfig);
 2033              		.loc 1 424 0
 2034 002a FFF7FEFF 		bl	writeOpConfig
 2035              	.LVL217:
 2036 002e 02E0     		b	.L151
 2037              	.LVL218:
 2038              	.L155:
 416:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return true;
 2039              		.loc 1 416 0
 2040 0030 0120     		mov	r0, #1
 2041              	.LVL219:
 2042 0032 00E0     		b	.L151
 2043              	.LVL220:
 2044              	.L156:
 2045 0034 0120     		mov	r0, #1
 2046              	.LVL221:
 2047              	.L151:
 425:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 58


 2048              		.loc 1 425 0
 2049              		@ sp needed
 2050 0036 10BD     		pop	{r4, pc}
 2051              	.L158:
 2052              		.align	2
 2053              	.L157:
 2054 0038 FFF70000 		.word	63487
 2055              		.cfi_endproc
 2056              	.LFE49:
 2057              		.size	lipo_setGPOUTPolarity, .-lipo_setGPOUTPolarity
 2058              		.section	.text.lipo_setGPOUTFunction,"ax",%progbits
 2059              		.align	2
 2060              		.global	lipo_setGPOUTFunction
 2061              		.code	16
 2062              		.thumb_func
 2063              		.type	lipo_setGPOUTFunction, %function
 2064              	lipo_setGPOUTFunction:
 2065              	.LFB51:
 437:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 2066              		.loc 1 437 0
 2067              		.cfi_startproc
 2068              	.LVL222:
 2069 0000 10B5     		push	{r4, lr}
 2070              		.cfi_def_cfa_offset 8
 2071              		.cfi_offset 4, -8
 2072              		.cfi_offset 14, -4
 2073 0002 041C     		mov	r4, r0
 438:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint16_t oldOpConfig = opConfig();
 2074              		.loc 1 438 0
 2075 0004 FFF7FEFF 		bl	opConfig
 2076              	.LVL223:
 441:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if ((function && (oldOpConfig & BQ27441_OPCONFIG_BATLOWEN)) ||
 2077              		.loc 1 441 0
 2078 0008 002C     		cmp	r4, #0
 2079 000a 01D0     		beq	.L160
 441:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if ((function && (oldOpConfig & BQ27441_OPCONFIG_BATLOWEN)) ||
 2080              		.loc 1 441 0 is_stmt 0 discriminator 1
 2081 000c 4307     		lsl	r3, r0, #29
 2082 000e 0ED4     		bmi	.L165
 2083              	.L160:
 441:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if ((function && (oldOpConfig & BQ27441_OPCONFIG_BATLOWEN)) ||
 2084              		.loc 1 441 0 discriminator 3
 2085 0010 002C     		cmp	r4, #0
 2086 0012 01D1     		bne	.L162
 442:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		(!function && !(oldOpConfig & BQ27441_OPCONFIG_BATLOWEN)))
 2087              		.loc 1 442 0 is_stmt 1
 2088 0014 4307     		lsl	r3, r0, #29
 2089 0016 0CD5     		bpl	.L166
 2090              	.L162:
 2091              	.LVL224:
 447:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (function)
 2092              		.loc 1 447 0
 2093 0018 002C     		cmp	r4, #0
 2094 001a 03D0     		beq	.L163
 448:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		newOpConfig |= BQ27441_OPCONFIG_BATLOWEN;
 2095              		.loc 1 448 0
 2096 001c 0423     		mov	r3, #4
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 59


 2097 001e 1843     		orr	r0, r3
 2098              	.LVL225:
 2099 0020 80B2     		uxth	r0, r0
 2100              	.LVL226:
 2101 0022 01E0     		b	.L164
 2102              	.LVL227:
 2103              	.L163:
 450:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		newOpConfig &= ~(BQ27441_OPCONFIG_BATLOWEN);
 2104              		.loc 1 450 0
 2105 0024 044B     		ldr	r3, .L167
 2106 0026 1840     		and	r0, r3
 2107              	.LVL228:
 2108              	.L164:
 453:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return writeOpConfig(newOpConfig);
 2109              		.loc 1 453 0
 2110 0028 FFF7FEFF 		bl	writeOpConfig
 2111              	.LVL229:
 2112 002c 02E0     		b	.L161
 2113              	.LVL230:
 2114              	.L165:
 443:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return true;
 2115              		.loc 1 443 0
 2116 002e 0120     		mov	r0, #1
 2117              	.LVL231:
 2118 0030 00E0     		b	.L161
 2119              	.LVL232:
 2120              	.L166:
 2121 0032 0120     		mov	r0, #1
 2122              	.LVL233:
 2123              	.L161:
 454:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 2124              		.loc 1 454 0
 2125              		@ sp needed
 2126 0034 10BD     		pop	{r4, pc}
 2127              	.L168:
 2128 0036 C046     		.align	2
 2129              	.L167:
 2130 0038 FBFF0000 		.word	65531
 2131              		.cfi_endproc
 2132              	.LFE51:
 2133              		.size	lipo_setGPOUTFunction, .-lipo_setGPOUTFunction
 2134              		.section	.text.lipo_setSOC1Thresholds,"ax",%progbits
 2135              		.align	2
 2136              		.global	lipo_setSOC1Thresholds
 2137              		.code	16
 2138              		.thumb_func
 2139              		.type	lipo_setSOC1Thresholds, %function
 2140              	lipo_setSOC1Thresholds:
 2141              	.LFB54:
 470:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 2142              		.loc 1 470 0
 2143              		.cfi_startproc
 2144              	.LVL234:
 2145 0000 00B5     		push	{lr}
 2146              		.cfi_def_cfa_offset 4
 2147              		.cfi_offset 14, -4
 2148 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 60


 2149              		.cfi_def_cfa_offset 16
 472:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	thresholds[0] = constrain(set, 0, 100);
 2150              		.loc 1 472 0
 2151 0004 031C     		add	r3, r0, #0
 2152 0006 6428     		cmp	r0, #100
 2153 0008 00D9     		bls	.L170
 2154 000a 6423     		mov	r3, #100
 2155              	.L170:
 2156 000c 01AA     		add	r2, sp, #4
 2157 000e 1370     		strb	r3, [r2]
 473:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	thresholds[1] = constrain(clear, 0, 100);
 2158              		.loc 1 473 0
 2159 0010 0B1C     		add	r3, r1, #0
 2160 0012 6429     		cmp	r1, #100
 2161 0014 00D9     		bls	.L171
 2162 0016 6423     		mov	r3, #100
 2163              	.L171:
 2164 0018 01AA     		add	r2, sp, #4
 2165 001a 5370     		strb	r3, [r2, #1]
 474:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return writeExtendedData(BQ27441_ID_DISCHARGE, 0, thresholds, 2);
 2166              		.loc 1 474 0
 2167 001c 3120     		mov	r0, #49
 2168              	.LVL235:
 2169 001e 0021     		mov	r1, #0
 2170              	.LVL236:
 2171 0020 0223     		mov	r3, #2
 2172 0022 FFF7FEFF 		bl	writeExtendedData
 2173              	.LVL237:
 475:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 2174              		.loc 1 475 0
 2175 0026 03B0     		add	sp, sp, #12
 2176              		@ sp needed
 2177 0028 00BD     		pop	{pc}
 2178              		.cfi_endproc
 2179              	.LFE54:
 2180              		.size	lipo_setSOC1Thresholds, .-lipo_setSOC1Thresholds
 2181 002a C046     		.section	.text.lipo_setSOCFThresholds,"ax",%progbits
 2182              		.align	2
 2183              		.global	lipo_setSOCFThresholds
 2184              		.code	16
 2185              		.thumb_func
 2186              		.type	lipo_setSOCFThresholds, %function
 2187              	lipo_setSOCFThresholds:
 2188              	.LFB57:
 491:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 2189              		.loc 1 491 0
 2190              		.cfi_startproc
 2191              	.LVL238:
 2192 0000 00B5     		push	{lr}
 2193              		.cfi_def_cfa_offset 4
 2194              		.cfi_offset 14, -4
 2195 0002 83B0     		sub	sp, sp, #12
 2196              		.cfi_def_cfa_offset 16
 493:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	thresholds[0] = constrain(set, 0, 100);
 2197              		.loc 1 493 0
 2198 0004 031C     		add	r3, r0, #0
 2199 0006 6428     		cmp	r0, #100
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 61


 2200 0008 00D9     		bls	.L173
 2201 000a 6423     		mov	r3, #100
 2202              	.L173:
 2203 000c 01AA     		add	r2, sp, #4
 2204 000e 1370     		strb	r3, [r2]
 494:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	thresholds[1] = constrain(clear, 0, 100);
 2205              		.loc 1 494 0
 2206 0010 0B1C     		add	r3, r1, #0
 2207 0012 6429     		cmp	r1, #100
 2208 0014 00D9     		bls	.L174
 2209 0016 6423     		mov	r3, #100
 2210              	.L174:
 2211 0018 01AA     		add	r2, sp, #4
 2212 001a 5370     		strb	r3, [r2, #1]
 495:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return writeExtendedData(BQ27441_ID_DISCHARGE, 2, thresholds, 2);
 2213              		.loc 1 495 0
 2214 001c 3120     		mov	r0, #49
 2215              	.LVL239:
 2216 001e 0221     		mov	r1, #2
 2217              	.LVL240:
 2218 0020 0223     		mov	r3, #2
 2219 0022 FFF7FEFF 		bl	writeExtendedData
 2220              	.LVL241:
 496:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 2221              		.loc 1 496 0
 2222 0026 03B0     		add	sp, sp, #12
 2223              		@ sp needed
 2224 0028 00BD     		pop	{pc}
 2225              		.cfi_endproc
 2226              	.LFE57:
 2227              		.size	lipo_setSOCFThresholds, .-lipo_setSOCFThresholds
 2228 002a C046     		.section	.text.lipo_setSOCIDelta,"ax",%progbits
 2229              		.align	2
 2230              		.global	lipo_setSOCIDelta
 2231              		.code	16
 2232              		.thumb_func
 2233              		.type	lipo_setSOCIDelta, %function
 2234              	lipo_setSOCIDelta:
 2235              	.LFB61:
 522:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 2236              		.loc 1 522 0
 2237              		.cfi_startproc
 2238              	.LVL242:
 2239 0000 00B5     		push	{lr}
 2240              		.cfi_def_cfa_offset 4
 2241              		.cfi_offset 14, -4
 2242 0002 83B0     		sub	sp, sp, #12
 2243              		.cfi_def_cfa_offset 16
 523:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t soci = constrain(delta, 0, 100);
 2244              		.loc 1 523 0
 2245 0004 031C     		add	r3, r0, #0
 2246 0006 6428     		cmp	r0, #100
 2247 0008 00D9     		bls	.L176
 2248 000a 6423     		mov	r3, #100
 2249              	.L176:
 2250 000c 6A46     		mov	r2, sp
 2251 000e D371     		strb	r3, [r2, #7]
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 62


 2252 0010 0732     		add	r2, r2, #7
 524:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return writeExtendedData(BQ27441_ID_STATE, 26, &soci, 1);
 2253              		.loc 1 524 0
 2254 0012 5220     		mov	r0, #82
 2255              	.LVL243:
 2256 0014 1A21     		mov	r1, #26
 2257 0016 0123     		mov	r3, #1
 2258 0018 FFF7FEFF 		bl	writeExtendedData
 2259              	.LVL244:
 525:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 2260              		.loc 1 525 0
 2261 001c 03B0     		add	sp, sp, #12
 2262              		@ sp needed
 2263 001e 00BD     		pop	{pc}
 2264              		.cfi_endproc
 2265              	.LFE61:
 2266              		.size	lipo_setSOCIDelta, .-lipo_setSOCIDelta
 2267              		.section	.text.readExtendedData,"ax",%progbits
 2268              		.align	2
 2269              		.code	16
 2270              		.thumb_func
 2271              		.type	readExtendedData, %function
 2272              	readExtendedData:
 2273              	.LFB87:
 784:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 2274              		.loc 1 784 0
 2275              		.cfi_startproc
 2276              	.LVL245:
 2277 0000 38B5     		push	{r3, r4, r5, lr}
 2278              		.cfi_def_cfa_offset 16
 2279              		.cfi_offset 3, -16
 2280              		.cfi_offset 4, -12
 2281              		.cfi_offset 5, -8
 2282              		.cfi_offset 14, -4
 2283 0002 051C     		mov	r5, r0
 2284 0004 0C1C     		mov	r4, r1
 2285              	.LVL246:
 786:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (!_userConfigControl){
 2286              		.loc 1 786 0
 2287 0006 154B     		ldr	r3, .L183
 2288 0008 1B89     		ldrh	r3, [r3, #8]
 2289 000a 002B     		cmp	r3, #0
 2290 000c 04D1     		bne	.L178
 787:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c ****         userControl = false;    
 2291              		.loc 1 787 0
 2292 000e 0022     		mov	r2, #0
 2293 0010 134B     		ldr	r3, .L183+4
 2294 0012 1A80     		strh	r2, [r3]
 788:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		lipo_enterConfig();
 2295              		.loc 1 788 0
 2296 0014 FFF7FEFF 		bl	lipo_enterConfig
 2297              	.LVL247:
 2298              	.L178:
 791:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (!blockDataControl())	  // // enable block data memory control
 2299              		.loc 1 791 0
 2300 0018 FFF7FEFF 		bl	blockDataControl
 2301              	.LVL248:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 63


 2302 001c 0028     		cmp	r0, #0
 2303 001e 18D0     		beq	.L181
 793:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (!blockDataClass(classID)) // Write class ID using DataBlockClass()
 2304              		.loc 1 793 0
 2305 0020 281C     		mov	r0, r5
 2306 0022 FFF7FEFF 		bl	blockDataClass
 2307              	.LVL249:
 2308 0026 0028     		cmp	r0, #0
 2309 0028 15D0     		beq	.L182
 796:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	blockDataOffset(offset / 32); // Write 32-bit block offset (usually 0)
 2310              		.loc 1 796 0
 2311 002a 6009     		lsr	r0, r4, #5
 2312 002c FFF7FEFF 		bl	blockDataOffset
 2313              	.LVL250:
 798:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	computeBlockChecksum(); // Compute checksum going in
 2314              		.loc 1 798 0
 2315 0030 FFF7FEFF 		bl	computeBlockChecksum
 2316              	.LVL251:
 799:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	uint8_t oldCsum = blockDataChecksum();
 2317              		.loc 1 799 0
 2318 0034 FFF7FEFF 		bl	blockDataChecksum
 2319              	.LVL252:
 802:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	retData = readBlockData(offset % 32); // Read from offset (limit to 0-31)
 2320              		.loc 1 802 0
 2321 0038 1F20     		mov	r0, #31
 2322 003a 2040     		and	r0, r4
 2323 003c FFF7FEFF 		bl	readBlockData
 2324              	.LVL253:
 2325 0040 041C     		mov	r4, r0
 2326              	.LVL254:
 804:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	if (!_userConfigControl)
 2327              		.loc 1 804 0
 2328 0042 064B     		ldr	r3, .L183
 2329 0044 1B89     		ldrh	r3, [r3, #8]
 2330 0046 002B     		cmp	r3, #0
 2331 0048 01D1     		bne	.L180
 805:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		lipo_exitConfig();
 2332              		.loc 1 805 0
 2333 004a FFF7FEFF 		bl	lipo_exitConfig
 2334              	.LVL255:
 2335              	.L180:
 807:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return retData;
 2336              		.loc 1 807 0
 2337 004e 201C     		mov	r0, r4
 2338 0050 02E0     		b	.L179
 2339              	.LVL256:
 2340              	.L181:
 792:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return false;			  // Return false if enable fails
 2341              		.loc 1 792 0
 2342 0052 0020     		mov	r0, #0
 2343 0054 00E0     		b	.L179
 2344              	.L182:
 794:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 		return false;
 2345              		.loc 1 794 0
 2346 0056 0020     		mov	r0, #0
 2347              	.LVL257:
 2348              	.L179:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 64


 808:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 2349              		.loc 1 808 0
 2350              		@ sp needed
 2351 0058 38BD     		pop	{r3, r4, r5, pc}
 2352              	.L184:
 2353 005a C046     		.align	2
 2354              	.L183:
 2355 005c 00000000 		.word	.LANCHOR0
 2356 0060 00000000 		.word	.LANCHOR1
 2357              		.cfi_endproc
 2358              	.LFE87:
 2359              		.size	readExtendedData, .-readExtendedData
 2360              		.section	.text.lipo_SOC1SetThreshold,"ax",%progbits
 2361              		.align	2
 2362              		.global	lipo_SOC1SetThreshold
 2363              		.code	16
 2364              		.thumb_func
 2365              		.type	lipo_SOC1SetThreshold, %function
 2366              	lipo_SOC1SetThreshold:
 2367              	.LFB52:
 458:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 2368              		.loc 1 458 0
 2369              		.cfi_startproc
 2370 0000 08B5     		push	{r3, lr}
 2371              		.cfi_def_cfa_offset 8
 2372              		.cfi_offset 3, -8
 2373              		.cfi_offset 14, -4
 459:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readExtendedData(BQ27441_ID_DISCHARGE, 0);
 2374              		.loc 1 459 0
 2375 0002 3120     		mov	r0, #49
 2376 0004 0021     		mov	r1, #0
 2377 0006 FFF7FEFF 		bl	readExtendedData
 2378              	.LVL258:
 460:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 2379              		.loc 1 460 0
 2380              		@ sp needed
 2381 000a 08BD     		pop	{r3, pc}
 2382              		.cfi_endproc
 2383              	.LFE52:
 2384              		.size	lipo_SOC1SetThreshold, .-lipo_SOC1SetThreshold
 2385              		.section	.text.lipo_SOC1ClearThreshold,"ax",%progbits
 2386              		.align	2
 2387              		.global	lipo_SOC1ClearThreshold
 2388              		.code	16
 2389              		.thumb_func
 2390              		.type	lipo_SOC1ClearThreshold, %function
 2391              	lipo_SOC1ClearThreshold:
 2392              	.LFB53:
 464:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 2393              		.loc 1 464 0
 2394              		.cfi_startproc
 2395 0000 08B5     		push	{r3, lr}
 2396              		.cfi_def_cfa_offset 8
 2397              		.cfi_offset 3, -8
 2398              		.cfi_offset 14, -4
 465:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readExtendedData(BQ27441_ID_DISCHARGE, 1);
 2399              		.loc 1 465 0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 65


 2400 0002 3120     		mov	r0, #49
 2401 0004 0121     		mov	r1, #1
 2402 0006 FFF7FEFF 		bl	readExtendedData
 2403              	.LVL259:
 466:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 2404              		.loc 1 466 0
 2405              		@ sp needed
 2406 000a 08BD     		pop	{r3, pc}
 2407              		.cfi_endproc
 2408              	.LFE53:
 2409              		.size	lipo_SOC1ClearThreshold, .-lipo_SOC1ClearThreshold
 2410              		.section	.text.lipo_SOCFSetThreshold,"ax",%progbits
 2411              		.align	2
 2412              		.global	lipo_SOCFSetThreshold
 2413              		.code	16
 2414              		.thumb_func
 2415              		.type	lipo_SOCFSetThreshold, %function
 2416              	lipo_SOCFSetThreshold:
 2417              	.LFB55:
 479:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 2418              		.loc 1 479 0
 2419              		.cfi_startproc
 2420 0000 08B5     		push	{r3, lr}
 2421              		.cfi_def_cfa_offset 8
 2422              		.cfi_offset 3, -8
 2423              		.cfi_offset 14, -4
 480:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readExtendedData(BQ27441_ID_DISCHARGE, 2);
 2424              		.loc 1 480 0
 2425 0002 3120     		mov	r0, #49
 2426 0004 0221     		mov	r1, #2
 2427 0006 FFF7FEFF 		bl	readExtendedData
 2428              	.LVL260:
 481:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 2429              		.loc 1 481 0
 2430              		@ sp needed
 2431 000a 08BD     		pop	{r3, pc}
 2432              		.cfi_endproc
 2433              	.LFE55:
 2434              		.size	lipo_SOCFSetThreshold, .-lipo_SOCFSetThreshold
 2435              		.section	.text.lipo_SOCFClearThreshold,"ax",%progbits
 2436              		.align	2
 2437              		.global	lipo_SOCFClearThreshold
 2438              		.code	16
 2439              		.thumb_func
 2440              		.type	lipo_SOCFClearThreshold, %function
 2441              	lipo_SOCFClearThreshold:
 2442              	.LFB56:
 485:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 2443              		.loc 1 485 0
 2444              		.cfi_startproc
 2445 0000 08B5     		push	{r3, lr}
 2446              		.cfi_def_cfa_offset 8
 2447              		.cfi_offset 3, -8
 2448              		.cfi_offset 14, -4
 486:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readExtendedData(BQ27441_ID_DISCHARGE, 3);
 2449              		.loc 1 486 0
 2450 0002 3120     		mov	r0, #49
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 66


 2451 0004 0321     		mov	r1, #3
 2452 0006 FFF7FEFF 		bl	readExtendedData
 2453              	.LVL261:
 487:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 2454              		.loc 1 487 0
 2455              		@ sp needed
 2456 000a 08BD     		pop	{r3, pc}
 2457              		.cfi_endproc
 2458              	.LFE56:
 2459              		.size	lipo_SOCFClearThreshold, .-lipo_SOCFClearThreshold
 2460              		.section	.text.lipo_sociDelta,"ax",%progbits
 2461              		.align	2
 2462              		.global	lipo_sociDelta
 2463              		.code	16
 2464              		.thumb_func
 2465              		.type	lipo_sociDelta, %function
 2466              	lipo_sociDelta:
 2467              	.LFB60:
 516:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** {
 2468              		.loc 1 516 0
 2469              		.cfi_startproc
 2470 0000 08B5     		push	{r3, lr}
 2471              		.cfi_def_cfa_offset 8
 2472              		.cfi_offset 3, -8
 2473              		.cfi_offset 14, -4
 517:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** 	return readExtendedData(BQ27441_ID_STATE, 26);
 2474              		.loc 1 517 0
 2475 0002 5220     		mov	r0, #82
 2476 0004 1A21     		mov	r1, #26
 2477 0006 FFF7FEFF 		bl	readExtendedData
 2478              	.LVL262:
 518:..\..\..\..\PSoC Basestation\Battery_Babysitter\src/batteryMonitor.c **** }
 2479              		.loc 1 518 0
 2480              		@ sp needed
 2481 000a 08BD     		pop	{r3, pc}
 2482              		.cfi_endproc
 2483              	.LFE60:
 2484              		.size	lipo_sociDelta, .-lipo_sociDelta
 2485              		.global	resim
 2486              		.global	userControl
 2487              		.global	temp_measure_type
 2488              		.global	soh_measure_type
 2489              		.global	soc_measure_type
 2490              		.global	capacity_measure_type
 2491              		.global	current_measure_type
 2492              		.data
 2493              		.align	1
 2494              		.set	.LANCHOR1,. + 0
 2495              		.type	userControl, %object
 2496              		.size	userControl, 2
 2497              	userControl:
 2498 0000 0100     		.short	1
 2499              		.type	resim, %object
 2500              		.size	resim, 2
 2501              	resim:
 2502 0002 0100     		.short	1
 2503              		.section	.rodata.str1.4,"aMS",%progbits,1
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 67


 2504              		.align	2
 2505              	.LC17:
 2506 0000 4D414445 		.ascii	"MADE 1\000"
 2506      203100
 2507 0007 00       		.space	1
 2508              	.LC21:
 2509 0008 4D414445 		.ascii	"MADE 2\000"
 2509      203200
 2510 000f 00       		.space	1
 2511              	.LC23:
 2512 0010 4D414445 		.ascii	"MADE 3\000"
 2512      203300
 2513 0017 00       		.space	1
 2514              	.LC25:
 2515 0018 4D414445 		.ascii	"MADE 4\000"
 2515      203400
 2516 001f 00       		.space	1
 2517              	.LC27:
 2518 0020 4D414445 		.ascii	"MADE 5\000"
 2518      203500
 2519 0027 00       		.space	1
 2520              	.LC29:
 2521 0028 4D414445 		.ascii	"MADE 6\000"
 2521      203600
 2522 002f 00       		.bss
 2523              		.align	1
 2524              		.set	.LANCHOR0,. + 0
 2525              		.type	current_measure_type, %object
 2526              		.size	current_measure_type, 1
 2527              	current_measure_type:
 2528 0000 00       		.space	1
 2529              		.type	capacity_measure_type, %object
 2530              		.size	capacity_measure_type, 1
 2531              	capacity_measure_type:
 2532 0001 00       		.space	1
 2533              		.type	soc_measure_type, %object
 2534              		.size	soc_measure_type, 1
 2535              	soc_measure_type:
 2536 0002 00       		.space	1
 2537              		.type	soh_measure_type, %object
 2538              		.size	soh_measure_type, 1
 2539              	soh_measure_type:
 2540 0003 00       		.space	1
 2541              		.type	temp_measure_type, %object
 2542              		.size	temp_measure_type, 1
 2543              	temp_measure_type:
 2544 0004 00       		.space	1
 2545 0005 00       		.space	1
 2546              		.type	_sealFlag, %object
 2547              		.size	_sealFlag, 2
 2548              	_sealFlag:
 2549 0006 0000     		.space	2
 2550              		.type	_userConfigControl, %object
 2551              		.size	_userConfigControl, 2
 2552              	_userConfigControl:
 2553 0008 0000     		.space	2
 2554              		.text
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 68


 2555              	.Letext0:
 2556              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 2557              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 2558              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 2559              		.file 5 "..\\..\\..\\..\\PSoC Basestation\\Battery_Babysitter\\src\\batteryMonitor.h"
 2560              		.file 6 "Generated_Source\\PSoC4/I2C_I2C.h"
 2561              		.file 7 "Generated_Source\\PSoC4/CyLib.h"
 2562              		.file 8 "Generated_Source\\PSoC4/I2C.h"
 2563              		.file 9 "..\\..\\..\\..\\PSoC Basestation\\Base_station_src/mySerial.h"
 2564              		.section	.debug_info,"",%progbits
 2565              	.Ldebug_info0:
 2566 0000 42160000 		.4byte	0x1642
 2567 0004 0400     		.2byte	0x4
 2568 0006 00000000 		.4byte	.Ldebug_abbrev0
 2569 000a 04       		.byte	0x4
 2570 000b 01       		.uleb128 0x1
 2571 000c 24060000 		.4byte	.LASF164
 2572 0010 01       		.byte	0x1
 2573 0011 57000000 		.4byte	.LASF165
 2574 0015 50080000 		.4byte	.LASF166
 2575 0019 50000000 		.4byte	.Ldebug_ranges0+0x50
 2576 001d 00000000 		.4byte	0
 2577 0021 00000000 		.4byte	.Ldebug_line0
 2578 0025 02       		.uleb128 0x2
 2579 0026 01       		.byte	0x1
 2580 0027 06       		.byte	0x6
 2581 0028 15080000 		.4byte	.LASF0
 2582 002c 03       		.uleb128 0x3
 2583 002d E8060000 		.4byte	.LASF2
 2584 0031 02       		.byte	0x2
 2585 0032 1D       		.byte	0x1d
 2586 0033 37000000 		.4byte	0x37
 2587 0037 02       		.uleb128 0x2
 2588 0038 01       		.byte	0x1
 2589 0039 08       		.byte	0x8
 2590 003a B2070000 		.4byte	.LASF1
 2591 003e 03       		.uleb128 0x3
 2592 003f AE040000 		.4byte	.LASF3
 2593 0043 02       		.byte	0x2
 2594 0044 29       		.byte	0x29
 2595 0045 49000000 		.4byte	0x49
 2596 0049 02       		.uleb128 0x2
 2597 004a 02       		.byte	0x2
 2598 004b 05       		.byte	0x5
 2599 004c D7050000 		.4byte	.LASF4
 2600 0050 03       		.uleb128 0x3
 2601 0051 8B020000 		.4byte	.LASF5
 2602 0055 02       		.byte	0x2
 2603 0056 2B       		.byte	0x2b
 2604 0057 5B000000 		.4byte	0x5b
 2605 005b 02       		.uleb128 0x2
 2606 005c 02       		.byte	0x2
 2607 005d 07       		.byte	0x7
 2608 005e 27080000 		.4byte	.LASF6
 2609 0062 02       		.uleb128 0x2
 2610 0063 04       		.byte	0x4
 2611 0064 05       		.byte	0x5
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 69


 2612 0065 EA050000 		.4byte	.LASF7
 2613 0069 02       		.uleb128 0x2
 2614 006a 04       		.byte	0x4
 2615 006b 07       		.byte	0x7
 2616 006c 35070000 		.4byte	.LASF8
 2617 0070 02       		.uleb128 0x2
 2618 0071 08       		.byte	0x8
 2619 0072 05       		.byte	0x5
 2620 0073 6A040000 		.4byte	.LASF9
 2621 0077 02       		.uleb128 0x2
 2622 0078 08       		.byte	0x8
 2623 0079 07       		.byte	0x7
 2624 007a 46020000 		.4byte	.LASF10
 2625 007e 04       		.uleb128 0x4
 2626 007f 04       		.byte	0x4
 2627 0080 05       		.byte	0x5
 2628 0081 696E7400 		.ascii	"int\000"
 2629 0085 02       		.uleb128 0x2
 2630 0086 04       		.byte	0x4
 2631 0087 07       		.byte	0x7
 2632 0088 FB000000 		.4byte	.LASF11
 2633 008c 03       		.uleb128 0x3
 2634 008d 13040000 		.4byte	.LASF12
 2635 0091 03       		.byte	0x3
 2636 0092 15       		.byte	0x15
 2637 0093 2C000000 		.4byte	0x2c
 2638 0097 03       		.uleb128 0x3
 2639 0098 33020000 		.4byte	.LASF13
 2640 009c 03       		.byte	0x3
 2641 009d 20       		.byte	0x20
 2642 009e 3E000000 		.4byte	0x3e
 2643 00a2 03       		.uleb128 0x3
 2644 00a3 5A050000 		.4byte	.LASF14
 2645 00a7 03       		.byte	0x3
 2646 00a8 21       		.byte	0x21
 2647 00a9 50000000 		.4byte	0x50
 2648 00ad 05       		.uleb128 0x5
 2649 00ae E5080000 		.4byte	.LASF15
 2650 00b2 04       		.byte	0x4
 2651 00b3 B901     		.2byte	0x1b9
 2652 00b5 37000000 		.4byte	0x37
 2653 00b9 05       		.uleb128 0x5
 2654 00ba EC040000 		.4byte	.LASF16
 2655 00be 04       		.byte	0x4
 2656 00bf BB01     		.2byte	0x1bb
 2657 00c1 69000000 		.4byte	0x69
 2658 00c5 02       		.uleb128 0x2
 2659 00c6 04       		.byte	0x4
 2660 00c7 04       		.byte	0x4
 2661 00c8 20020000 		.4byte	.LASF17
 2662 00cc 02       		.uleb128 0x2
 2663 00cd 08       		.byte	0x8
 2664 00ce 04       		.byte	0x4
 2665 00cf EB080000 		.4byte	.LASF18
 2666 00d3 02       		.uleb128 0x2
 2667 00d4 01       		.byte	0x1
 2668 00d5 08       		.byte	0x8
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 70


 2669 00d6 BD030000 		.4byte	.LASF19
 2670 00da 02       		.uleb128 0x2
 2671 00db 04       		.byte	0x4
 2672 00dc 07       		.byte	0x7
 2673 00dd 2C070000 		.4byte	.LASF20
 2674 00e1 06       		.uleb128 0x6
 2675 00e2 04       		.byte	0x4
 2676 00e3 07       		.uleb128 0x7
 2677 00e4 04       		.byte	0x4
 2678 00e5 D3000000 		.4byte	0xd3
 2679 00e9 07       		.uleb128 0x7
 2680 00ea 04       		.byte	0x4
 2681 00eb AD000000 		.4byte	0xad
 2682 00ef 03       		.uleb128 0x3
 2683 00f0 A9040000 		.4byte	.LASF21
 2684 00f4 05       		.byte	0x5
 2685 00f5 28       		.byte	0x28
 2686 00f6 A2000000 		.4byte	0xa2
 2687 00fa 08       		.uleb128 0x8
 2688 00fb 01       		.byte	0x1
 2689 00fc 05       		.byte	0x5
 2690 00fd 2B       		.byte	0x2b
 2691 00fe 15010000 		.4byte	0x115
 2692 0102 09       		.uleb128 0x9
 2693 0103 41564700 		.ascii	"AVG\000"
 2694 0107 00       		.sleb128 0
 2695 0108 0A       		.uleb128 0xa
 2696 0109 02020000 		.4byte	.LASF22
 2697 010d 01       		.sleb128 1
 2698 010e 09       		.uleb128 0x9
 2699 010f 4D415800 		.ascii	"MAX\000"
 2700 0113 02       		.sleb128 2
 2701 0114 00       		.byte	0
 2702 0115 03       		.uleb128 0x3
 2703 0116 7B020000 		.4byte	.LASF23
 2704 011a 05       		.byte	0x5
 2705 011b 2F       		.byte	0x2f
 2706 011c FA000000 		.4byte	0xfa
 2707 0120 08       		.uleb128 0x8
 2708 0121 01       		.byte	0x1
 2709 0122 05       		.byte	0x5
 2710 0123 32       		.byte	0x32
 2711 0124 5F010000 		.4byte	0x15f
 2712 0128 0A       		.uleb128 0xa
 2713 0129 8C010000 		.4byte	.LASF24
 2714 012d 00       		.sleb128 0
 2715 012e 0A       		.uleb128 0xa
 2716 012f B2060000 		.4byte	.LASF25
 2717 0133 01       		.sleb128 1
 2718 0134 0A       		.uleb128 0xa
 2719 0135 E6040000 		.4byte	.LASF26
 2720 0139 02       		.sleb128 2
 2721 013a 0A       		.uleb128 0xa
 2722 013b DD060000 		.4byte	.LASF27
 2723 013f 03       		.sleb128 3
 2724 0140 0A       		.uleb128 0xa
 2725 0141 3D000000 		.4byte	.LASF28
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 71


 2726 0145 04       		.sleb128 4
 2727 0146 0A       		.uleb128 0xa
 2728 0147 83070000 		.4byte	.LASF29
 2729 014b 05       		.sleb128 5
 2730 014c 0A       		.uleb128 0xa
 2731 014d C9040000 		.4byte	.LASF30
 2732 0151 06       		.sleb128 6
 2733 0152 0A       		.uleb128 0xa
 2734 0153 CF050000 		.4byte	.LASF31
 2735 0157 07       		.sleb128 7
 2736 0158 0A       		.uleb128 0xa
 2737 0159 2C020000 		.4byte	.LASF32
 2738 015d 08       		.sleb128 8
 2739 015e 00       		.byte	0
 2740 015f 03       		.uleb128 0x3
 2741 0160 B8040000 		.4byte	.LASF33
 2742 0164 05       		.byte	0x5
 2743 0165 3C       		.byte	0x3c
 2744 0166 20010000 		.4byte	0x120
 2745 016a 08       		.uleb128 0x8
 2746 016b 01       		.byte	0x1
 2747 016c 05       		.byte	0x5
 2748 016d 3F       		.byte	0x3f
 2749 016e 7F010000 		.4byte	0x17f
 2750 0172 0A       		.uleb128 0xa
 2751 0173 D7020000 		.4byte	.LASF34
 2752 0177 00       		.sleb128 0
 2753 0178 0A       		.uleb128 0xa
 2754 0179 F3040000 		.4byte	.LASF35
 2755 017d 01       		.sleb128 1
 2756 017e 00       		.byte	0
 2757 017f 03       		.uleb128 0x3
 2758 0180 15050000 		.4byte	.LASF36
 2759 0184 05       		.byte	0x5
 2760 0185 42       		.byte	0x42
 2761 0186 6A010000 		.4byte	0x16a
 2762 018a 08       		.uleb128 0x8
 2763 018b 01       		.byte	0x1
 2764 018c 05       		.byte	0x5
 2765 018d 45       		.byte	0x45
 2766 018e 9F010000 		.4byte	0x19f
 2767 0192 0A       		.uleb128 0xa
 2768 0193 0D050000 		.4byte	.LASF37
 2769 0197 00       		.sleb128 0
 2770 0198 0A       		.uleb128 0xa
 2771 0199 E1050000 		.4byte	.LASF38
 2772 019d 01       		.sleb128 1
 2773 019e 00       		.byte	0
 2774 019f 03       		.uleb128 0x3
 2775 01a0 31000000 		.4byte	.LASF39
 2776 01a4 05       		.byte	0x5
 2777 01a5 48       		.byte	0x48
 2778 01a6 8A010000 		.4byte	0x18a
 2779 01aa 08       		.uleb128 0x8
 2780 01ab 01       		.byte	0x1
 2781 01ac 05       		.byte	0x5
 2782 01ad 4B       		.byte	0x4b
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 72


 2783 01ae BF010000 		.4byte	0x1bf
 2784 01b2 0A       		.uleb128 0xa
 2785 01b3 1C060000 		.4byte	.LASF40
 2786 01b7 00       		.sleb128 0
 2787 01b8 0A       		.uleb128 0xa
 2788 01b9 B7060000 		.4byte	.LASF41
 2789 01bd 01       		.sleb128 1
 2790 01be 00       		.byte	0
 2791 01bf 03       		.uleb128 0x3
 2792 01c0 46030000 		.4byte	.LASF42
 2793 01c4 05       		.byte	0x5
 2794 01c5 4E       		.byte	0x4e
 2795 01c6 AA010000 		.4byte	0x1aa
 2796 01ca 08       		.uleb128 0x8
 2797 01cb 01       		.byte	0x1
 2798 01cc 05       		.byte	0x5
 2799 01cd 51       		.byte	0x51
 2800 01ce DF010000 		.4byte	0x1df
 2801 01d2 0A       		.uleb128 0xa
 2802 01d3 07020000 		.4byte	.LASF43
 2803 01d7 00       		.sleb128 0
 2804 01d8 0A       		.uleb128 0xa
 2805 01d9 85050000 		.4byte	.LASF44
 2806 01dd 01       		.sleb128 1
 2807 01de 00       		.byte	0
 2808 01df 03       		.uleb128 0x3
 2809 01e0 D7040000 		.4byte	.LASF45
 2810 01e4 05       		.byte	0x5
 2811 01e5 54       		.byte	0x54
 2812 01e6 CA010000 		.4byte	0x1ca
 2813 01ea 0B       		.uleb128 0xb
 2814 01eb 83040000 		.4byte	.LASF48
 2815 01ef 01       		.byte	0x1
 2816 01f0 7503     		.2byte	0x375
 2817 01f2 A2000000 		.4byte	0xa2
 2818 01f6 00000000 		.4byte	.LFB90
 2819 01fa 2E000000 		.4byte	.LFE90-.LFB90
 2820 01fe 01       		.uleb128 0x1
 2821 01ff 9C       		.byte	0x9c
 2822 0200 82020000 		.4byte	0x282
 2823 0204 0C       		.uleb128 0xc
 2824 0205 81010000 		.4byte	.LASF46
 2825 0209 01       		.byte	0x1
 2826 020a 7503     		.2byte	0x375
 2827 020c 8C000000 		.4byte	0x8c
 2828 0210 00000000 		.4byte	.LLST0
 2829 0214 0D       		.uleb128 0xd
 2830 0215 73726300 		.ascii	"src\000"
 2831 0219 01       		.byte	0x1
 2832 021a 7503     		.2byte	0x375
 2833 021c 82020000 		.4byte	0x282
 2834 0220 21000000 		.4byte	.LLST1
 2835 0224 0C       		.uleb128 0xc
 2836 0225 26020000 		.4byte	.LASF47
 2837 0229 01       		.byte	0x1
 2838 022a 7503     		.2byte	0x375
 2839 022c 8C000000 		.4byte	0x8c
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 73


 2840 0230 4D000000 		.4byte	.LLST2
 2841 0234 0E       		.uleb128 0xe
 2842 0235 6900     		.ascii	"i\000"
 2843 0237 01       		.byte	0x1
 2844 0238 8803     		.2byte	0x388
 2845 023a 7E000000 		.4byte	0x7e
 2846 023e 6E000000 		.4byte	.LLST3
 2847 0242 0F       		.uleb128 0xf
 2848 0243 10000000 		.4byte	.LVL3
 2849 0247 95150000 		.4byte	0x1595
 2850 024b 5B020000 		.4byte	0x25b
 2851 024f 10       		.uleb128 0x10
 2852 0250 01       		.uleb128 0x1
 2853 0251 51       		.byte	0x51
 2854 0252 01       		.uleb128 0x1
 2855 0253 30       		.byte	0x30
 2856 0254 10       		.uleb128 0x10
 2857 0255 01       		.uleb128 0x1
 2858 0256 50       		.byte	0x50
 2859 0257 02       		.uleb128 0x2
 2860 0258 08       		.byte	0x8
 2861 0259 55       		.byte	0x55
 2862 025a 00       		.byte	0
 2863 025b 0F       		.uleb128 0xf
 2864 025c 16000000 		.4byte	.LVL4
 2865 0260 B0150000 		.4byte	0x15b0
 2866 0264 6F020000 		.4byte	0x26f
 2867 0268 10       		.uleb128 0x10
 2868 0269 01       		.uleb128 0x1
 2869 026a 50       		.byte	0x50
 2870 026b 02       		.uleb128 0x2
 2871 026c 74       		.byte	0x74
 2872 026d 00       		.sleb128 0
 2873 026e 00       		.byte	0
 2874 026f 11       		.uleb128 0x11
 2875 0270 20000000 		.4byte	.LVL6
 2876 0274 B0150000 		.4byte	0x15b0
 2877 0278 11       		.uleb128 0x11
 2878 0279 2A000000 		.4byte	.LVL8
 2879 027d C6150000 		.4byte	0x15c6
 2880 0281 00       		.byte	0
 2881 0282 07       		.uleb128 0x7
 2882 0283 04       		.byte	0x4
 2883 0284 8C000000 		.4byte	0x8c
 2884 0288 0B       		.uleb128 0xb
 2885 0289 AF000000 		.4byte	.LASF49
 2886 028d 01       		.byte	0x1
 2887 028e CC02     		.2byte	0x2cc
 2888 0290 EF000000 		.4byte	0xef
 2889 0294 00000000 		.4byte	.LFB79
 2890 0298 18000000 		.4byte	.LFE79-.LFB79
 2891 029c 01       		.uleb128 0x1
 2892 029d 9C       		.byte	0x9c
 2893 029e CD020000 		.4byte	0x2cd
 2894 02a2 12       		.uleb128 0x12
 2895 02a3 31050000 		.4byte	.LASF50
 2896 02a7 01       		.byte	0x1
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 74


 2897 02a8 CE02     		.2byte	0x2ce
 2898 02aa 8C000000 		.4byte	0x8c
 2899 02ae 02       		.uleb128 0x2
 2900 02af 91       		.byte	0x91
 2901 02b0 77       		.sleb128 -9
 2902 02b1 13       		.uleb128 0x13
 2903 02b2 14000000 		.4byte	.LVL11
 2904 02b6 EA010000 		.4byte	0x1ea
 2905 02ba 10       		.uleb128 0x10
 2906 02bb 01       		.uleb128 0x1
 2907 02bc 52       		.byte	0x52
 2908 02bd 01       		.uleb128 0x1
 2909 02be 31       		.byte	0x31
 2910 02bf 10       		.uleb128 0x10
 2911 02c0 01       		.uleb128 0x1
 2912 02c1 51       		.byte	0x51
 2913 02c2 02       		.uleb128 0x2
 2914 02c3 7D       		.byte	0x7d
 2915 02c4 07       		.sleb128 7
 2916 02c5 10       		.uleb128 0x10
 2917 02c6 01       		.uleb128 0x1
 2918 02c7 50       		.byte	0x50
 2919 02c8 02       		.uleb128 0x2
 2920 02c9 08       		.byte	0x8
 2921 02ca 61       		.byte	0x61
 2922 02cb 00       		.byte	0
 2923 02cc 00       		.byte	0
 2924 02cd 0B       		.uleb128 0xb
 2925 02ce CF030000 		.4byte	.LASF51
 2926 02d2 01       		.byte	0x1
 2927 02d3 D302     		.2byte	0x2d3
 2928 02d5 EF000000 		.4byte	0xef
 2929 02d9 00000000 		.4byte	.LFB80
 2930 02dd 16000000 		.4byte	.LFE80-.LFB80
 2931 02e1 01       		.uleb128 0x1
 2932 02e2 9C       		.byte	0x9c
 2933 02e3 12030000 		.4byte	0x312
 2934 02e7 0D       		.uleb128 0xd
 2935 02e8 696400   		.ascii	"id\000"
 2936 02eb 01       		.byte	0x1
 2937 02ec D302     		.2byte	0x2d3
 2938 02ee 8C000000 		.4byte	0x8c
 2939 02f2 8D000000 		.4byte	.LLST4
 2940 02f6 13       		.uleb128 0x13
 2941 02f7 12000000 		.4byte	.LVL14
 2942 02fb EA010000 		.4byte	0x1ea
 2943 02ff 10       		.uleb128 0x10
 2944 0300 01       		.uleb128 0x1
 2945 0301 52       		.byte	0x52
 2946 0302 01       		.uleb128 0x1
 2947 0303 31       		.byte	0x31
 2948 0304 10       		.uleb128 0x10
 2949 0305 01       		.uleb128 0x1
 2950 0306 51       		.byte	0x51
 2951 0307 02       		.uleb128 0x2
 2952 0308 7D       		.byte	0x7d
 2953 0309 07       		.sleb128 7
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 75


 2954 030a 10       		.uleb128 0x10
 2955 030b 01       		.uleb128 0x1
 2956 030c 50       		.byte	0x50
 2957 030d 02       		.uleb128 0x2
 2958 030e 08       		.byte	0x8
 2959 030f 3E       		.byte	0x3e
 2960 0310 00       		.byte	0
 2961 0311 00       		.byte	0
 2962 0312 0B       		.uleb128 0xb
 2963 0313 00000000 		.4byte	.LASF52
 2964 0317 01       		.byte	0x1
 2965 0318 D902     		.2byte	0x2d9
 2966 031a EF000000 		.4byte	0xef
 2967 031e 00000000 		.4byte	.LFB81
 2968 0322 16000000 		.4byte	.LFE81-.LFB81
 2969 0326 01       		.uleb128 0x1
 2970 0327 9C       		.byte	0x9c
 2971 0328 58030000 		.4byte	0x358
 2972 032c 0C       		.uleb128 0xc
 2973 032d 1D030000 		.4byte	.LASF53
 2974 0331 01       		.byte	0x1
 2975 0332 D902     		.2byte	0x2d9
 2976 0334 8C000000 		.4byte	0x8c
 2977 0338 C4000000 		.4byte	.LLST5
 2978 033c 13       		.uleb128 0x13
 2979 033d 12000000 		.4byte	.LVL18
 2980 0341 EA010000 		.4byte	0x1ea
 2981 0345 10       		.uleb128 0x10
 2982 0346 01       		.uleb128 0x1
 2983 0347 52       		.byte	0x52
 2984 0348 01       		.uleb128 0x1
 2985 0349 31       		.byte	0x31
 2986 034a 10       		.uleb128 0x10
 2987 034b 01       		.uleb128 0x1
 2988 034c 51       		.byte	0x51
 2989 034d 02       		.uleb128 0x2
 2990 034e 7D       		.byte	0x7d
 2991 034f 07       		.sleb128 7
 2992 0350 10       		.uleb128 0x10
 2993 0351 01       		.uleb128 0x1
 2994 0352 50       		.byte	0x50
 2995 0353 02       		.uleb128 0x2
 2996 0354 08       		.byte	0x8
 2997 0355 3F       		.byte	0x3f
 2998 0356 00       		.byte	0
 2999 0357 00       		.byte	0
 3000 0358 0B       		.uleb128 0xb
 3001 0359 8B030000 		.4byte	.LASF54
 3002 035d 01       		.byte	0x1
 3003 035e F002     		.2byte	0x2f0
 3004 0360 EF000000 		.4byte	0xef
 3005 0364 00000000 		.4byte	.LFB84
 3006 0368 1A000000 		.4byte	.LFE84-.LFB84
 3007 036c 01       		.uleb128 0x1
 3008 036d 9C       		.byte	0x9c
 3009 036e B8030000 		.4byte	0x3b8
 3010 0372 0C       		.uleb128 0xc
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 76


 3011 0373 1D030000 		.4byte	.LASF53
 3012 0377 01       		.byte	0x1
 3013 0378 F002     		.2byte	0x2f0
 3014 037a 8C000000 		.4byte	0x8c
 3015 037e FB000000 		.4byte	.LLST6
 3016 0382 0C       		.uleb128 0xc
 3017 0383 00040000 		.4byte	.LASF55
 3018 0387 01       		.byte	0x1
 3019 0388 F002     		.2byte	0x2f0
 3020 038a 8C000000 		.4byte	0x8c
 3021 038e 1C010000 		.4byte	.LLST7
 3022 0392 14       		.uleb128 0x14
 3023 0393 47070000 		.4byte	.LASF56
 3024 0397 01       		.byte	0x1
 3025 0398 F202     		.2byte	0x2f2
 3026 039a 8C000000 		.4byte	0x8c
 3027 039e 53010000 		.4byte	.LLST8
 3028 03a2 13       		.uleb128 0x13
 3029 03a3 16000000 		.4byte	.LVL24
 3030 03a7 EA010000 		.4byte	0x1ea
 3031 03ab 10       		.uleb128 0x10
 3032 03ac 01       		.uleb128 0x1
 3033 03ad 52       		.byte	0x52
 3034 03ae 01       		.uleb128 0x1
 3035 03af 31       		.byte	0x31
 3036 03b0 10       		.uleb128 0x10
 3037 03b1 01       		.uleb128 0x1
 3038 03b2 51       		.byte	0x51
 3039 03b3 02       		.uleb128 0x2
 3040 03b4 7D       		.byte	0x7d
 3041 03b5 07       		.sleb128 7
 3042 03b6 00       		.byte	0
 3043 03b7 00       		.byte	0
 3044 03b8 0B       		.uleb128 0xb
 3045 03b9 EF010000 		.4byte	.LASF57
 3046 03bd 01       		.byte	0x1
 3047 03be 0903     		.2byte	0x309
 3048 03c0 EF000000 		.4byte	0xef
 3049 03c4 00000000 		.4byte	.LFB86
 3050 03c8 16000000 		.4byte	.LFE86-.LFB86
 3051 03cc 01       		.uleb128 0x1
 3052 03cd 9C       		.byte	0x9c
 3053 03ce FE030000 		.4byte	0x3fe
 3054 03d2 0C       		.uleb128 0xc
 3055 03d3 1E010000 		.4byte	.LASF58
 3056 03d7 01       		.byte	0x1
 3057 03d8 0903     		.2byte	0x309
 3058 03da 8C000000 		.4byte	0x8c
 3059 03de 66010000 		.4byte	.LLST9
 3060 03e2 13       		.uleb128 0x13
 3061 03e3 12000000 		.4byte	.LVL28
 3062 03e7 EA010000 		.4byte	0x1ea
 3063 03eb 10       		.uleb128 0x10
 3064 03ec 01       		.uleb128 0x1
 3065 03ed 52       		.byte	0x52
 3066 03ee 01       		.uleb128 0x1
 3067 03ef 31       		.byte	0x31
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 77


 3068 03f0 10       		.uleb128 0x10
 3069 03f1 01       		.uleb128 0x1
 3070 03f2 51       		.byte	0x51
 3071 03f3 02       		.uleb128 0x2
 3072 03f4 7D       		.byte	0x7d
 3073 03f5 07       		.sleb128 7
 3074 03f6 10       		.uleb128 0x10
 3075 03f7 01       		.uleb128 0x1
 3076 03f8 50       		.byte	0x50
 3077 03f9 02       		.uleb128 0x2
 3078 03fa 08       		.byte	0x8
 3079 03fb 60       		.byte	0x60
 3080 03fc 00       		.byte	0
 3081 03fd 00       		.byte	0
 3082 03fe 0B       		.uleb128 0xb
 3083 03ff 0A030000 		.4byte	.LASF59
 3084 0403 01       		.byte	0x1
 3085 0404 BA02     		.2byte	0x2ba
 3086 0406 EF000000 		.4byte	0xef
 3087 040a 00000000 		.4byte	.LFB78
 3088 040e 1E000000 		.4byte	.LFE78-.LFB78
 3089 0412 01       		.uleb128 0x1
 3090 0413 9C       		.byte	0x9c
 3091 0414 72040000 		.4byte	0x472
 3092 0418 0C       		.uleb128 0xc
 3093 0419 C7070000 		.4byte	.LASF60
 3094 041d 01       		.byte	0x1
 3095 041e BA02     		.2byte	0x2ba
 3096 0420 A2000000 		.4byte	0xa2
 3097 0424 9D010000 		.4byte	.LLST10
 3098 0428 14       		.uleb128 0x14
 3099 0429 31040000 		.4byte	.LASF61
 3100 042d 01       		.byte	0x1
 3101 042e BC02     		.2byte	0x2bc
 3102 0430 8C000000 		.4byte	0x8c
 3103 0434 BE010000 		.4byte	.LLST11
 3104 0438 14       		.uleb128 0x14
 3105 0439 3D010000 		.4byte	.LASF62
 3106 043d 01       		.byte	0x1
 3107 043e BD02     		.2byte	0x2bd
 3108 0440 8C000000 		.4byte	0x8c
 3109 0444 D1010000 		.4byte	.LLST12
 3110 0448 12       		.uleb128 0x12
 3111 0449 06080000 		.4byte	.LASF63
 3112 044d 01       		.byte	0x1
 3113 044e BE02     		.2byte	0x2be
 3114 0450 72040000 		.4byte	0x472
 3115 0454 02       		.uleb128 0x2
 3116 0455 91       		.byte	0x91
 3117 0456 74       		.sleb128 -12
 3118 0457 13       		.uleb128 0x13
 3119 0458 14000000 		.4byte	.LVL33
 3120 045c EA010000 		.4byte	0x1ea
 3121 0460 10       		.uleb128 0x10
 3122 0461 01       		.uleb128 0x1
 3123 0462 52       		.byte	0x52
 3124 0463 01       		.uleb128 0x1
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 78


 3125 0464 32       		.byte	0x32
 3126 0465 10       		.uleb128 0x10
 3127 0466 01       		.uleb128 0x1
 3128 0467 51       		.byte	0x51
 3129 0468 02       		.uleb128 0x2
 3130 0469 91       		.byte	0x91
 3131 046a 74       		.sleb128 -12
 3132 046b 10       		.uleb128 0x10
 3133 046c 01       		.uleb128 0x1
 3134 046d 50       		.byte	0x50
 3135 046e 01       		.uleb128 0x1
 3136 046f 30       		.byte	0x30
 3137 0470 00       		.byte	0
 3138 0471 00       		.byte	0
 3139 0472 15       		.uleb128 0x15
 3140 0473 8C000000 		.4byte	0x8c
 3141 0477 82040000 		.4byte	0x482
 3142 047b 16       		.uleb128 0x16
 3143 047c DA000000 		.4byte	0xda
 3144 0480 01       		.byte	0x1
 3145 0481 00       		.byte	0
 3146 0482 0B       		.uleb128 0xb
 3147 0483 AE050000 		.4byte	.LASF64
 3148 0487 01       		.byte	0x1
 3149 0488 9A02     		.2byte	0x29a
 3150 048a EF000000 		.4byte	0xef
 3151 048e 00000000 		.4byte	.LFB75
 3152 0492 0A000000 		.4byte	.LFE75-.LFB75
 3153 0496 01       		.uleb128 0x1
 3154 0497 9C       		.byte	0x9c
 3155 0498 AD040000 		.4byte	0x4ad
 3156 049c 13       		.uleb128 0x13
 3157 049d 08000000 		.4byte	.LVL34
 3158 04a1 FE030000 		.4byte	0x3fe
 3159 04a5 10       		.uleb128 0x10
 3160 04a6 01       		.uleb128 0x1
 3161 04a7 50       		.byte	0x50
 3162 04a8 02       		.uleb128 0x2
 3163 04a9 08       		.byte	0x8
 3164 04aa 42       		.byte	0x42
 3165 04ab 00       		.byte	0
 3166 04ac 00       		.byte	0
 3167 04ad 0B       		.uleb128 0xb
 3168 04ae C2030000 		.4byte	.LASF65
 3169 04b2 01       		.byte	0x1
 3170 04b3 5803     		.2byte	0x358
 3171 04b5 97000000 		.4byte	0x97
 3172 04b9 00000000 		.4byte	.LFB89
 3173 04bd 7A000000 		.4byte	.LFE89-.LFB89
 3174 04c1 01       		.uleb128 0x1
 3175 04c2 9C       		.byte	0x9c
 3176 04c3 C7050000 		.4byte	0x5c7
 3177 04c7 0C       		.uleb128 0xc
 3178 04c8 81010000 		.4byte	.LASF46
 3179 04cc 01       		.byte	0x1
 3180 04cd 5803     		.2byte	0x358
 3181 04cf 8C000000 		.4byte	0x8c
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 79


 3182 04d3 FE010000 		.4byte	.LLST13
 3183 04d7 0C       		.uleb128 0xc
 3184 04d8 2A090000 		.4byte	.LASF66
 3185 04dc 01       		.byte	0x1
 3186 04dd 5803     		.2byte	0x358
 3187 04df 82020000 		.4byte	0x282
 3188 04e3 1F020000 		.4byte	.LLST14
 3189 04e7 0C       		.uleb128 0xc
 3190 04e8 26020000 		.4byte	.LASF47
 3191 04ec 01       		.byte	0x1
 3192 04ed 5803     		.2byte	0x358
 3193 04ef 8C000000 		.4byte	0x8c
 3194 04f3 4B020000 		.4byte	.LLST15
 3195 04f7 12       		.uleb128 0x12
 3196 04f8 18000000 		.4byte	.LASF67
 3197 04fc 01       		.byte	0x1
 3198 04fd 5A03     		.2byte	0x35a
 3199 04ff C7050000 		.4byte	0x5c7
 3200 0503 03       		.uleb128 0x3
 3201 0504 91       		.byte	0x91
 3202 0505 E87D     		.sleb128 -280
 3203 0507 14       		.uleb128 0x14
 3204 0508 9D050000 		.4byte	.LASF68
 3205 050c 01       		.byte	0x1
 3206 050d 5B03     		.2byte	0x35b
 3207 050f 97000000 		.4byte	0x97
 3208 0513 6C020000 		.4byte	.LLST16
 3209 0517 17       		.uleb128 0x17
 3210 0518 00000000 		.4byte	.Ldebug_ranges0+0
 3211 051c 2F050000 		.4byte	0x52f
 3212 0520 0E       		.uleb128 0xe
 3213 0521 6900     		.ascii	"i\000"
 3214 0523 01       		.byte	0x1
 3215 0524 6A03     		.2byte	0x36a
 3216 0526 7E000000 		.4byte	0x7e
 3217 052a B9020000 		.4byte	.LLST17
 3218 052e 00       		.byte	0
 3219 052f 0F       		.uleb128 0xf
 3220 0530 1A000000 		.4byte	.LVL39
 3221 0534 D2150000 		.4byte	0x15d2
 3222 0538 4F050000 		.4byte	0x54f
 3223 053c 10       		.uleb128 0x10
 3224 053d 01       		.uleb128 0x1
 3225 053e 52       		.byte	0x52
 3226 053f 03       		.uleb128 0x3
 3227 0540 0A       		.byte	0xa
 3228 0541 0001     		.2byte	0x100
 3229 0543 10       		.uleb128 0x10
 3230 0544 01       		.uleb128 0x1
 3231 0545 51       		.byte	0x51
 3232 0546 01       		.uleb128 0x1
 3233 0547 30       		.byte	0x30
 3234 0548 10       		.uleb128 0x10
 3235 0549 01       		.uleb128 0x1
 3236 054a 50       		.byte	0x50
 3237 054b 02       		.uleb128 0x2
 3238 054c 7D       		.byte	0x7d
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 80


 3239 054d 00       		.sleb128 0
 3240 054e 00       		.byte	0
 3241 054f 0F       		.uleb128 0xf
 3242 0550 22000000 		.4byte	.LVL40
 3243 0554 95150000 		.4byte	0x1595
 3244 0558 68050000 		.4byte	0x568
 3245 055c 10       		.uleb128 0x10
 3246 055d 01       		.uleb128 0x1
 3247 055e 51       		.byte	0x51
 3248 055f 01       		.uleb128 0x1
 3249 0560 30       		.byte	0x30
 3250 0561 10       		.uleb128 0x10
 3251 0562 01       		.uleb128 0x1
 3252 0563 50       		.byte	0x50
 3253 0564 02       		.uleb128 0x2
 3254 0565 08       		.byte	0x8
 3255 0566 55       		.byte	0x55
 3256 0567 00       		.byte	0
 3257 0568 0F       		.uleb128 0xf
 3258 0569 28000000 		.4byte	.LVL41
 3259 056d B0150000 		.4byte	0x15b0
 3260 0571 7C050000 		.4byte	0x57c
 3261 0575 10       		.uleb128 0x10
 3262 0576 01       		.uleb128 0x1
 3263 0577 50       		.byte	0x50
 3264 0578 02       		.uleb128 0x2
 3265 0579 74       		.byte	0x74
 3266 057a 00       		.sleb128 0
 3267 057b 00       		.byte	0
 3268 057c 11       		.uleb128 0x11
 3269 057d 2C000000 		.4byte	.LVL42
 3270 0581 C6150000 		.4byte	0x15c6
 3271 0585 0F       		.uleb128 0xf
 3272 0586 3A000000 		.4byte	.LVL43
 3273 058a EF150000 		.4byte	0x15ef
 3274 058e AA050000 		.4byte	0x5aa
 3275 0592 10       		.uleb128 0x10
 3276 0593 01       		.uleb128 0x1
 3277 0594 53       		.byte	0x53
 3278 0595 01       		.uleb128 0x1
 3279 0596 30       		.byte	0x30
 3280 0597 10       		.uleb128 0x10
 3281 0598 01       		.uleb128 0x1
 3282 0599 52       		.byte	0x52
 3283 059a 02       		.uleb128 0x2
 3284 059b 75       		.byte	0x75
 3285 059c 00       		.sleb128 0
 3286 059d 10       		.uleb128 0x10
 3287 059e 01       		.uleb128 0x1
 3288 059f 51       		.byte	0x51
 3289 05a0 02       		.uleb128 0x2
 3290 05a1 7D       		.byte	0x7d
 3291 05a2 00       		.sleb128 0
 3292 05a3 10       		.uleb128 0x10
 3293 05a4 01       		.uleb128 0x1
 3294 05a5 50       		.byte	0x50
 3295 05a6 02       		.uleb128 0x2
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 81


 3296 05a7 08       		.byte	0x8
 3297 05a8 55       		.byte	0x55
 3298 05a9 00       		.byte	0
 3299 05aa 0F       		.uleb128 0xf
 3300 05ab 46000000 		.4byte	.LVL45
 3301 05af 14160000 		.4byte	0x1614
 3302 05b3 BD050000 		.4byte	0x5bd
 3303 05b7 10       		.uleb128 0x10
 3304 05b8 01       		.uleb128 0x1
 3305 05b9 50       		.byte	0x50
 3306 05ba 01       		.uleb128 0x1
 3307 05bb 31       		.byte	0x31
 3308 05bc 00       		.byte	0
 3309 05bd 11       		.uleb128 0x11
 3310 05be 4C000000 		.4byte	.LVL47
 3311 05c2 25160000 		.4byte	0x1625
 3312 05c6 00       		.byte	0
 3313 05c7 15       		.uleb128 0x15
 3314 05c8 8C000000 		.4byte	0x8c
 3315 05cc D7050000 		.4byte	0x5d7
 3316 05d0 16       		.uleb128 0x16
 3317 05d1 DA000000 		.4byte	0xda
 3318 05d5 FF       		.byte	0xff
 3319 05d6 00       		.byte	0
 3320 05d7 0B       		.uleb128 0xb
 3321 05d8 2B010000 		.4byte	.LASF69
 3322 05dc 01       		.byte	0x1
 3323 05dd DF02     		.2byte	0x2df
 3324 05df 8C000000 		.4byte	0x8c
 3325 05e3 00000000 		.4byte	.LFB82
 3326 05e7 18000000 		.4byte	.LFE82-.LFB82
 3327 05eb 01       		.uleb128 0x1
 3328 05ec 9C       		.byte	0x9c
 3329 05ed 1C060000 		.4byte	0x61c
 3330 05f1 12       		.uleb128 0x12
 3331 05f2 1E010000 		.4byte	.LASF58
 3332 05f6 01       		.byte	0x1
 3333 05f7 E102     		.2byte	0x2e1
 3334 05f9 8C000000 		.4byte	0x8c
 3335 05fd 02       		.uleb128 0x2
 3336 05fe 91       		.byte	0x91
 3337 05ff 77       		.sleb128 -9
 3338 0600 13       		.uleb128 0x13
 3339 0601 12000000 		.4byte	.LVL57
 3340 0605 AD040000 		.4byte	0x4ad
 3341 0609 10       		.uleb128 0x10
 3342 060a 01       		.uleb128 0x1
 3343 060b 52       		.byte	0x52
 3344 060c 01       		.uleb128 0x1
 3345 060d 31       		.byte	0x31
 3346 060e 10       		.uleb128 0x10
 3347 060f 01       		.uleb128 0x1
 3348 0610 51       		.byte	0x51
 3349 0611 02       		.uleb128 0x2
 3350 0612 74       		.byte	0x74
 3351 0613 00       		.sleb128 0
 3352 0614 10       		.uleb128 0x10
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 82


 3353 0615 01       		.uleb128 0x1
 3354 0616 50       		.byte	0x50
 3355 0617 02       		.uleb128 0x2
 3356 0618 08       		.byte	0x8
 3357 0619 60       		.byte	0x60
 3358 061a 00       		.byte	0
 3359 061b 00       		.byte	0
 3360 061c 0B       		.uleb128 0xb
 3361 061d F1070000 		.4byte	.LASF70
 3362 0621 01       		.byte	0x1
 3363 0622 F802     		.2byte	0x2f8
 3364 0624 8C000000 		.4byte	0x8c
 3365 0628 00000000 		.4byte	.LFB85
 3366 062c 2A000000 		.4byte	.LFE85-.LFB85
 3367 0630 01       		.uleb128 0x1
 3368 0631 9C       		.byte	0x9c
 3369 0632 80060000 		.4byte	0x680
 3370 0636 12       		.uleb128 0x12
 3371 0637 00040000 		.4byte	.LASF55
 3372 063b 01       		.byte	0x1
 3373 063c FA02     		.2byte	0x2fa
 3374 063e 80060000 		.4byte	0x680
 3375 0642 02       		.uleb128 0x2
 3376 0643 91       		.byte	0x91
 3377 0644 58       		.sleb128 -40
 3378 0645 14       		.uleb128 0x14
 3379 0646 1E010000 		.4byte	.LASF58
 3380 064a 01       		.byte	0x1
 3381 064b FD02     		.2byte	0x2fd
 3382 064d 8C000000 		.4byte	0x8c
 3383 0651 D7020000 		.4byte	.LLST18
 3384 0655 0E       		.uleb128 0xe
 3385 0656 6900     		.ascii	"i\000"
 3386 0658 01       		.byte	0x1
 3387 0659 FE02     		.2byte	0x2fe
 3388 065b 7E000000 		.4byte	0x7e
 3389 065f 0C030000 		.4byte	.LLST19
 3390 0663 13       		.uleb128 0x13
 3391 0664 0E000000 		.4byte	.LVL58
 3392 0668 AD040000 		.4byte	0x4ad
 3393 066c 10       		.uleb128 0x10
 3394 066d 01       		.uleb128 0x1
 3395 066e 52       		.byte	0x52
 3396 066f 02       		.uleb128 0x2
 3397 0670 08       		.byte	0x8
 3398 0671 20       		.byte	0x20
 3399 0672 10       		.uleb128 0x10
 3400 0673 01       		.uleb128 0x1
 3401 0674 51       		.byte	0x51
 3402 0675 02       		.uleb128 0x2
 3403 0676 7D       		.byte	0x7d
 3404 0677 00       		.sleb128 0
 3405 0678 10       		.uleb128 0x10
 3406 0679 01       		.uleb128 0x1
 3407 067a 50       		.byte	0x50
 3408 067b 02       		.uleb128 0x2
 3409 067c 08       		.byte	0x8
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 83


 3410 067d 40       		.byte	0x40
 3411 067e 00       		.byte	0
 3412 067f 00       		.byte	0
 3413 0680 15       		.uleb128 0x15
 3414 0681 8C000000 		.4byte	0x8c
 3415 0685 90060000 		.4byte	0x690
 3416 0689 16       		.uleb128 0x16
 3417 068a DA000000 		.4byte	0xda
 3418 068e 1F       		.byte	0x1f
 3419 068f 00       		.byte	0
 3420 0690 0B       		.uleb128 0xb
 3421 0691 8D070000 		.4byte	.LASF71
 3422 0695 01       		.byte	0x1
 3423 0696 A002     		.2byte	0x2a0
 3424 0698 A2000000 		.4byte	0xa2
 3425 069c 00000000 		.4byte	.LFB76
 3426 06a0 1C000000 		.4byte	.LFE76-.LFB76
 3427 06a4 01       		.uleb128 0x1
 3428 06a5 9C       		.byte	0x9c
 3429 06a6 E6060000 		.4byte	0x6e6
 3430 06aa 0C       		.uleb128 0xc
 3431 06ab 81010000 		.4byte	.LASF46
 3432 06af 01       		.byte	0x1
 3433 06b0 A002     		.2byte	0x2a0
 3434 06b2 A2000000 		.4byte	0xa2
 3435 06b6 2B030000 		.4byte	.LLST20
 3436 06ba 12       		.uleb128 0x12
 3437 06bb 00040000 		.4byte	.LASF55
 3438 06bf 01       		.byte	0x1
 3439 06c0 A202     		.2byte	0x2a2
 3440 06c2 72040000 		.4byte	0x472
 3441 06c6 02       		.uleb128 0x2
 3442 06c7 91       		.byte	0x91
 3443 06c8 74       		.sleb128 -12
 3444 06c9 13       		.uleb128 0x13
 3445 06ca 10000000 		.4byte	.LVL67
 3446 06ce AD040000 		.4byte	0x4ad
 3447 06d2 10       		.uleb128 0x10
 3448 06d3 01       		.uleb128 0x1
 3449 06d4 52       		.byte	0x52
 3450 06d5 01       		.uleb128 0x1
 3451 06d6 32       		.byte	0x32
 3452 06d7 10       		.uleb128 0x10
 3453 06d8 01       		.uleb128 0x1
 3454 06d9 51       		.byte	0x51
 3455 06da 02       		.uleb128 0x2
 3456 06db 74       		.byte	0x74
 3457 06dc 00       		.sleb128 0
 3458 06dd 10       		.uleb128 0x10
 3459 06de 01       		.uleb128 0x1
 3460 06df 50       		.byte	0x50
 3461 06e0 03       		.uleb128 0x3
 3462 06e1 F3       		.byte	0xf3
 3463 06e2 01       		.uleb128 0x1
 3464 06e3 50       		.byte	0x50
 3465 06e4 00       		.byte	0
 3466 06e5 00       		.byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 84


 3467 06e6 0B       		.uleb128 0xb
 3468 06e7 08090000 		.4byte	.LASF72
 3469 06eb 01       		.byte	0x1
 3470 06ec 8902     		.2byte	0x289
 3471 06ee A2000000 		.4byte	0xa2
 3472 06f2 00000000 		.4byte	.LFB73
 3473 06f6 0A000000 		.4byte	.LFE73-.LFB73
 3474 06fa 01       		.uleb128 0x1
 3475 06fb 9C       		.byte	0x9c
 3476 06fc 11070000 		.4byte	0x711
 3477 0700 13       		.uleb128 0x13
 3478 0701 08000000 		.4byte	.LVL68
 3479 0705 90060000 		.4byte	0x690
 3480 0709 10       		.uleb128 0x10
 3481 070a 01       		.uleb128 0x1
 3482 070b 50       		.byte	0x50
 3483 070c 02       		.uleb128 0x2
 3484 070d 08       		.byte	0x8
 3485 070e 3A       		.byte	0x3a
 3486 070f 00       		.byte	0
 3487 0710 00       		.byte	0
 3488 0711 0B       		.uleb128 0xb
 3489 0712 C2010000 		.4byte	.LASF73
 3490 0716 01       		.byte	0x1
 3491 0717 E702     		.2byte	0x2e7
 3492 0719 8C000000 		.4byte	0x8c
 3493 071d 00000000 		.4byte	.LFB83
 3494 0721 1A000000 		.4byte	.LFE83-.LFB83
 3495 0725 01       		.uleb128 0x1
 3496 0726 9C       		.byte	0x9c
 3497 0727 70070000 		.4byte	0x770
 3498 072b 0C       		.uleb128 0xc
 3499 072c 1D030000 		.4byte	.LASF53
 3500 0730 01       		.byte	0x1
 3501 0731 E702     		.2byte	0x2e7
 3502 0733 8C000000 		.4byte	0x8c
 3503 0737 4C030000 		.4byte	.LLST21
 3504 073b 18       		.uleb128 0x18
 3505 073c 72657400 		.ascii	"ret\000"
 3506 0740 01       		.byte	0x1
 3507 0741 E902     		.2byte	0x2e9
 3508 0743 8C000000 		.4byte	0x8c
 3509 0747 02       		.uleb128 0x2
 3510 0748 91       		.byte	0x91
 3511 0749 77       		.sleb128 -9
 3512 074a 14       		.uleb128 0x14
 3513 074b 47070000 		.4byte	.LASF56
 3514 074f 01       		.byte	0x1
 3515 0750 EA02     		.2byte	0x2ea
 3516 0752 8C000000 		.4byte	0x8c
 3517 0756 6D030000 		.4byte	.LLST22
 3518 075a 13       		.uleb128 0x13
 3519 075b 14000000 		.4byte	.LVL72
 3520 075f AD040000 		.4byte	0x4ad
 3521 0763 10       		.uleb128 0x10
 3522 0764 01       		.uleb128 0x1
 3523 0765 52       		.byte	0x52
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 85


 3524 0766 01       		.uleb128 0x1
 3525 0767 31       		.byte	0x31
 3526 0768 10       		.uleb128 0x10
 3527 0769 01       		.uleb128 0x1
 3528 076a 51       		.byte	0x51
 3529 076b 02       		.uleb128 0x2
 3530 076c 74       		.byte	0x74
 3531 076d 00       		.sleb128 0
 3532 076e 00       		.byte	0
 3533 076f 00       		.byte	0
 3534 0770 0B       		.uleb128 0xb
 3535 0771 E1070000 		.4byte	.LASF74
 3536 0775 01       		.byte	0x1
 3537 0776 A802     		.2byte	0x2a8
 3538 0778 A2000000 		.4byte	0xa2
 3539 077c 00000000 		.4byte	.LFB77
 3540 0780 3C000000 		.4byte	.LFE77-.LFB77
 3541 0784 01       		.uleb128 0x1
 3542 0785 9C       		.byte	0x9c
 3543 0786 11080000 		.4byte	0x811
 3544 078a 0C       		.uleb128 0xc
 3545 078b C7070000 		.4byte	.LASF60
 3546 078f 01       		.byte	0x1
 3547 0790 A802     		.2byte	0x2a8
 3548 0792 A2000000 		.4byte	0xa2
 3549 0796 80030000 		.4byte	.LLST23
 3550 079a 14       		.uleb128 0x14
 3551 079b 31040000 		.4byte	.LASF61
 3552 079f 01       		.byte	0x1
 3553 07a0 AA02     		.2byte	0x2aa
 3554 07a2 8C000000 		.4byte	0x8c
 3555 07a6 A1030000 		.4byte	.LLST24
 3556 07aa 14       		.uleb128 0x14
 3557 07ab 3D010000 		.4byte	.LASF62
 3558 07af 01       		.byte	0x1
 3559 07b0 AB02     		.2byte	0x2ab
 3560 07b2 8C000000 		.4byte	0x8c
 3561 07b6 C0030000 		.4byte	.LLST25
 3562 07ba 12       		.uleb128 0x12
 3563 07bb 06080000 		.4byte	.LASF63
 3564 07bf 01       		.byte	0x1
 3565 07c0 AC02     		.2byte	0x2ac
 3566 07c2 72040000 		.4byte	0x472
 3567 07c6 02       		.uleb128 0x2
 3568 07c7 91       		.byte	0x91
 3569 07c8 74       		.sleb128 -12
 3570 07c9 12       		.uleb128 0x12
 3571 07ca 00040000 		.4byte	.LASF55
 3572 07ce 01       		.byte	0x1
 3573 07cf AD02     		.2byte	0x2ad
 3574 07d1 72040000 		.4byte	0x472
 3575 07d5 02       		.uleb128 0x2
 3576 07d6 91       		.byte	0x91
 3577 07d7 70       		.sleb128 -16
 3578 07d8 0F       		.uleb128 0xf
 3579 07d9 1C000000 		.4byte	.LVL77
 3580 07dd EA010000 		.4byte	0x1ea
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 86


 3581 07e1 F6070000 		.4byte	0x7f6
 3582 07e5 10       		.uleb128 0x10
 3583 07e6 01       		.uleb128 0x1
 3584 07e7 52       		.byte	0x52
 3585 07e8 01       		.uleb128 0x1
 3586 07e9 32       		.byte	0x32
 3587 07ea 10       		.uleb128 0x10
 3588 07eb 01       		.uleb128 0x1
 3589 07ec 51       		.byte	0x51
 3590 07ed 02       		.uleb128 0x2
 3591 07ee 91       		.byte	0x91
 3592 07ef 74       		.sleb128 -12
 3593 07f0 10       		.uleb128 0x10
 3594 07f1 01       		.uleb128 0x1
 3595 07f2 50       		.byte	0x50
 3596 07f3 01       		.uleb128 0x1
 3597 07f4 30       		.byte	0x30
 3598 07f5 00       		.byte	0
 3599 07f6 13       		.uleb128 0x13
 3600 07f7 26000000 		.4byte	.LVL78
 3601 07fb AD040000 		.4byte	0x4ad
 3602 07ff 10       		.uleb128 0x10
 3603 0800 01       		.uleb128 0x1
 3604 0801 52       		.byte	0x52
 3605 0802 01       		.uleb128 0x1
 3606 0803 32       		.byte	0x32
 3607 0804 10       		.uleb128 0x10
 3608 0805 01       		.uleb128 0x1
 3609 0806 51       		.byte	0x51
 3610 0807 02       		.uleb128 0x2
 3611 0808 7D       		.byte	0x7d
 3612 0809 00       		.sleb128 0
 3613 080a 10       		.uleb128 0x10
 3614 080b 01       		.uleb128 0x1
 3615 080c 50       		.byte	0x50
 3616 080d 01       		.uleb128 0x1
 3617 080e 30       		.byte	0x30
 3618 080f 00       		.byte	0
 3619 0810 00       		.byte	0
 3620 0811 0B       		.uleb128 0xb
 3621 0812 C0070000 		.4byte	.LASF75
 3622 0816 01       		.byte	0x1
 3623 0817 7D02     		.2byte	0x27d
 3624 0819 EF000000 		.4byte	0xef
 3625 081d 00000000 		.4byte	.LFB72
 3626 0821 18000000 		.4byte	.LFE72-.LFB72
 3627 0825 01       		.uleb128 0x1
 3628 0826 9C       		.byte	0x9c
 3629 0827 52080000 		.4byte	0x852
 3630 082b 0F       		.uleb128 0xf
 3631 082c 0A000000 		.4byte	.LVL79
 3632 0830 70070000 		.4byte	0x770
 3633 0834 40080000 		.4byte	0x840
 3634 0838 10       		.uleb128 0x10
 3635 0839 01       		.uleb128 0x1
 3636 083a 50       		.byte	0x50
 3637 083b 03       		.uleb128 0x3
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 87


 3638 083c 0B       		.byte	0xb
 3639 083d 0080     		.2byte	0x8000
 3640 083f 00       		.byte	0
 3641 0840 13       		.uleb128 0x13
 3642 0841 16000000 		.4byte	.LVL80
 3643 0845 70070000 		.4byte	0x770
 3644 0849 10       		.uleb128 0x10
 3645 084a 01       		.uleb128 0x1
 3646 084b 50       		.byte	0x50
 3647 084c 03       		.uleb128 0x3
 3648 084d 0B       		.byte	0xb
 3649 084e 0080     		.2byte	0x8000
 3650 0850 00       		.byte	0
 3651 0851 00       		.byte	0
 3652 0852 0B       		.uleb128 0xb
 3653 0853 24030000 		.4byte	.LASF76
 3654 0857 01       		.byte	0x1
 3655 0858 7702     		.2byte	0x277
 3656 085a EF000000 		.4byte	0xef
 3657 085e 00000000 		.4byte	.LFB71
 3658 0862 0A000000 		.4byte	.LFE71-.LFB71
 3659 0866 01       		.uleb128 0x1
 3660 0867 9C       		.byte	0x9c
 3661 0868 7D080000 		.4byte	0x87d
 3662 086c 13       		.uleb128 0x13
 3663 086d 08000000 		.4byte	.LVL81
 3664 0871 70070000 		.4byte	0x770
 3665 0875 10       		.uleb128 0x10
 3666 0876 01       		.uleb128 0x1
 3667 0877 50       		.byte	0x50
 3668 0878 02       		.uleb128 0x2
 3669 0879 08       		.byte	0x8
 3670 087a 20       		.byte	0x20
 3671 087b 00       		.byte	0
 3672 087c 00       		.byte	0
 3673 087d 19       		.uleb128 0x19
 3674 087e 53030000 		.4byte	.LASF84
 3675 0882 01       		.byte	0x1
 3676 0883 0601     		.2byte	0x106
 3677 0885 A2000000 		.4byte	0xa2
 3678 0889 00000000 		.4byte	.LFB36
 3679 088d 0A000000 		.4byte	.LFE36-.LFB36
 3680 0891 01       		.uleb128 0x1
 3681 0892 9C       		.byte	0x9c
 3682 0893 A7080000 		.4byte	0x8a7
 3683 0897 13       		.uleb128 0x13
 3684 0898 08000000 		.4byte	.LVL82
 3685 089c 90060000 		.4byte	0x690
 3686 08a0 10       		.uleb128 0x10
 3687 08a1 01       		.uleb128 0x1
 3688 08a2 50       		.byte	0x50
 3689 08a3 01       		.uleb128 0x1
 3690 08a4 34       		.byte	0x34
 3691 08a5 00       		.byte	0
 3692 08a6 00       		.byte	0
 3693 08a7 1A       		.uleb128 0x1a
 3694 08a8 DA010000 		.4byte	.LASF78
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 88


 3695 08ac 01       		.byte	0x1
 3696 08ad 0D01     		.2byte	0x10d
 3697 08af 00000000 		.4byte	.LFB37
 3698 08b3 0C000000 		.4byte	.LFE37-.LFB37
 3699 08b7 01       		.uleb128 0x1
 3700 08b8 9C       		.byte	0x9c
 3701 08b9 CC080000 		.4byte	0x8cc
 3702 08bd 1B       		.uleb128 0x1b
 3703 08be FE080000 		.4byte	.LASF77
 3704 08c2 01       		.byte	0x1
 3705 08c3 0D01     		.2byte	0x10d
 3706 08c5 15010000 		.4byte	0x115
 3707 08c9 01       		.uleb128 0x1
 3708 08ca 50       		.byte	0x50
 3709 08cb 00       		.byte	0
 3710 08cc 1C       		.uleb128 0x1c
 3711 08cd B5020000 		.4byte	.LASF79
 3712 08d1 01       		.byte	0x1
 3713 08d2 1101     		.2byte	0x111
 3714 08d4 97000000 		.4byte	0x97
 3715 08d8 00000000 		.4byte	.LFB38
 3716 08dc 3C000000 		.4byte	.LFE38-.LFB38
 3717 08e0 01       		.uleb128 0x1
 3718 08e1 9C       		.byte	0x9c
 3719 08e2 2C090000 		.4byte	0x92c
 3720 08e6 14       		.uleb128 0x14
 3721 08e7 B6080000 		.4byte	.LASF80
 3722 08eb 01       		.byte	0x1
 3723 08ec 1301     		.2byte	0x113
 3724 08ee 97000000 		.4byte	0x97
 3725 08f2 ED030000 		.4byte	.LLST26
 3726 08f6 0F       		.uleb128 0xf
 3727 08f7 1A000000 		.4byte	.LVL85
 3728 08fb 90060000 		.4byte	0x690
 3729 08ff 09090000 		.4byte	0x909
 3730 0903 10       		.uleb128 0x10
 3731 0904 01       		.uleb128 0x1
 3732 0905 50       		.byte	0x50
 3733 0906 01       		.uleb128 0x1
 3734 0907 40       		.byte	0x40
 3735 0908 00       		.byte	0
 3736 0909 0F       		.uleb128 0xf
 3737 090a 24000000 		.4byte	.LVL88
 3738 090e 90060000 		.4byte	0x690
 3739 0912 1C090000 		.4byte	0x91c
 3740 0916 10       		.uleb128 0x10
 3741 0917 01       		.uleb128 0x1
 3742 0918 50       		.byte	0x50
 3743 0919 01       		.uleb128 0x1
 3744 091a 42       		.byte	0x42
 3745 091b 00       		.byte	0
 3746 091c 13       		.uleb128 0x13
 3747 091d 2E000000 		.4byte	.LVL91
 3748 0921 90060000 		.4byte	0x690
 3749 0925 10       		.uleb128 0x10
 3750 0926 01       		.uleb128 0x1
 3751 0927 50       		.byte	0x50
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 89


 3752 0928 01       		.uleb128 0x1
 3753 0929 44       		.byte	0x44
 3754 092a 00       		.byte	0
 3755 092b 00       		.byte	0
 3756 092c 1A       		.uleb128 0x1a
 3757 092d 08010000 		.4byte	.LASF81
 3758 0931 01       		.byte	0x1
 3759 0932 2601     		.2byte	0x126
 3760 0934 00000000 		.4byte	.LFB39
 3761 0938 0C000000 		.4byte	.LFE39-.LFB39
 3762 093c 01       		.uleb128 0x1
 3763 093d 9C       		.byte	0x9c
 3764 093e 51090000 		.4byte	0x951
 3765 0942 1B       		.uleb128 0x1b
 3766 0943 FE080000 		.4byte	.LASF77
 3767 0947 01       		.byte	0x1
 3768 0948 2601     		.2byte	0x126
 3769 094a 5F010000 		.4byte	0x15f
 3770 094e 01       		.uleb128 0x1
 3771 094f 50       		.byte	0x50
 3772 0950 00       		.byte	0
 3773 0951 1C       		.uleb128 0x1c
 3774 0952 96020000 		.4byte	.LASF82
 3775 0956 01       		.byte	0x1
 3776 0957 2901     		.2byte	0x129
 3777 0959 A2000000 		.4byte	0xa2
 3778 095d 00000000 		.4byte	.LFB40
 3779 0961 68000000 		.4byte	.LFE40-.LFB40
 3780 0965 01       		.uleb128 0x1
 3781 0966 9C       		.byte	0x9c
 3782 0967 280A0000 		.4byte	0xa28
 3783 096b 14       		.uleb128 0x14
 3784 096c A5050000 		.4byte	.LASF83
 3785 0970 01       		.byte	0x1
 3786 0971 2B01     		.2byte	0x12b
 3787 0973 A2000000 		.4byte	0xa2
 3788 0977 51040000 		.4byte	.LLST27
 3789 097b 0F       		.uleb128 0xf
 3790 097c 18000000 		.4byte	.LVL97
 3791 0980 90060000 		.4byte	0x690
 3792 0984 8E090000 		.4byte	0x98e
 3793 0988 10       		.uleb128 0x10
 3794 0989 01       		.uleb128 0x1
 3795 098a 50       		.byte	0x50
 3796 098b 01       		.uleb128 0x1
 3797 098c 3C       		.byte	0x3c
 3798 098d 00       		.byte	0
 3799 098e 0F       		.uleb128 0xf
 3800 098f 20000000 		.4byte	.LVL98
 3801 0993 90060000 		.4byte	0x690
 3802 0997 A1090000 		.4byte	0x9a1
 3803 099b 10       		.uleb128 0x10
 3804 099c 01       		.uleb128 0x1
 3805 099d 50       		.byte	0x50
 3806 099e 01       		.uleb128 0x1
 3807 099f 3E       		.byte	0x3e
 3808 09a0 00       		.byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 90


 3809 09a1 0F       		.uleb128 0xf
 3810 09a2 28000000 		.4byte	.LVL99
 3811 09a6 90060000 		.4byte	0x690
 3812 09aa B4090000 		.4byte	0x9b4
 3813 09ae 10       		.uleb128 0x10
 3814 09af 01       		.uleb128 0x1
 3815 09b0 50       		.byte	0x50
 3816 09b1 01       		.uleb128 0x1
 3817 09b2 38       		.byte	0x38
 3818 09b3 00       		.byte	0
 3819 09b4 0F       		.uleb128 0xf
 3820 09b5 30000000 		.4byte	.LVL101
 3821 09b9 90060000 		.4byte	0x690
 3822 09bd C7090000 		.4byte	0x9c7
 3823 09c1 10       		.uleb128 0x10
 3824 09c2 01       		.uleb128 0x1
 3825 09c3 50       		.byte	0x50
 3826 09c4 01       		.uleb128 0x1
 3827 09c5 3A       		.byte	0x3a
 3828 09c6 00       		.byte	0
 3829 09c7 0F       		.uleb128 0xf
 3830 09c8 38000000 		.4byte	.LVL103
 3831 09cc 90060000 		.4byte	0x690
 3832 09d0 DB090000 		.4byte	0x9db
 3833 09d4 10       		.uleb128 0x10
 3834 09d5 01       		.uleb128 0x1
 3835 09d6 50       		.byte	0x50
 3836 09d7 02       		.uleb128 0x2
 3837 09d8 08       		.byte	0x8
 3838 09d9 2A       		.byte	0x2a
 3839 09da 00       		.byte	0
 3840 09db 0F       		.uleb128 0xf
 3841 09dc 40000000 		.4byte	.LVL105
 3842 09e0 90060000 		.4byte	0x690
 3843 09e4 EF090000 		.4byte	0x9ef
 3844 09e8 10       		.uleb128 0x10
 3845 09e9 01       		.uleb128 0x1
 3846 09ea 50       		.byte	0x50
 3847 09eb 02       		.uleb128 0x2
 3848 09ec 08       		.byte	0x8
 3849 09ed 28       		.byte	0x28
 3850 09ee 00       		.byte	0
 3851 09ef 0F       		.uleb128 0xf
 3852 09f0 48000000 		.4byte	.LVL107
 3853 09f4 90060000 		.4byte	0x690
 3854 09f8 030A0000 		.4byte	0xa03
 3855 09fc 10       		.uleb128 0x10
 3856 09fd 01       		.uleb128 0x1
 3857 09fe 50       		.byte	0x50
 3858 09ff 02       		.uleb128 0x2
 3859 0a00 08       		.byte	0x8
 3860 0a01 2E       		.byte	0x2e
 3861 0a02 00       		.byte	0
 3862 0a03 0F       		.uleb128 0xf
 3863 0a04 50000000 		.4byte	.LVL109
 3864 0a08 90060000 		.4byte	0x690
 3865 0a0c 170A0000 		.4byte	0xa17
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 91


 3866 0a10 10       		.uleb128 0x10
 3867 0a11 01       		.uleb128 0x1
 3868 0a12 50       		.byte	0x50
 3869 0a13 02       		.uleb128 0x2
 3870 0a14 08       		.byte	0x8
 3871 0a15 2C       		.byte	0x2c
 3872 0a16 00       		.byte	0
 3873 0a17 13       		.uleb128 0x13
 3874 0a18 58000000 		.4byte	.LVL111
 3875 0a1c 90060000 		.4byte	0x690
 3876 0a20 10       		.uleb128 0x10
 3877 0a21 01       		.uleb128 0x1
 3878 0a22 50       		.byte	0x50
 3879 0a23 02       		.uleb128 0x2
 3880 0a24 08       		.byte	0x8
 3881 0a25 3C       		.byte	0x3c
 3882 0a26 00       		.byte	0
 3883 0a27 00       		.byte	0
 3884 0a28 19       		.uleb128 0x19
 3885 0a29 2F090000 		.4byte	.LASF85
 3886 0a2d 01       		.byte	0x1
 3887 0a2e 4E01     		.2byte	0x14e
 3888 0a30 97000000 		.4byte	0x97
 3889 0a34 00000000 		.4byte	.LFB41
 3890 0a38 0C000000 		.4byte	.LFE41-.LFB41
 3891 0a3c 01       		.uleb128 0x1
 3892 0a3d 9C       		.byte	0x9c
 3893 0a3e 520A0000 		.4byte	0xa52
 3894 0a42 13       		.uleb128 0x13
 3895 0a43 08000000 		.4byte	.LVL114
 3896 0a47 90060000 		.4byte	0x690
 3897 0a4b 10       		.uleb128 0x10
 3898 0a4c 01       		.uleb128 0x1
 3899 0a4d 50       		.byte	0x50
 3900 0a4e 01       		.uleb128 0x1
 3901 0a4f 48       		.byte	0x48
 3902 0a50 00       		.byte	0
 3903 0a51 00       		.byte	0
 3904 0a52 1A       		.uleb128 0x1a
 3905 0a53 F2060000 		.4byte	.LASF86
 3906 0a57 01       		.byte	0x1
 3907 0a58 5501     		.2byte	0x155
 3908 0a5a 00000000 		.4byte	.LFB42
 3909 0a5e 0C000000 		.4byte	.LFE42-.LFB42
 3910 0a62 01       		.uleb128 0x1
 3911 0a63 9C       		.byte	0x9c
 3912 0a64 770A0000 		.4byte	0xa77
 3913 0a68 1B       		.uleb128 0x1b
 3914 0a69 FE080000 		.4byte	.LASF77
 3915 0a6d 01       		.byte	0x1
 3916 0a6e 5501     		.2byte	0x155
 3917 0a70 7F010000 		.4byte	0x17f
 3918 0a74 01       		.uleb128 0x1
 3919 0a75 50       		.byte	0x50
 3920 0a76 00       		.byte	0
 3921 0a77 1C       		.uleb128 0x1c
 3922 0a78 93010000 		.4byte	.LASF87
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 92


 3923 0a7c 01       		.byte	0x1
 3924 0a7d 5801     		.2byte	0x158
 3925 0a7f A2000000 		.4byte	0xa2
 3926 0a83 00000000 		.4byte	.LFB43
 3927 0a87 28000000 		.4byte	.LFE43-.LFB43
 3928 0a8b 01       		.uleb128 0x1
 3929 0a8c 9C       		.byte	0x9c
 3930 0a8d C50A0000 		.4byte	0xac5
 3931 0a91 14       		.uleb128 0x14
 3932 0a92 96070000 		.4byte	.LASF88
 3933 0a96 01       		.byte	0x1
 3934 0a97 5A01     		.2byte	0x15a
 3935 0a99 A2000000 		.4byte	0xa2
 3936 0a9d 06050000 		.4byte	.LLST28
 3937 0aa1 0F       		.uleb128 0xf
 3938 0aa2 16000000 		.4byte	.LVL117
 3939 0aa6 90060000 		.4byte	0x690
 3940 0aaa B40A0000 		.4byte	0xab4
 3941 0aae 10       		.uleb128 0x10
 3942 0aaf 01       		.uleb128 0x1
 3943 0ab0 50       		.byte	0x50
 3944 0ab1 01       		.uleb128 0x1
 3945 0ab2 4C       		.byte	0x4c
 3946 0ab3 00       		.byte	0
 3947 0ab4 13       		.uleb128 0x13
 3948 0ab5 1E000000 		.4byte	.LVL119
 3949 0ab9 90060000 		.4byte	0x690
 3950 0abd 10       		.uleb128 0x10
 3951 0abe 01       		.uleb128 0x1
 3952 0abf 50       		.byte	0x50
 3953 0ac0 02       		.uleb128 0x2
 3954 0ac1 08       		.byte	0x8
 3955 0ac2 30       		.byte	0x30
 3956 0ac3 00       		.byte	0
 3957 0ac4 00       		.byte	0
 3958 0ac5 1A       		.uleb128 0x1a
 3959 0ac6 46000000 		.4byte	.LASF89
 3960 0aca 01       		.byte	0x1
 3961 0acb 6A01     		.2byte	0x16a
 3962 0acd 00000000 		.4byte	.LFB44
 3963 0ad1 0C000000 		.4byte	.LFE44-.LFB44
 3964 0ad5 01       		.uleb128 0x1
 3965 0ad6 9C       		.byte	0x9c
 3966 0ad7 EA0A0000 		.4byte	0xaea
 3967 0adb 1B       		.uleb128 0x1b
 3968 0adc FE080000 		.4byte	.LASF77
 3969 0ae0 01       		.byte	0x1
 3970 0ae1 6A01     		.2byte	0x16a
 3971 0ae3 9F010000 		.4byte	0x19f
 3972 0ae7 01       		.uleb128 0x1
 3973 0ae8 50       		.byte	0x50
 3974 0ae9 00       		.byte	0
 3975 0aea 1C       		.uleb128 0x1c
 3976 0aeb 9C010000 		.4byte	.LASF90
 3977 0aef 01       		.byte	0x1
 3978 0af0 6D01     		.2byte	0x16d
 3979 0af2 8C000000 		.4byte	0x8c
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 93


 3980 0af6 00000000 		.4byte	.LFB45
 3981 0afa 20000000 		.4byte	.LFE45-.LFB45
 3982 0afe 01       		.uleb128 0x1
 3983 0aff 9C       		.byte	0x9c
 3984 0b00 430B0000 		.4byte	0xb43
 3985 0b04 14       		.uleb128 0x14
 3986 0b05 05040000 		.4byte	.LASF91
 3987 0b09 01       		.byte	0x1
 3988 0b0a 6F01     		.2byte	0x16f
 3989 0b0c A2000000 		.4byte	0xa2
 3990 0b10 53050000 		.4byte	.LLST29
 3991 0b14 12       		.uleb128 0x12
 3992 0b15 D0010000 		.4byte	.LASF92
 3993 0b19 01       		.byte	0x1
 3994 0b1a 7001     		.2byte	0x170
 3995 0b1c 8C000000 		.4byte	0x8c
 3996 0b20 01       		.uleb128 0x1
 3997 0b21 53       		.byte	0x53
 3998 0b22 14       		.uleb128 0x14
 3999 0b23 0C060000 		.4byte	.LASF93
 4000 0b27 01       		.byte	0x1
 4001 0b28 7101     		.2byte	0x171
 4002 0b2a 8C000000 		.4byte	0x8c
 4003 0b2e 66050000 		.4byte	.LLST30
 4004 0b32 13       		.uleb128 0x13
 4005 0b33 08000000 		.4byte	.LVL123
 4006 0b37 90060000 		.4byte	0x690
 4007 0b3b 10       		.uleb128 0x10
 4008 0b3c 01       		.uleb128 0x1
 4009 0b3d 50       		.byte	0x50
 4010 0b3e 02       		.uleb128 0x2
 4011 0b3f 08       		.byte	0x8
 4012 0b40 20       		.byte	0x20
 4013 0b41 00       		.byte	0
 4014 0b42 00       		.byte	0
 4015 0b43 1A       		.uleb128 0x1a
 4016 0b44 F3050000 		.4byte	.LASF94
 4017 0b48 01       		.byte	0x1
 4018 0b49 7B01     		.2byte	0x17b
 4019 0b4b 00000000 		.4byte	.LFB46
 4020 0b4f 0C000000 		.4byte	.LFE46-.LFB46
 4021 0b53 01       		.uleb128 0x1
 4022 0b54 9C       		.byte	0x9c
 4023 0b55 680B0000 		.4byte	0xb68
 4024 0b59 1B       		.uleb128 0x1b
 4025 0b5a FE080000 		.4byte	.LASF77
 4026 0b5e 01       		.byte	0x1
 4027 0b5f 7B01     		.2byte	0x17b
 4028 0b61 BF010000 		.4byte	0x1bf
 4029 0b65 01       		.uleb128 0x1
 4030 0b66 50       		.byte	0x50
 4031 0b67 00       		.byte	0
 4032 0b68 1C       		.uleb128 0x1c
 4033 0b69 D3000000 		.4byte	.LASF95
 4034 0b6d 01       		.byte	0x1
 4035 0b6e 7E01     		.2byte	0x17e
 4036 0b70 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 94


 4037 0b74 00000000 		.4byte	.LFB47
 4038 0b78 28000000 		.4byte	.LFE47-.LFB47
 4039 0b7c 01       		.uleb128 0x1
 4040 0b7d 9C       		.byte	0x9c
 4041 0b7e B50B0000 		.4byte	0xbb5
 4042 0b82 14       		.uleb128 0x14
 4043 0b83 17060000 		.4byte	.LASF96
 4044 0b87 01       		.byte	0x1
 4045 0b88 8001     		.2byte	0x180
 4046 0b8a A2000000 		.4byte	0xa2
 4047 0b8e 79050000 		.4byte	.LLST31
 4048 0b92 0F       		.uleb128 0xf
 4049 0b93 16000000 		.4byte	.LVL129
 4050 0b97 90060000 		.4byte	0x690
 4051 0b9b A50B0000 		.4byte	0xba5
 4052 0b9f 10       		.uleb128 0x10
 4053 0ba0 01       		.uleb128 0x1
 4054 0ba1 50       		.byte	0x50
 4055 0ba2 01       		.uleb128 0x1
 4056 0ba3 32       		.byte	0x32
 4057 0ba4 00       		.byte	0
 4058 0ba5 13       		.uleb128 0x13
 4059 0ba6 1E000000 		.4byte	.LVL131
 4060 0baa 90060000 		.4byte	0x690
 4061 0bae 10       		.uleb128 0x10
 4062 0baf 01       		.uleb128 0x1
 4063 0bb0 50       		.byte	0x50
 4064 0bb1 01       		.uleb128 0x1
 4065 0bb2 4E       		.byte	0x4e
 4066 0bb3 00       		.byte	0
 4067 0bb4 00       		.byte	0
 4068 0bb5 19       		.uleb128 0x19
 4069 0bb6 9C000000 		.4byte	.LASF97
 4070 0bba 01       		.byte	0x1
 4071 0bbb 9101     		.2byte	0x191
 4072 0bbd EF000000 		.4byte	0xef
 4073 0bc1 00000000 		.4byte	.LFB48
 4074 0bc5 0E000000 		.4byte	.LFE48-.LFB48
 4075 0bc9 01       		.uleb128 0x1
 4076 0bca 9C       		.byte	0x9c
 4077 0bcb E90B0000 		.4byte	0xbe9
 4078 0bcf 14       		.uleb128 0x14
 4079 0bd0 D0070000 		.4byte	.LASF98
 4080 0bd4 01       		.byte	0x1
 4081 0bd5 9301     		.2byte	0x193
 4082 0bd7 A2000000 		.4byte	0xa2
 4083 0bdb C6050000 		.4byte	.LLST32
 4084 0bdf 11       		.uleb128 0x11
 4085 0be0 06000000 		.4byte	.LVL134
 4086 0be4 E6060000 		.4byte	0x6e6
 4087 0be8 00       		.byte	0
 4088 0be9 19       		.uleb128 0x19
 4089 0bea C0000000 		.4byte	.LASF99
 4090 0bee 01       		.byte	0x1
 4091 0bef AC01     		.2byte	0x1ac
 4092 0bf1 EF000000 		.4byte	0xef
 4093 0bf5 00000000 		.4byte	.LFB50
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 95


 4094 0bf9 0C000000 		.4byte	.LFE50-.LFB50
 4095 0bfd 01       		.uleb128 0x1
 4096 0bfe 9C       		.byte	0x9c
 4097 0bff 1D0C0000 		.4byte	0xc1d
 4098 0c03 14       		.uleb128 0x14
 4099 0c04 D0070000 		.4byte	.LASF98
 4100 0c08 01       		.byte	0x1
 4101 0c09 AE01     		.2byte	0x1ae
 4102 0c0b A2000000 		.4byte	0xa2
 4103 0c0f D9050000 		.4byte	.LLST33
 4104 0c13 11       		.uleb128 0x11
 4105 0c14 06000000 		.4byte	.LVL136
 4106 0c18 E6060000 		.4byte	0x6e6
 4107 0c1c 00       		.byte	0
 4108 0c1d 19       		.uleb128 0x19
 4109 0c1e 8D050000 		.4byte	.LASF100
 4110 0c22 01       		.byte	0x1
 4111 0c23 1002     		.2byte	0x210
 4112 0c25 EF000000 		.4byte	0xef
 4113 0c29 00000000 		.4byte	.LFB62
 4114 0c2d 0A000000 		.4byte	.LFE62-.LFB62
 4115 0c31 01       		.uleb128 0x1
 4116 0c32 9C       		.byte	0x9c
 4117 0c33 480C0000 		.4byte	0xc48
 4118 0c37 13       		.uleb128 0x13
 4119 0c38 08000000 		.4byte	.LVL138
 4120 0c3c FE030000 		.4byte	0x3fe
 4121 0c40 10       		.uleb128 0x10
 4122 0c41 01       		.uleb128 0x1
 4123 0c42 50       		.byte	0x50
 4124 0c43 02       		.uleb128 0x2
 4125 0c44 08       		.byte	0x8
 4126 0c45 23       		.byte	0x23
 4127 0c46 00       		.byte	0
 4128 0c47 00       		.byte	0
 4129 0c48 19       		.uleb128 0x19
 4130 0c49 36030000 		.4byte	.LASF101
 4131 0c4d 01       		.byte	0x1
 4132 0c4e 1A02     		.2byte	0x21a
 4133 0c50 A2000000 		.4byte	0xa2
 4134 0c54 00000000 		.4byte	.LFB63
 4135 0c58 0A000000 		.4byte	.LFE63-.LFB63
 4136 0c5c 01       		.uleb128 0x1
 4137 0c5d 9C       		.byte	0x9c
 4138 0c5e 720C0000 		.4byte	0xc72
 4139 0c62 13       		.uleb128 0x13
 4140 0c63 08000000 		.4byte	.LVL139
 4141 0c67 70070000 		.4byte	0x770
 4142 0c6b 10       		.uleb128 0x10
 4143 0c6c 01       		.uleb128 0x1
 4144 0c6d 50       		.byte	0x50
 4145 0c6e 01       		.uleb128 0x1
 4146 0c6f 31       		.byte	0x31
 4147 0c70 00       		.byte	0
 4148 0c71 00       		.byte	0
 4149 0c72 1D       		.uleb128 0x1d
 4150 0c73 78040000 		.4byte	.LASF102
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 96


 4151 0c77 01       		.byte	0x1
 4152 0c78 E5       		.byte	0xe5
 4153 0c79 EF000000 		.4byte	0xef
 4154 0c7d 00000000 		.4byte	.LFB34
 4155 0c81 1C000000 		.4byte	.LFE34-.LFB34
 4156 0c85 01       		.uleb128 0x1
 4157 0c86 9C       		.byte	0x9c
 4158 0c87 AD0C0000 		.4byte	0xcad
 4159 0c8b 1E       		.uleb128 0x1e
 4160 0c8c BE080000 		.4byte	.LASF103
 4161 0c90 01       		.byte	0x1
 4162 0c91 E7       		.byte	0xe7
 4163 0c92 A2000000 		.4byte	0xa2
 4164 0c96 EC050000 		.4byte	.LLST34
 4165 0c9a 11       		.uleb128 0x11
 4166 0c9b 06000000 		.4byte	.LVL141
 4167 0c9f 31160000 		.4byte	0x1631
 4168 0ca3 11       		.uleb128 0x11
 4169 0ca4 0A000000 		.4byte	.LVL142
 4170 0ca8 480C0000 		.4byte	0xc48
 4171 0cac 00       		.byte	0
 4172 0cad 1A       		.uleb128 0x1a
 4173 0cae 11090000 		.4byte	.LASF104
 4174 0cb2 01       		.byte	0x1
 4175 0cb3 2202     		.2byte	0x222
 4176 0cb5 00000000 		.4byte	.LFB64
 4177 0cb9 0C000000 		.4byte	.LFE64-.LFB64
 4178 0cbd 01       		.uleb128 0x1
 4179 0cbe 9C       		.byte	0x9c
 4180 0cbf D20C0000 		.4byte	0xcd2
 4181 0cc3 1B       		.uleb128 0x1b
 4182 0cc4 FE080000 		.4byte	.LASF77
 4183 0cc8 01       		.byte	0x1
 4184 0cc9 2202     		.2byte	0x222
 4185 0ccb EF000000 		.4byte	0xef
 4186 0ccf 01       		.uleb128 0x1
 4187 0cd0 50       		.byte	0x50
 4188 0cd1 00       		.byte	0
 4189 0cd2 1A       		.uleb128 0x1a
 4190 0cd3 C5060000 		.4byte	.LASF105
 4191 0cd7 01       		.byte	0x1
 4192 0cd8 3F02     		.2byte	0x23f
 4193 0cda 00000000 		.4byte	.LFB66
 4194 0cde 0C000000 		.4byte	.LFE66-.LFB66
 4195 0ce2 01       		.uleb128 0x1
 4196 0ce3 9C       		.byte	0x9c
 4197 0ce4 F70C0000 		.4byte	0xcf7
 4198 0ce8 1B       		.uleb128 0x1b
 4199 0ce9 FE080000 		.4byte	.LASF77
 4200 0ced 01       		.byte	0x1
 4201 0cee 3F02     		.2byte	0x23f
 4202 0cf0 EF000000 		.4byte	0xef
 4203 0cf4 01       		.uleb128 0x1
 4204 0cf5 50       		.byte	0x50
 4205 0cf6 00       		.byte	0
 4206 0cf7 19       		.uleb128 0x19
 4207 0cf8 B7010000 		.4byte	.LASF106
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 97


 4208 0cfc 01       		.byte	0x1
 4209 0cfd 6202     		.2byte	0x262
 4210 0cff A2000000 		.4byte	0xa2
 4211 0d03 00000000 		.4byte	.LFB68
 4212 0d07 0A000000 		.4byte	.LFE68-.LFB68
 4213 0d0b 01       		.uleb128 0x1
 4214 0d0c 9C       		.byte	0x9c
 4215 0d0d 210D0000 		.4byte	0xd21
 4216 0d11 13       		.uleb128 0x13
 4217 0d12 08000000 		.4byte	.LVL148
 4218 0d16 90060000 		.4byte	0x690
 4219 0d1a 10       		.uleb128 0x10
 4220 0d1b 01       		.uleb128 0x1
 4221 0d1c 50       		.byte	0x50
 4222 0d1d 01       		.uleb128 0x1
 4223 0d1e 36       		.byte	0x36
 4224 0d1f 00       		.byte	0
 4225 0d20 00       		.byte	0
 4226 0d21 19       		.uleb128 0x19
 4227 0d22 29030000 		.4byte	.LASF107
 4228 0d26 01       		.byte	0x1
 4229 0d27 F301     		.2byte	0x1f3
 4230 0d29 EF000000 		.4byte	0xef
 4231 0d2d 00000000 		.4byte	.LFB58
 4232 0d31 0C000000 		.4byte	.LFE58-.LFB58
 4233 0d35 01       		.uleb128 0x1
 4234 0d36 9C       		.byte	0x9c
 4235 0d37 550D0000 		.4byte	0xd55
 4236 0d3b 14       		.uleb128 0x14
 4237 0d3c 4B010000 		.4byte	.LASF108
 4238 0d40 01       		.byte	0x1
 4239 0d41 F501     		.2byte	0x1f5
 4240 0d43 A2000000 		.4byte	0xa2
 4241 0d47 16060000 		.4byte	.LLST35
 4242 0d4b 11       		.uleb128 0x11
 4243 0d4c 06000000 		.4byte	.LVL149
 4244 0d50 F70C0000 		.4byte	0xcf7
 4245 0d54 00       		.byte	0
 4246 0d55 19       		.uleb128 0x19
 4247 0d56 F2030000 		.4byte	.LASF109
 4248 0d5a 01       		.byte	0x1
 4249 0d5b FB01     		.2byte	0x1fb
 4250 0d5d EF000000 		.4byte	0xef
 4251 0d61 00000000 		.4byte	.LFB59
 4252 0d65 0C000000 		.4byte	.LFE59-.LFB59
 4253 0d69 01       		.uleb128 0x1
 4254 0d6a 9C       		.byte	0x9c
 4255 0d6b 890D0000 		.4byte	0xd89
 4256 0d6f 14       		.uleb128 0x14
 4257 0d70 4B010000 		.4byte	.LASF108
 4258 0d74 01       		.byte	0x1
 4259 0d75 FD01     		.2byte	0x1fd
 4260 0d77 A2000000 		.4byte	0xa2
 4261 0d7b 29060000 		.4byte	.LLST36
 4262 0d7f 11       		.uleb128 0x11
 4263 0d80 06000000 		.4byte	.LVL151
 4264 0d84 F70C0000 		.4byte	0xcf7
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 98


 4265 0d88 00       		.byte	0
 4266 0d89 1C       		.uleb128 0x1c
 4267 0d8a 21050000 		.4byte	.LASF110
 4268 0d8e 01       		.byte	0x1
 4269 0d8f 4202     		.2byte	0x242
 4270 0d91 EF000000 		.4byte	0xef
 4271 0d95 00000000 		.4byte	.LFB67
 4272 0d99 60000000 		.4byte	.LFE67-.LFB67
 4273 0d9d 01       		.uleb128 0x1
 4274 0d9e 9C       		.byte	0x9c
 4275 0d9f FC0D0000 		.4byte	0xdfc
 4276 0da3 17       		.uleb128 0x17
 4277 0da4 18000000 		.4byte	.Ldebug_ranges0+0x18
 4278 0da8 E20D0000 		.4byte	0xde2
 4279 0dac 14       		.uleb128 0x14
 4280 0dad 9D050000 		.4byte	.LASF68
 4281 0db1 01       		.byte	0x1
 4282 0db2 4F02     		.2byte	0x24f
 4283 0db4 97000000 		.4byte	0x97
 4284 0db8 3C060000 		.4byte	.LLST37
 4285 0dbc 0F       		.uleb128 0xf
 4286 0dbd 1A000000 		.4byte	.LVL155
 4287 0dc1 14160000 		.4byte	0x1614
 4288 0dc5 CF0D0000 		.4byte	0xdcf
 4289 0dc9 10       		.uleb128 0x10
 4290 0dca 01       		.uleb128 0x1
 4291 0dcb 50       		.byte	0x50
 4292 0dcc 01       		.uleb128 0x1
 4293 0dcd 31       		.byte	0x31
 4294 0dce 00       		.byte	0
 4295 0dcf 11       		.uleb128 0x11
 4296 0dd0 2E000000 		.4byte	.LVL159
 4297 0dd4 F70C0000 		.4byte	0xcf7
 4298 0dd8 11       		.uleb128 0x11
 4299 0dd9 44000000 		.4byte	.LVL160
 4300 0ddd 52080000 		.4byte	0x852
 4301 0de1 00       		.byte	0
 4302 0de2 11       		.uleb128 0x11
 4303 0de3 0E000000 		.4byte	.LVL153
 4304 0de7 82040000 		.4byte	0x482
 4305 0deb 13       		.uleb128 0x13
 4306 0dec 4E000000 		.4byte	.LVL162
 4307 0df0 FE030000 		.4byte	0x3fe
 4308 0df4 10       		.uleb128 0x10
 4309 0df5 01       		.uleb128 0x1
 4310 0df6 50       		.byte	0x50
 4311 0df7 02       		.uleb128 0x2
 4312 0df8 08       		.byte	0x8
 4313 0df9 43       		.byte	0x43
 4314 0dfa 00       		.byte	0
 4315 0dfb 00       		.byte	0
 4316 0dfc 19       		.uleb128 0x19
 4317 0dfd 71030000 		.4byte	.LASF111
 4318 0e01 01       		.byte	0x1
 4319 0e02 6802     		.2byte	0x268
 4320 0e04 A2000000 		.4byte	0xa2
 4321 0e08 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 99


 4322 0e0c 0A000000 		.4byte	.LFE69-.LFB69
 4323 0e10 01       		.uleb128 0x1
 4324 0e11 9C       		.byte	0x9c
 4325 0e12 260E0000 		.4byte	0xe26
 4326 0e16 13       		.uleb128 0x13
 4327 0e17 08000000 		.4byte	.LVL165
 4328 0e1b 70070000 		.4byte	0x770
 4329 0e1f 10       		.uleb128 0x10
 4330 0e20 01       		.uleb128 0x1
 4331 0e21 50       		.byte	0x50
 4332 0e22 01       		.uleb128 0x1
 4333 0e23 30       		.byte	0x30
 4334 0e24 00       		.byte	0
 4335 0e25 00       		.byte	0
 4336 0e26 0B       		.uleb128 0xb
 4337 0e27 0C040000 		.4byte	.LASF112
 4338 0e2b 01       		.byte	0x1
 4339 0e2c 7002     		.2byte	0x270
 4340 0e2e EF000000 		.4byte	0xef
 4341 0e32 00000000 		.4byte	.LFB70
 4342 0e36 0E000000 		.4byte	.LFE70-.LFB70
 4343 0e3a 01       		.uleb128 0x1
 4344 0e3b 9C       		.byte	0x9c
 4345 0e3c 5A0E0000 		.4byte	0xe5a
 4346 0e40 14       		.uleb128 0x14
 4347 0e41 ED020000 		.4byte	.LASF113
 4348 0e45 01       		.byte	0x1
 4349 0e46 7202     		.2byte	0x272
 4350 0e48 A2000000 		.4byte	0xa2
 4351 0e4c 70060000 		.4byte	.LLST38
 4352 0e50 11       		.uleb128 0x11
 4353 0e51 06000000 		.4byte	.LVL166
 4354 0e55 FC0D0000 		.4byte	0xdfc
 4355 0e59 00       		.byte	0
 4356 0e5a 1C       		.uleb128 0x1c
 4357 0e5b BE050000 		.4byte	.LASF114
 4358 0e5f 01       		.byte	0x1
 4359 0e60 2502     		.2byte	0x225
 4360 0e62 EF000000 		.4byte	0xef
 4361 0e66 00000000 		.4byte	.LFB65
 4362 0e6a 64000000 		.4byte	.LFE65-.LFB65
 4363 0e6e 01       		.uleb128 0x1
 4364 0e6f 9C       		.byte	0x9c
 4365 0e70 CC0E0000 		.4byte	0xecc
 4366 0e74 17       		.uleb128 0x17
 4367 0e75 38000000 		.4byte	.Ldebug_ranges0+0x38
 4368 0e79 AA0E0000 		.4byte	0xeaa
 4369 0e7d 14       		.uleb128 0x14
 4370 0e7e 9D050000 		.4byte	.LASF68
 4371 0e82 01       		.byte	0x1
 4372 0e83 3202     		.2byte	0x232
 4373 0e85 97000000 		.4byte	0x97
 4374 0e89 83060000 		.4byte	.LLST39
 4375 0e8d 0F       		.uleb128 0xf
 4376 0e8e 34000000 		.4byte	.LVL172
 4377 0e92 14160000 		.4byte	0x1614
 4378 0e96 A00E0000 		.4byte	0xea0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 100


 4379 0e9a 10       		.uleb128 0x10
 4380 0e9b 01       		.uleb128 0x1
 4381 0e9c 50       		.byte	0x50
 4382 0e9d 01       		.uleb128 0x1
 4383 0e9e 31       		.byte	0x31
 4384 0e9f 00       		.byte	0
 4385 0ea0 11       		.uleb128 0x11
 4386 0ea1 48000000 		.4byte	.LVL176
 4387 0ea5 FC0D0000 		.4byte	0xdfc
 4388 0ea9 00       		.byte	0
 4389 0eaa 11       		.uleb128 0x11
 4390 0eab 14000000 		.4byte	.LVL168
 4391 0eaf 260E0000 		.4byte	0xe26
 4392 0eb3 11       		.uleb128 0x11
 4393 0eb4 22000000 		.4byte	.LVL169
 4394 0eb8 11080000 		.4byte	0x811
 4395 0ebc 13       		.uleb128 0x13
 4396 0ebd 28000000 		.4byte	.LVL170
 4397 0ec1 FE030000 		.4byte	0x3fe
 4398 0ec5 10       		.uleb128 0x10
 4399 0ec6 01       		.uleb128 0x1
 4400 0ec7 50       		.byte	0x50
 4401 0ec8 01       		.uleb128 0x1
 4402 0ec9 43       		.byte	0x43
 4403 0eca 00       		.byte	0
 4404 0ecb 00       		.byte	0
 4405 0ecc 0B       		.uleb128 0xb
 4406 0ecd 1A070000 		.4byte	.LASF115
 4407 0ed1 01       		.byte	0x1
 4408 0ed2 2C03     		.2byte	0x32c
 4409 0ed4 EF000000 		.4byte	0xef
 4410 0ed8 00000000 		.4byte	.LFB88
 4411 0edc B8000000 		.4byte	.LFE88-.LFB88
 4412 0ee0 01       		.uleb128 0x1
 4413 0ee1 9C       		.byte	0x9c
 4414 0ee2 59100000 		.4byte	0x1059
 4415 0ee6 0C       		.uleb128 0xc
 4416 0ee7 23010000 		.4byte	.LASF116
 4417 0eeb 01       		.byte	0x1
 4418 0eec 2C03     		.2byte	0x32c
 4419 0eee 8C000000 		.4byte	0x8c
 4420 0ef2 AC060000 		.4byte	.LLST40
 4421 0ef6 0C       		.uleb128 0xc
 4422 0ef7 1D030000 		.4byte	.LASF53
 4423 0efb 01       		.byte	0x1
 4424 0efc 2C03     		.2byte	0x32c
 4425 0efe 8C000000 		.4byte	0x8c
 4426 0f02 CD060000 		.4byte	.LLST41
 4427 0f06 0C       		.uleb128 0xc
 4428 0f07 00040000 		.4byte	.LASF55
 4429 0f0b 01       		.byte	0x1
 4430 0f0c 2C03     		.2byte	0x32c
 4431 0f0e 82020000 		.4byte	0x282
 4432 0f12 EE060000 		.4byte	.LLST42
 4433 0f16 0D       		.uleb128 0xd
 4434 0f17 6C656E00 		.ascii	"len\000"
 4435 0f1b 01       		.byte	0x1
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 101


 4436 0f1c 2C03     		.2byte	0x32c
 4437 0f1e 8C000000 		.4byte	0x8c
 4438 0f22 1A070000 		.4byte	.LLST43
 4439 0f26 1F       		.uleb128 0x1f
 4440 0f27 DD080000 		.4byte	.LASF141
 4441 0f2b 01       		.byte	0x1
 4442 0f2c 3E03     		.2byte	0x33e
 4443 0f2e 8C000000 		.4byte	0x8c
 4444 0f32 0E       		.uleb128 0xe
 4445 0f33 6900     		.ascii	"i\000"
 4446 0f35 01       		.byte	0x1
 4447 0f36 4103     		.2byte	0x341
 4448 0f38 7E000000 		.4byte	0x7e
 4449 0f3c 3B070000 		.4byte	.LLST44
 4450 0f40 14       		.uleb128 0x14
 4451 0f41 62040000 		.4byte	.LASF117
 4452 0f45 01       		.byte	0x1
 4453 0f46 4A03     		.2byte	0x34a
 4454 0f48 8C000000 		.4byte	0x8c
 4455 0f4c 5A070000 		.4byte	.LLST45
 4456 0f50 0F       		.uleb128 0xf
 4457 0f51 10000000 		.4byte	.LVL180
 4458 0f55 38160000 		.4byte	0x1638
 4459 0f59 670F0000 		.4byte	0xf67
 4460 0f5d 10       		.uleb128 0x10
 4461 0f5e 01       		.uleb128 0x1
 4462 0f5f 50       		.byte	0x50
 4463 0f60 05       		.uleb128 0x5
 4464 0f61 03       		.byte	0x3
 4465 0f62 00000000 		.4byte	.LC17
 4466 0f66 00       		.byte	0
 4467 0f67 11       		.uleb128 0x11
 4468 0f68 26000000 		.4byte	.LVL181
 4469 0f6c 5A0E0000 		.4byte	0xe5a
 4470 0f70 0F       		.uleb128 0xf
 4471 0f71 2C000000 		.4byte	.LVL182
 4472 0f75 38160000 		.4byte	0x1638
 4473 0f79 870F0000 		.4byte	0xf87
 4474 0f7d 10       		.uleb128 0x10
 4475 0f7e 01       		.uleb128 0x1
 4476 0f7f 50       		.byte	0x50
 4477 0f80 05       		.uleb128 0x5
 4478 0f81 03       		.byte	0x3
 4479 0f82 08000000 		.4byte	.LC21
 4480 0f86 00       		.byte	0
 4481 0f87 11       		.uleb128 0x11
 4482 0f88 30000000 		.4byte	.LVL183
 4483 0f8c 88020000 		.4byte	0x288
 4484 0f90 0F       		.uleb128 0xf
 4485 0f91 3A000000 		.4byte	.LVL184
 4486 0f95 CD020000 		.4byte	0x2cd
 4487 0f99 A40F0000 		.4byte	0xfa4
 4488 0f9d 10       		.uleb128 0x10
 4489 0f9e 01       		.uleb128 0x1
 4490 0f9f 50       		.byte	0x50
 4491 0fa0 02       		.uleb128 0x2
 4492 0fa1 74       		.byte	0x74
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 102


 4493 0fa2 00       		.sleb128 0
 4494 0fa3 00       		.byte	0
 4495 0fa4 0F       		.uleb128 0xf
 4496 0fa5 44000000 		.4byte	.LVL185
 4497 0fa9 12030000 		.4byte	0x312
 4498 0fad BA0F0000 		.4byte	0xfba
 4499 0fb1 10       		.uleb128 0x10
 4500 0fb2 01       		.uleb128 0x1
 4501 0fb3 50       		.byte	0x50
 4502 0fb4 04       		.uleb128 0x4
 4503 0fb5 76       		.byte	0x76
 4504 0fb6 00       		.sleb128 0
 4505 0fb7 35       		.byte	0x35
 4506 0fb8 25       		.byte	0x25
 4507 0fb9 00       		.byte	0
 4508 0fba 11       		.uleb128 0x11
 4509 0fbb 48000000 		.4byte	.LVL186
 4510 0fbf 1C060000 		.4byte	0x61c
 4511 0fc3 11       		.uleb128 0x11
 4512 0fc4 4C000000 		.4byte	.LVL187
 4513 0fc8 D7050000 		.4byte	0x5d7
 4514 0fcc 0F       		.uleb128 0xf
 4515 0fcd 52000000 		.4byte	.LVL188
 4516 0fd1 38160000 		.4byte	0x1638
 4517 0fd5 E30F0000 		.4byte	0xfe3
 4518 0fd9 10       		.uleb128 0x10
 4519 0fda 01       		.uleb128 0x1
 4520 0fdb 50       		.byte	0x50
 4521 0fdc 05       		.uleb128 0x5
 4522 0fdd 03       		.byte	0x3
 4523 0fde 10000000 		.4byte	.LC23
 4524 0fe2 00       		.byte	0
 4525 0fe3 0F       		.uleb128 0xf
 4526 0fe4 64000000 		.4byte	.LVL190
 4527 0fe8 58030000 		.4byte	0x358
 4528 0fec FC0F0000 		.4byte	0xffc
 4529 0ff0 10       		.uleb128 0x10
 4530 0ff1 01       		.uleb128 0x1
 4531 0ff2 50       		.byte	0x50
 4532 0ff3 07       		.uleb128 0x7
 4533 0ff4 76       		.byte	0x76
 4534 0ff5 00       		.sleb128 0
 4535 0ff6 4F       		.byte	0x4f
 4536 0ff7 1A       		.byte	0x1a
 4537 0ff8 74       		.byte	0x74
 4538 0ff9 00       		.sleb128 0
 4539 0ffa 22       		.byte	0x22
 4540 0ffb 00       		.byte	0
 4541 0ffc 0F       		.uleb128 0xf
 4542 0ffd 70000000 		.4byte	.LVL192
 4543 1001 38160000 		.4byte	0x1638
 4544 1005 13100000 		.4byte	0x1013
 4545 1009 10       		.uleb128 0x10
 4546 100a 01       		.uleb128 0x1
 4547 100b 50       		.byte	0x50
 4548 100c 05       		.uleb128 0x5
 4549 100d 03       		.byte	0x3
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 103


 4550 100e 18000000 		.4byte	.LC25
 4551 1012 00       		.byte	0
 4552 1013 11       		.uleb128 0x11
 4553 1014 74000000 		.4byte	.LVL193
 4554 1018 1C060000 		.4byte	0x61c
 4555 101c 11       		.uleb128 0x11
 4556 101d 78000000 		.4byte	.LVL194
 4557 1021 B8030000 		.4byte	0x3b8
 4558 1025 0F       		.uleb128 0xf
 4559 1026 7E000000 		.4byte	.LVL195
 4560 102a 38160000 		.4byte	0x1638
 4561 102e 3C100000 		.4byte	0x103c
 4562 1032 10       		.uleb128 0x10
 4563 1033 01       		.uleb128 0x1
 4564 1034 50       		.byte	0x50
 4565 1035 05       		.uleb128 0x5
 4566 1036 03       		.byte	0x3
 4567 1037 20000000 		.4byte	.LC27
 4568 103b 00       		.byte	0
 4569 103c 11       		.uleb128 0x11
 4570 103d 8A000000 		.4byte	.LVL196
 4571 1041 890D0000 		.4byte	0xd89
 4572 1045 13       		.uleb128 0x13
 4573 1046 90000000 		.4byte	.LVL197
 4574 104a 38160000 		.4byte	0x1638
 4575 104e 10       		.uleb128 0x10
 4576 104f 01       		.uleb128 0x1
 4577 1050 50       		.byte	0x50
 4578 1051 05       		.uleb128 0x5
 4579 1052 03       		.byte	0x3
 4580 1053 28000000 		.4byte	.LC29
 4581 1057 00       		.byte	0
 4582 1058 00       		.byte	0
 4583 1059 1D       		.uleb128 0x1d
 4584 105a 20000000 		.4byte	.LASF118
 4585 105e 01       		.byte	0x1
 4586 105f F6       		.byte	0xf6
 4587 1060 EF000000 		.4byte	0xef
 4588 1064 00000000 		.4byte	.LFB35
 4589 1068 1A000000 		.4byte	.LFE35-.LFB35
 4590 106c 01       		.uleb128 0x1
 4591 106d 9C       		.byte	0x9c
 4592 106e CE100000 		.4byte	0x10ce
 4593 1072 20       		.uleb128 0x20
 4594 1073 A5050000 		.4byte	.LASF83
 4595 1077 01       		.byte	0x1
 4596 1078 F6       		.byte	0xf6
 4597 1079 A2000000 		.4byte	0xa2
 4598 107d 6D070000 		.4byte	.LLST46
 4599 1081 1E       		.uleb128 0x1e
 4600 1082 E6020000 		.4byte	.LASF119
 4601 1086 01       		.byte	0x1
 4602 1087 FB       		.byte	0xfb
 4603 1088 8C000000 		.4byte	0x8c
 4604 108c 8E070000 		.4byte	.LLST47
 4605 1090 1E       		.uleb128 0x1e
 4606 1091 0E080000 		.4byte	.LASF120
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 104


 4607 1095 01       		.byte	0x1
 4608 1096 FC       		.byte	0xfc
 4609 1097 8C000000 		.4byte	0x8c
 4610 109b AD070000 		.4byte	.LLST48
 4611 109f 21       		.uleb128 0x21
 4612 10a0 55040000 		.4byte	.LASF121
 4613 10a4 01       		.byte	0x1
 4614 10a5 FD       		.byte	0xfd
 4615 10a6 72040000 		.4byte	0x472
 4616 10aa 02       		.uleb128 0x2
 4617 10ab 91       		.byte	0x91
 4618 10ac 74       		.sleb128 -12
 4619 10ad 13       		.uleb128 0x13
 4620 10ae 16000000 		.4byte	.LVL204
 4621 10b2 CC0E0000 		.4byte	0xecc
 4622 10b6 10       		.uleb128 0x10
 4623 10b7 01       		.uleb128 0x1
 4624 10b8 53       		.byte	0x53
 4625 10b9 01       		.uleb128 0x1
 4626 10ba 32       		.byte	0x32
 4627 10bb 10       		.uleb128 0x10
 4628 10bc 01       		.uleb128 0x1
 4629 10bd 52       		.byte	0x52
 4630 10be 02       		.uleb128 0x2
 4631 10bf 91       		.byte	0x91
 4632 10c0 74       		.sleb128 -12
 4633 10c1 10       		.uleb128 0x10
 4634 10c2 01       		.uleb128 0x1
 4635 10c3 51       		.byte	0x51
 4636 10c4 01       		.uleb128 0x1
 4637 10c5 3A       		.byte	0x3a
 4638 10c6 10       		.uleb128 0x10
 4639 10c7 01       		.uleb128 0x1
 4640 10c8 50       		.byte	0x50
 4641 10c9 02       		.uleb128 0x2
 4642 10ca 08       		.byte	0x8
 4643 10cb 52       		.byte	0x52
 4644 10cc 00       		.byte	0
 4645 10cd 00       		.byte	0
 4646 10ce 0B       		.uleb128 0xb
 4647 10cf 7D030000 		.4byte	.LASF122
 4648 10d3 01       		.byte	0x1
 4649 10d4 8F02     		.2byte	0x28f
 4650 10d6 EF000000 		.4byte	0xef
 4651 10da 00000000 		.4byte	.LFB74
 4652 10de 1A000000 		.4byte	.LFE74-.LFB74
 4653 10e2 01       		.uleb128 0x1
 4654 10e3 9C       		.byte	0x9c
 4655 10e4 48110000 		.4byte	0x1148
 4656 10e8 0C       		.uleb128 0xc
 4657 10e9 E0020000 		.4byte	.LASF123
 4658 10ed 01       		.byte	0x1
 4659 10ee 8F02     		.2byte	0x28f
 4660 10f0 A2000000 		.4byte	0xa2
 4661 10f4 DA070000 		.4byte	.LLST49
 4662 10f8 14       		.uleb128 0x14
 4663 10f9 3C050000 		.4byte	.LASF124
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 105


 4664 10fd 01       		.byte	0x1
 4665 10fe 9102     		.2byte	0x291
 4666 1100 8C000000 		.4byte	0x8c
 4667 1104 FB070000 		.4byte	.LLST50
 4668 1108 14       		.uleb128 0x14
 4669 1109 5D020000 		.4byte	.LASF125
 4670 110d 01       		.byte	0x1
 4671 110e 9202     		.2byte	0x292
 4672 1110 8C000000 		.4byte	0x8c
 4673 1114 1A080000 		.4byte	.LLST51
 4674 1118 12       		.uleb128 0x12
 4675 1119 B0030000 		.4byte	.LASF126
 4676 111d 01       		.byte	0x1
 4677 111e 9302     		.2byte	0x293
 4678 1120 72040000 		.4byte	0x472
 4679 1124 02       		.uleb128 0x2
 4680 1125 91       		.byte	0x91
 4681 1126 74       		.sleb128 -12
 4682 1127 13       		.uleb128 0x13
 4683 1128 16000000 		.4byte	.LVL209
 4684 112c CC0E0000 		.4byte	0xecc
 4685 1130 10       		.uleb128 0x10
 4686 1131 01       		.uleb128 0x1
 4687 1132 53       		.byte	0x53
 4688 1133 01       		.uleb128 0x1
 4689 1134 32       		.byte	0x32
 4690 1135 10       		.uleb128 0x10
 4691 1136 01       		.uleb128 0x1
 4692 1137 52       		.byte	0x52
 4693 1138 02       		.uleb128 0x2
 4694 1139 91       		.byte	0x91
 4695 113a 74       		.sleb128 -12
 4696 113b 10       		.uleb128 0x10
 4697 113c 01       		.uleb128 0x1
 4698 113d 51       		.byte	0x51
 4699 113e 01       		.uleb128 0x1
 4700 113f 30       		.byte	0x30
 4701 1140 10       		.uleb128 0x10
 4702 1141 01       		.uleb128 0x1
 4703 1142 50       		.byte	0x50
 4704 1143 02       		.uleb128 0x2
 4705 1144 08       		.byte	0x8
 4706 1145 40       		.byte	0x40
 4707 1146 00       		.byte	0
 4708 1147 00       		.byte	0
 4709 1148 19       		.uleb128 0x19
 4710 1149 C7080000 		.4byte	.LASF127
 4711 114d 01       		.byte	0x1
 4712 114e 9901     		.2byte	0x199
 4713 1150 EF000000 		.4byte	0xef
 4714 1154 00000000 		.4byte	.LFB49
 4715 1158 3C000000 		.4byte	.LFE49-.LFB49
 4716 115c 01       		.uleb128 0x1
 4717 115d 9C       		.byte	0x9c
 4718 115e A5110000 		.4byte	0x11a5
 4719 1162 0C       		.uleb128 0xc
 4720 1163 7A050000 		.4byte	.LASF128
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 106


 4721 1167 01       		.byte	0x1
 4722 1168 9901     		.2byte	0x199
 4723 116a EF000000 		.4byte	0xef
 4724 116e 47080000 		.4byte	.LLST52
 4725 1172 14       		.uleb128 0x14
 4726 1173 65070000 		.4byte	.LASF129
 4727 1177 01       		.byte	0x1
 4728 1178 9B01     		.2byte	0x19b
 4729 117a A2000000 		.4byte	0xa2
 4730 117e 68080000 		.4byte	.LLST53
 4731 1182 14       		.uleb128 0x14
 4732 1183 77070000 		.4byte	.LASF130
 4733 1187 01       		.byte	0x1
 4734 1188 A201     		.2byte	0x1a2
 4735 118a A2000000 		.4byte	0xa2
 4736 118e 9C080000 		.4byte	.LLST54
 4737 1192 11       		.uleb128 0x11
 4738 1193 08000000 		.4byte	.LVL211
 4739 1197 E6060000 		.4byte	0x6e6
 4740 119b 11       		.uleb128 0x11
 4741 119c 2E000000 		.4byte	.LVL217
 4742 11a0 CE100000 		.4byte	0x10ce
 4743 11a4 00       		.byte	0
 4744 11a5 19       		.uleb128 0x19
 4745 11a6 3A080000 		.4byte	.LASF131
 4746 11aa 01       		.byte	0x1
 4747 11ab B401     		.2byte	0x1b4
 4748 11ad EF000000 		.4byte	0xef
 4749 11b1 00000000 		.4byte	.LFB51
 4750 11b5 3C000000 		.4byte	.LFE51-.LFB51
 4751 11b9 01       		.uleb128 0x1
 4752 11ba 9C       		.byte	0x9c
 4753 11bb 02120000 		.4byte	0x1202
 4754 11bf 0C       		.uleb128 0xc
 4755 11c0 C7070000 		.4byte	.LASF60
 4756 11c4 01       		.byte	0x1
 4757 11c5 B401     		.2byte	0x1b4
 4758 11c7 DF010000 		.4byte	0x1df
 4759 11cb BA080000 		.4byte	.LLST55
 4760 11cf 14       		.uleb128 0x14
 4761 11d0 65070000 		.4byte	.LASF129
 4762 11d4 01       		.byte	0x1
 4763 11d5 B601     		.2byte	0x1b6
 4764 11d7 A2000000 		.4byte	0xa2
 4765 11db DB080000 		.4byte	.LLST56
 4766 11df 14       		.uleb128 0x14
 4767 11e0 77070000 		.4byte	.LASF130
 4768 11e4 01       		.byte	0x1
 4769 11e5 BE01     		.2byte	0x1be
 4770 11e7 A2000000 		.4byte	0xa2
 4771 11eb 0F090000 		.4byte	.LLST57
 4772 11ef 11       		.uleb128 0x11
 4773 11f0 08000000 		.4byte	.LVL223
 4774 11f4 E6060000 		.4byte	0x6e6
 4775 11f8 11       		.uleb128 0x11
 4776 11f9 2C000000 		.4byte	.LVL229
 4777 11fd CE100000 		.4byte	0x10ce
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 107


 4778 1201 00       		.byte	0
 4779 1202 19       		.uleb128 0x19
 4780 1203 63050000 		.4byte	.LASF132
 4781 1207 01       		.byte	0x1
 4782 1208 D501     		.2byte	0x1d5
 4783 120a EF000000 		.4byte	0xef
 4784 120e 00000000 		.4byte	.LFB54
 4785 1212 2A000000 		.4byte	.LFE54-.LFB54
 4786 1216 01       		.uleb128 0x1
 4787 1217 9C       		.byte	0x9c
 4788 1218 6C120000 		.4byte	0x126c
 4789 121c 0D       		.uleb128 0xd
 4790 121d 73657400 		.ascii	"set\000"
 4791 1221 01       		.byte	0x1
 4792 1222 D501     		.2byte	0x1d5
 4793 1224 8C000000 		.4byte	0x8c
 4794 1228 2D090000 		.4byte	.LLST58
 4795 122c 0C       		.uleb128 0xc
 4796 122d B8050000 		.4byte	.LASF133
 4797 1231 01       		.byte	0x1
 4798 1232 D501     		.2byte	0x1d5
 4799 1234 8C000000 		.4byte	0x8c
 4800 1238 4E090000 		.4byte	.LLST59
 4801 123c 12       		.uleb128 0x12
 4802 123d 3B020000 		.4byte	.LASF134
 4803 1241 01       		.byte	0x1
 4804 1242 D701     		.2byte	0x1d7
 4805 1244 72040000 		.4byte	0x472
 4806 1248 02       		.uleb128 0x2
 4807 1249 91       		.byte	0x91
 4808 124a 74       		.sleb128 -12
 4809 124b 13       		.uleb128 0x13
 4810 124c 26000000 		.4byte	.LVL237
 4811 1250 CC0E0000 		.4byte	0xecc
 4812 1254 10       		.uleb128 0x10
 4813 1255 01       		.uleb128 0x1
 4814 1256 53       		.byte	0x53
 4815 1257 01       		.uleb128 0x1
 4816 1258 32       		.byte	0x32
 4817 1259 10       		.uleb128 0x10
 4818 125a 01       		.uleb128 0x1
 4819 125b 52       		.byte	0x52
 4820 125c 02       		.uleb128 0x2
 4821 125d 91       		.byte	0x91
 4822 125e 74       		.sleb128 -12
 4823 125f 10       		.uleb128 0x10
 4824 1260 01       		.uleb128 0x1
 4825 1261 51       		.byte	0x51
 4826 1262 01       		.uleb128 0x1
 4827 1263 30       		.byte	0x30
 4828 1264 10       		.uleb128 0x10
 4829 1265 01       		.uleb128 0x1
 4830 1266 50       		.byte	0x50
 4831 1267 02       		.uleb128 0x2
 4832 1268 08       		.byte	0x8
 4833 1269 31       		.byte	0x31
 4834 126a 00       		.byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 108


 4835 126b 00       		.byte	0
 4836 126c 19       		.uleb128 0x19
 4837 126d 9F080000 		.4byte	.LASF135
 4838 1271 01       		.byte	0x1
 4839 1272 EA01     		.2byte	0x1ea
 4840 1274 EF000000 		.4byte	0xef
 4841 1278 00000000 		.4byte	.LFB57
 4842 127c 2A000000 		.4byte	.LFE57-.LFB57
 4843 1280 01       		.uleb128 0x1
 4844 1281 9C       		.byte	0x9c
 4845 1282 D6120000 		.4byte	0x12d6
 4846 1286 0D       		.uleb128 0xd
 4847 1287 73657400 		.ascii	"set\000"
 4848 128b 01       		.byte	0x1
 4849 128c EA01     		.2byte	0x1ea
 4850 128e 8C000000 		.4byte	0x8c
 4851 1292 6F090000 		.4byte	.LLST60
 4852 1296 0C       		.uleb128 0xc
 4853 1297 B8050000 		.4byte	.LASF133
 4854 129b 01       		.byte	0x1
 4855 129c EA01     		.2byte	0x1ea
 4856 129e 8C000000 		.4byte	0x8c
 4857 12a2 90090000 		.4byte	.LLST61
 4858 12a6 12       		.uleb128 0x12
 4859 12a7 3B020000 		.4byte	.LASF134
 4860 12ab 01       		.byte	0x1
 4861 12ac EC01     		.2byte	0x1ec
 4862 12ae 72040000 		.4byte	0x472
 4863 12b2 02       		.uleb128 0x2
 4864 12b3 91       		.byte	0x91
 4865 12b4 74       		.sleb128 -12
 4866 12b5 13       		.uleb128 0x13
 4867 12b6 26000000 		.4byte	.LVL241
 4868 12ba CC0E0000 		.4byte	0xecc
 4869 12be 10       		.uleb128 0x10
 4870 12bf 01       		.uleb128 0x1
 4871 12c0 53       		.byte	0x53
 4872 12c1 01       		.uleb128 0x1
 4873 12c2 32       		.byte	0x32
 4874 12c3 10       		.uleb128 0x10
 4875 12c4 01       		.uleb128 0x1
 4876 12c5 52       		.byte	0x52
 4877 12c6 02       		.uleb128 0x2
 4878 12c7 91       		.byte	0x91
 4879 12c8 74       		.sleb128 -12
 4880 12c9 10       		.uleb128 0x10
 4881 12ca 01       		.uleb128 0x1
 4882 12cb 51       		.byte	0x51
 4883 12cc 01       		.uleb128 0x1
 4884 12cd 32       		.byte	0x32
 4885 12ce 10       		.uleb128 0x10
 4886 12cf 01       		.uleb128 0x1
 4887 12d0 50       		.byte	0x50
 4888 12d1 02       		.uleb128 0x2
 4889 12d2 08       		.byte	0x8
 4890 12d3 31       		.byte	0x31
 4891 12d4 00       		.byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 109


 4892 12d5 00       		.byte	0
 4893 12d6 19       		.uleb128 0x19
 4894 12d7 69020000 		.4byte	.LASF136
 4895 12db 01       		.byte	0x1
 4896 12dc 0902     		.2byte	0x209
 4897 12de EF000000 		.4byte	0xef
 4898 12e2 00000000 		.4byte	.LFB61
 4899 12e6 20000000 		.4byte	.LFE61-.LFB61
 4900 12ea 01       		.uleb128 0x1
 4901 12eb 9C       		.byte	0x9c
 4902 12ec 30130000 		.4byte	0x1330
 4903 12f0 0C       		.uleb128 0xc
 4904 12f1 21080000 		.4byte	.LASF137
 4905 12f5 01       		.byte	0x1
 4906 12f6 0902     		.2byte	0x209
 4907 12f8 8C000000 		.4byte	0x8c
 4908 12fc B1090000 		.4byte	.LLST62
 4909 1300 12       		.uleb128 0x12
 4910 1301 ED030000 		.4byte	.LASF138
 4911 1305 01       		.byte	0x1
 4912 1306 0B02     		.2byte	0x20b
 4913 1308 8C000000 		.4byte	0x8c
 4914 130c 02       		.uleb128 0x2
 4915 130d 91       		.byte	0x91
 4916 130e 77       		.sleb128 -9
 4917 130f 13       		.uleb128 0x13
 4918 1310 1C000000 		.4byte	.LVL244
 4919 1314 CC0E0000 		.4byte	0xecc
 4920 1318 10       		.uleb128 0x10
 4921 1319 01       		.uleb128 0x1
 4922 131a 53       		.byte	0x53
 4923 131b 01       		.uleb128 0x1
 4924 131c 31       		.byte	0x31
 4925 131d 10       		.uleb128 0x10
 4926 131e 01       		.uleb128 0x1
 4927 131f 52       		.byte	0x52
 4928 1320 02       		.uleb128 0x2
 4929 1321 7D       		.byte	0x7d
 4930 1322 07       		.sleb128 7
 4931 1323 10       		.uleb128 0x10
 4932 1324 01       		.uleb128 0x1
 4933 1325 51       		.byte	0x51
 4934 1326 01       		.uleb128 0x1
 4935 1327 4A       		.byte	0x4a
 4936 1328 10       		.uleb128 0x10
 4937 1329 01       		.uleb128 0x1
 4938 132a 50       		.byte	0x50
 4939 132b 02       		.uleb128 0x2
 4940 132c 08       		.byte	0x8
 4941 132d 52       		.byte	0x52
 4942 132e 00       		.byte	0
 4943 132f 00       		.byte	0
 4944 1330 0B       		.uleb128 0xb
 4945 1331 0F020000 		.4byte	.LASF139
 4946 1335 01       		.byte	0x1
 4947 1336 0F03     		.2byte	0x30f
 4948 1338 8C000000 		.4byte	0x8c
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 110


 4949 133c 00000000 		.4byte	.LFB87
 4950 1340 64000000 		.4byte	.LFE87-.LFB87
 4951 1344 01       		.uleb128 0x1
 4952 1345 9C       		.byte	0x9c
 4953 1346 F4130000 		.4byte	0x13f4
 4954 134a 0C       		.uleb128 0xc
 4955 134b 23010000 		.4byte	.LASF116
 4956 134f 01       		.byte	0x1
 4957 1350 0F03     		.2byte	0x30f
 4958 1352 8C000000 		.4byte	0x8c
 4959 1356 D2090000 		.4byte	.LLST63
 4960 135a 0C       		.uleb128 0xc
 4961 135b 1D030000 		.4byte	.LASF53
 4962 135f 01       		.byte	0x1
 4963 1360 0F03     		.2byte	0x30f
 4964 1362 8C000000 		.4byte	0x8c
 4965 1366 F3090000 		.4byte	.LLST64
 4966 136a 14       		.uleb128 0x14
 4967 136b A5010000 		.4byte	.LASF140
 4968 136f 01       		.byte	0x1
 4969 1370 1103     		.2byte	0x311
 4970 1372 8C000000 		.4byte	0x8c
 4971 1376 140A0000 		.4byte	.LLST65
 4972 137a 1F       		.uleb128 0x1f
 4973 137b DD080000 		.4byte	.LASF141
 4974 137f 01       		.byte	0x1
 4975 1380 1F03     		.2byte	0x31f
 4976 1382 8C000000 		.4byte	0x8c
 4977 1386 11       		.uleb128 0x11
 4978 1387 18000000 		.4byte	.LVL247
 4979 138b 5A0E0000 		.4byte	0xe5a
 4980 138f 11       		.uleb128 0x11
 4981 1390 1C000000 		.4byte	.LVL248
 4982 1394 88020000 		.4byte	0x288
 4983 1398 0F       		.uleb128 0xf
 4984 1399 26000000 		.4byte	.LVL249
 4985 139d CD020000 		.4byte	0x2cd
 4986 13a1 AC130000 		.4byte	0x13ac
 4987 13a5 10       		.uleb128 0x10
 4988 13a6 01       		.uleb128 0x1
 4989 13a7 50       		.byte	0x50
 4990 13a8 02       		.uleb128 0x2
 4991 13a9 75       		.byte	0x75
 4992 13aa 00       		.sleb128 0
 4993 13ab 00       		.byte	0
 4994 13ac 0F       		.uleb128 0xf
 4995 13ad 30000000 		.4byte	.LVL250
 4996 13b1 12030000 		.4byte	0x312
 4997 13b5 C2130000 		.4byte	0x13c2
 4998 13b9 10       		.uleb128 0x10
 4999 13ba 01       		.uleb128 0x1
 5000 13bb 50       		.byte	0x50
 5001 13bc 04       		.uleb128 0x4
 5002 13bd 74       		.byte	0x74
 5003 13be 00       		.sleb128 0
 5004 13bf 35       		.byte	0x35
 5005 13c0 25       		.byte	0x25
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 111


 5006 13c1 00       		.byte	0
 5007 13c2 11       		.uleb128 0x11
 5008 13c3 34000000 		.4byte	.LVL251
 5009 13c7 1C060000 		.4byte	0x61c
 5010 13cb 11       		.uleb128 0x11
 5011 13cc 38000000 		.4byte	.LVL252
 5012 13d0 D7050000 		.4byte	0x5d7
 5013 13d4 0F       		.uleb128 0xf
 5014 13d5 40000000 		.4byte	.LVL253
 5015 13d9 11070000 		.4byte	0x711
 5016 13dd EA130000 		.4byte	0x13ea
 5017 13e1 10       		.uleb128 0x10
 5018 13e2 01       		.uleb128 0x1
 5019 13e3 50       		.byte	0x50
 5020 13e4 04       		.uleb128 0x4
 5021 13e5 74       		.byte	0x74
 5022 13e6 00       		.sleb128 0
 5023 13e7 4F       		.byte	0x4f
 5024 13e8 1A       		.byte	0x1a
 5025 13e9 00       		.byte	0
 5026 13ea 11       		.uleb128 0x11
 5027 13eb 4E000000 		.4byte	.LVL255
 5028 13ef 890D0000 		.4byte	0xd89
 5029 13f3 00       		.byte	0
 5030 13f4 19       		.uleb128 0x19
 5031 13f5 3F040000 		.4byte	.LASF142
 5032 13f9 01       		.byte	0x1
 5033 13fa C901     		.2byte	0x1c9
 5034 13fc 8C000000 		.4byte	0x8c
 5035 1400 00000000 		.4byte	.LFB52
 5036 1404 0C000000 		.4byte	.LFE52-.LFB52
 5037 1408 01       		.uleb128 0x1
 5038 1409 9C       		.byte	0x9c
 5039 140a 24140000 		.4byte	0x1424
 5040 140e 13       		.uleb128 0x13
 5041 140f 0A000000 		.4byte	.LVL258
 5042 1413 30130000 		.4byte	0x1330
 5043 1417 10       		.uleb128 0x10
 5044 1418 01       		.uleb128 0x1
 5045 1419 51       		.byte	0x51
 5046 141a 01       		.uleb128 0x1
 5047 141b 30       		.byte	0x30
 5048 141c 10       		.uleb128 0x10
 5049 141d 01       		.uleb128 0x1
 5050 141e 50       		.byte	0x50
 5051 141f 02       		.uleb128 0x2
 5052 1420 08       		.byte	0x8
 5053 1421 31       		.byte	0x31
 5054 1422 00       		.byte	0
 5055 1423 00       		.byte	0
 5056 1424 19       		.uleb128 0x19
 5057 1425 91040000 		.4byte	.LASF143
 5058 1429 01       		.byte	0x1
 5059 142a CF01     		.2byte	0x1cf
 5060 142c 8C000000 		.4byte	0x8c
 5061 1430 00000000 		.4byte	.LFB53
 5062 1434 0C000000 		.4byte	.LFE53-.LFB53
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 112


 5063 1438 01       		.uleb128 0x1
 5064 1439 9C       		.byte	0x9c
 5065 143a 54140000 		.4byte	0x1454
 5066 143e 13       		.uleb128 0x13
 5067 143f 0A000000 		.4byte	.LVL259
 5068 1443 30130000 		.4byte	0x1330
 5069 1447 10       		.uleb128 0x10
 5070 1448 01       		.uleb128 0x1
 5071 1449 51       		.byte	0x51
 5072 144a 01       		.uleb128 0x1
 5073 144b 31       		.byte	0x31
 5074 144c 10       		.uleb128 0x10
 5075 144d 01       		.uleb128 0x1
 5076 144e 50       		.byte	0x50
 5077 144f 02       		.uleb128 0x2
 5078 1450 08       		.byte	0x8
 5079 1451 31       		.byte	0x31
 5080 1452 00       		.byte	0
 5081 1453 00       		.byte	0
 5082 1454 19       		.uleb128 0x19
 5083 1455 4F070000 		.4byte	.LASF144
 5084 1459 01       		.byte	0x1
 5085 145a DE01     		.2byte	0x1de
 5086 145c 8C000000 		.4byte	0x8c
 5087 1460 00000000 		.4byte	.LFB55
 5088 1464 0C000000 		.4byte	.LFE55-.LFB55
 5089 1468 01       		.uleb128 0x1
 5090 1469 9C       		.byte	0x9c
 5091 146a 84140000 		.4byte	0x1484
 5092 146e 13       		.uleb128 0x13
 5093 146f 0A000000 		.4byte	.LVL260
 5094 1473 30130000 		.4byte	0x1330
 5095 1477 10       		.uleb128 0x10
 5096 1478 01       		.uleb128 0x1
 5097 1479 51       		.byte	0x51
 5098 147a 01       		.uleb128 0x1
 5099 147b 32       		.byte	0x32
 5100 147c 10       		.uleb128 0x10
 5101 147d 01       		.uleb128 0x1
 5102 147e 50       		.byte	0x50
 5103 147f 02       		.uleb128 0x2
 5104 1480 08       		.byte	0x8
 5105 1481 31       		.byte	0x31
 5106 1482 00       		.byte	0
 5107 1483 00       		.byte	0
 5108 1484 19       		.uleb128 0x19
 5109 1485 F2020000 		.4byte	.LASF145
 5110 1489 01       		.byte	0x1
 5111 148a E401     		.2byte	0x1e4
 5112 148c 8C000000 		.4byte	0x8c
 5113 1490 00000000 		.4byte	.LFB56
 5114 1494 0C000000 		.4byte	.LFE56-.LFB56
 5115 1498 01       		.uleb128 0x1
 5116 1499 9C       		.byte	0x9c
 5117 149a B4140000 		.4byte	0x14b4
 5118 149e 13       		.uleb128 0x13
 5119 149f 0A000000 		.4byte	.LVL261
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 113


 5120 14a3 30130000 		.4byte	0x1330
 5121 14a7 10       		.uleb128 0x10
 5122 14a8 01       		.uleb128 0x1
 5123 14a9 51       		.byte	0x51
 5124 14aa 01       		.uleb128 0x1
 5125 14ab 33       		.byte	0x33
 5126 14ac 10       		.uleb128 0x10
 5127 14ad 01       		.uleb128 0x1
 5128 14ae 50       		.byte	0x50
 5129 14af 02       		.uleb128 0x2
 5130 14b0 08       		.byte	0x8
 5131 14b1 31       		.byte	0x31
 5132 14b2 00       		.byte	0
 5133 14b3 00       		.byte	0
 5134 14b4 19       		.uleb128 0x19
 5135 14b5 55010000 		.4byte	.LASF146
 5136 14b9 01       		.byte	0x1
 5137 14ba 0302     		.2byte	0x203
 5138 14bc 8C000000 		.4byte	0x8c
 5139 14c0 00000000 		.4byte	.LFB60
 5140 14c4 0C000000 		.4byte	.LFE60-.LFB60
 5141 14c8 01       		.uleb128 0x1
 5142 14c9 9C       		.byte	0x9c
 5143 14ca E4140000 		.4byte	0x14e4
 5144 14ce 13       		.uleb128 0x13
 5145 14cf 0A000000 		.4byte	.LVL262
 5146 14d3 30130000 		.4byte	0x1330
 5147 14d7 10       		.uleb128 0x10
 5148 14d8 01       		.uleb128 0x1
 5149 14d9 51       		.byte	0x51
 5150 14da 01       		.uleb128 0x1
 5151 14db 4A       		.byte	0x4a
 5152 14dc 10       		.uleb128 0x10
 5153 14dd 01       		.uleb128 0x1
 5154 14de 50       		.byte	0x50
 5155 14df 02       		.uleb128 0x2
 5156 14e0 08       		.byte	0x8
 5157 14e1 52       		.byte	0x52
 5158 14e2 00       		.byte	0
 5159 14e3 00       		.byte	0
 5160 14e4 22       		.uleb128 0x22
 5161 14e5 DE030000 		.4byte	.LASF147
 5162 14e9 01       		.byte	0x1
 5163 14ea E0       		.byte	0xe0
 5164 14eb F0140000 		.4byte	0x14f0
 5165 14ef 55       		.byte	0x55
 5166 14f0 23       		.uleb128 0x23
 5167 14f1 8C000000 		.4byte	0x8c
 5168 14f5 21       		.uleb128 0x21
 5169 14f6 64010000 		.4byte	.LASF148
 5170 14fa 01       		.byte	0x1
 5171 14fb E1       		.byte	0xe1
 5172 14fc EF000000 		.4byte	0xef
 5173 1500 05       		.uleb128 0x5
 5174 1501 03       		.byte	0x3
 5175 1502 06000000 		.4byte	_sealFlag
 5176 1506 21       		.uleb128 0x21
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 114


 5177 1507 6E010000 		.4byte	.LASF149
 5178 150b 01       		.byte	0x1
 5179 150c E2       		.byte	0xe2
 5180 150d EF000000 		.4byte	0xef
 5181 1511 05       		.uleb128 0x5
 5182 1512 03       		.byte	0x3
 5183 1513 08000000 		.4byte	_userConfigControl
 5184 1517 24       		.uleb128 0x24
 5185 1518 C2020000 		.4byte	.LASF150
 5186 151c 01       		.byte	0x1
 5187 151d 0C01     		.2byte	0x10c
 5188 151f 15010000 		.4byte	0x115
 5189 1523 05       		.uleb128 0x5
 5190 1524 03       		.byte	0x3
 5191 1525 00000000 		.4byte	current_measure_type
 5192 1529 24       		.uleb128 0x24
 5193 152a 9A030000 		.4byte	.LASF151
 5194 152e 01       		.byte	0x1
 5195 152f 2501     		.2byte	0x125
 5196 1531 5F010000 		.4byte	0x15f
 5197 1535 05       		.uleb128 0x5
 5198 1536 03       		.byte	0x3
 5199 1537 00000000 		.4byte	capacity_measure_type
 5200 153b 24       		.uleb128 0x24
 5201 153c 60030000 		.4byte	.LASF152
 5202 1540 01       		.byte	0x1
 5203 1541 5401     		.2byte	0x154
 5204 1543 7F010000 		.4byte	0x17f
 5205 1547 05       		.uleb128 0x5
 5206 1548 03       		.byte	0x3
 5207 1549 00000000 		.4byte	soc_measure_type
 5208 154d 24       		.uleb128 0x24
 5209 154e A4020000 		.4byte	.LASF153
 5210 1552 01       		.byte	0x1
 5211 1553 6901     		.2byte	0x169
 5212 1555 9F010000 		.4byte	0x19f
 5213 1559 05       		.uleb128 0x5
 5214 155a 03       		.byte	0x3
 5215 155b 00000000 		.4byte	soh_measure_type
 5216 155f 24       		.uleb128 0x24
 5217 1560 48050000 		.4byte	.LASF154
 5218 1564 01       		.byte	0x1
 5219 1565 7A01     		.2byte	0x17a
 5220 1567 BF010000 		.4byte	0x1bf
 5221 156b 05       		.uleb128 0x5
 5222 156c 03       		.byte	0x3
 5223 156d 00000000 		.4byte	temp_measure_type
 5224 1571 24       		.uleb128 0x24
 5225 1572 F2080000 		.4byte	.LASF155
 5226 1576 01       		.byte	0x1
 5227 1577 2102     		.2byte	0x221
 5228 1579 EF000000 		.4byte	0xef
 5229 157d 05       		.uleb128 0x5
 5230 157e 03       		.byte	0x3
 5231 157f 00000000 		.4byte	userControl
 5232 1583 24       		.uleb128 0x24
 5233 1584 71070000 		.4byte	.LASF156
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 115


 5234 1588 01       		.byte	0x1
 5235 1589 3E02     		.2byte	0x23e
 5236 158b EF000000 		.4byte	0xef
 5237 158f 05       		.uleb128 0x5
 5238 1590 03       		.byte	0x3
 5239 1591 00000000 		.4byte	resim
 5240 1595 25       		.uleb128 0x25
 5241 1596 03070000 		.4byte	.LASF157
 5242 159a 06       		.byte	0x6
 5243 159b 1B01     		.2byte	0x11b
 5244 159d B9000000 		.4byte	0xb9
 5245 15a1 B0150000 		.4byte	0x15b0
 5246 15a5 26       		.uleb128 0x26
 5247 15a6 B9000000 		.4byte	0xb9
 5248 15aa 26       		.uleb128 0x26
 5249 15ab B9000000 		.4byte	0xb9
 5250 15af 00       		.byte	0
 5251 15b0 25       		.uleb128 0x25
 5252 15b1 E4000000 		.4byte	.LASF158
 5253 15b5 06       		.byte	0x6
 5254 15b6 1E01     		.2byte	0x11e
 5255 15b8 B9000000 		.4byte	0xb9
 5256 15bc C6150000 		.4byte	0x15c6
 5257 15c0 26       		.uleb128 0x26
 5258 15c1 B9000000 		.4byte	0xb9
 5259 15c5 00       		.byte	0
 5260 15c6 27       		.uleb128 0x27
 5261 15c7 1B040000 		.4byte	.LASF162
 5262 15cb 06       		.byte	0x6
 5263 15cc 1D01     		.2byte	0x11d
 5264 15ce B9000000 		.4byte	0xb9
 5265 15d2 28       		.uleb128 0x28
 5266 15d3 D0040000 		.4byte	.LASF160
 5267 15d7 E1000000 		.4byte	0xe1
 5268 15db EF150000 		.4byte	0x15ef
 5269 15df 26       		.uleb128 0x26
 5270 15e0 E1000000 		.4byte	0xe1
 5271 15e4 26       		.uleb128 0x26
 5272 15e5 7E000000 		.4byte	0x7e
 5273 15e9 26       		.uleb128 0x26
 5274 15ea DA000000 		.4byte	0xda
 5275 15ee 00       		.byte	0
 5276 15ef 25       		.uleb128 0x25
 5277 15f0 9D070000 		.4byte	.LASF159
 5278 15f4 06       		.byte	0x6
 5279 15f5 1401     		.2byte	0x114
 5280 15f7 B9000000 		.4byte	0xb9
 5281 15fb 14160000 		.4byte	0x1614
 5282 15ff 26       		.uleb128 0x26
 5283 1600 B9000000 		.4byte	0xb9
 5284 1604 26       		.uleb128 0x26
 5285 1605 E9000000 		.4byte	0xe9
 5286 1609 26       		.uleb128 0x26
 5287 160a B9000000 		.4byte	0xb9
 5288 160e 26       		.uleb128 0x26
 5289 160f B9000000 		.4byte	0xb9
 5290 1613 00       		.byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 116


 5291 1614 29       		.uleb128 0x29
 5292 1615 10000000 		.4byte	.LASF161
 5293 1619 07       		.byte	0x7
 5294 161a D9       		.byte	0xd9
 5295 161b 25160000 		.4byte	0x1625
 5296 161f 26       		.uleb128 0x26
 5297 1620 B9000000 		.4byte	0xb9
 5298 1624 00       		.byte	0
 5299 1625 27       		.uleb128 0x27
 5300 1626 3A090000 		.4byte	.LASF163
 5301 162a 06       		.byte	0x6
 5302 162b 1501     		.2byte	0x115
 5303 162d B9000000 		.4byte	0xb9
 5304 1631 2A       		.uleb128 0x2a
 5305 1632 AD010000 		.4byte	.LASF167
 5306 1636 08       		.byte	0x8
 5307 1637 6E       		.byte	0x6e
 5308 1638 2B       		.uleb128 0x2b
 5309 1639 FE040000 		.4byte	.LASF168
 5310 163d 09       		.byte	0x9
 5311 163e 06       		.byte	0x6
 5312 163f 26       		.uleb128 0x26
 5313 1640 E3000000 		.4byte	0xe3
 5314 1644 00       		.byte	0
 5315 1645 00       		.byte	0
 5316              		.section	.debug_abbrev,"",%progbits
 5317              	.Ldebug_abbrev0:
 5318 0000 01       		.uleb128 0x1
 5319 0001 11       		.uleb128 0x11
 5320 0002 01       		.byte	0x1
 5321 0003 25       		.uleb128 0x25
 5322 0004 0E       		.uleb128 0xe
 5323 0005 13       		.uleb128 0x13
 5324 0006 0B       		.uleb128 0xb
 5325 0007 03       		.uleb128 0x3
 5326 0008 0E       		.uleb128 0xe
 5327 0009 1B       		.uleb128 0x1b
 5328 000a 0E       		.uleb128 0xe
 5329 000b 55       		.uleb128 0x55
 5330 000c 17       		.uleb128 0x17
 5331 000d 11       		.uleb128 0x11
 5332 000e 01       		.uleb128 0x1
 5333 000f 10       		.uleb128 0x10
 5334 0010 17       		.uleb128 0x17
 5335 0011 00       		.byte	0
 5336 0012 00       		.byte	0
 5337 0013 02       		.uleb128 0x2
 5338 0014 24       		.uleb128 0x24
 5339 0015 00       		.byte	0
 5340 0016 0B       		.uleb128 0xb
 5341 0017 0B       		.uleb128 0xb
 5342 0018 3E       		.uleb128 0x3e
 5343 0019 0B       		.uleb128 0xb
 5344 001a 03       		.uleb128 0x3
 5345 001b 0E       		.uleb128 0xe
 5346 001c 00       		.byte	0
 5347 001d 00       		.byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 117


 5348 001e 03       		.uleb128 0x3
 5349 001f 16       		.uleb128 0x16
 5350 0020 00       		.byte	0
 5351 0021 03       		.uleb128 0x3
 5352 0022 0E       		.uleb128 0xe
 5353 0023 3A       		.uleb128 0x3a
 5354 0024 0B       		.uleb128 0xb
 5355 0025 3B       		.uleb128 0x3b
 5356 0026 0B       		.uleb128 0xb
 5357 0027 49       		.uleb128 0x49
 5358 0028 13       		.uleb128 0x13
 5359 0029 00       		.byte	0
 5360 002a 00       		.byte	0
 5361 002b 04       		.uleb128 0x4
 5362 002c 24       		.uleb128 0x24
 5363 002d 00       		.byte	0
 5364 002e 0B       		.uleb128 0xb
 5365 002f 0B       		.uleb128 0xb
 5366 0030 3E       		.uleb128 0x3e
 5367 0031 0B       		.uleb128 0xb
 5368 0032 03       		.uleb128 0x3
 5369 0033 08       		.uleb128 0x8
 5370 0034 00       		.byte	0
 5371 0035 00       		.byte	0
 5372 0036 05       		.uleb128 0x5
 5373 0037 16       		.uleb128 0x16
 5374 0038 00       		.byte	0
 5375 0039 03       		.uleb128 0x3
 5376 003a 0E       		.uleb128 0xe
 5377 003b 3A       		.uleb128 0x3a
 5378 003c 0B       		.uleb128 0xb
 5379 003d 3B       		.uleb128 0x3b
 5380 003e 05       		.uleb128 0x5
 5381 003f 49       		.uleb128 0x49
 5382 0040 13       		.uleb128 0x13
 5383 0041 00       		.byte	0
 5384 0042 00       		.byte	0
 5385 0043 06       		.uleb128 0x6
 5386 0044 0F       		.uleb128 0xf
 5387 0045 00       		.byte	0
 5388 0046 0B       		.uleb128 0xb
 5389 0047 0B       		.uleb128 0xb
 5390 0048 00       		.byte	0
 5391 0049 00       		.byte	0
 5392 004a 07       		.uleb128 0x7
 5393 004b 0F       		.uleb128 0xf
 5394 004c 00       		.byte	0
 5395 004d 0B       		.uleb128 0xb
 5396 004e 0B       		.uleb128 0xb
 5397 004f 49       		.uleb128 0x49
 5398 0050 13       		.uleb128 0x13
 5399 0051 00       		.byte	0
 5400 0052 00       		.byte	0
 5401 0053 08       		.uleb128 0x8
 5402 0054 04       		.uleb128 0x4
 5403 0055 01       		.byte	0x1
 5404 0056 0B       		.uleb128 0xb
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 118


 5405 0057 0B       		.uleb128 0xb
 5406 0058 3A       		.uleb128 0x3a
 5407 0059 0B       		.uleb128 0xb
 5408 005a 3B       		.uleb128 0x3b
 5409 005b 0B       		.uleb128 0xb
 5410 005c 01       		.uleb128 0x1
 5411 005d 13       		.uleb128 0x13
 5412 005e 00       		.byte	0
 5413 005f 00       		.byte	0
 5414 0060 09       		.uleb128 0x9
 5415 0061 28       		.uleb128 0x28
 5416 0062 00       		.byte	0
 5417 0063 03       		.uleb128 0x3
 5418 0064 08       		.uleb128 0x8
 5419 0065 1C       		.uleb128 0x1c
 5420 0066 0D       		.uleb128 0xd
 5421 0067 00       		.byte	0
 5422 0068 00       		.byte	0
 5423 0069 0A       		.uleb128 0xa
 5424 006a 28       		.uleb128 0x28
 5425 006b 00       		.byte	0
 5426 006c 03       		.uleb128 0x3
 5427 006d 0E       		.uleb128 0xe
 5428 006e 1C       		.uleb128 0x1c
 5429 006f 0D       		.uleb128 0xd
 5430 0070 00       		.byte	0
 5431 0071 00       		.byte	0
 5432 0072 0B       		.uleb128 0xb
 5433 0073 2E       		.uleb128 0x2e
 5434 0074 01       		.byte	0x1
 5435 0075 03       		.uleb128 0x3
 5436 0076 0E       		.uleb128 0xe
 5437 0077 3A       		.uleb128 0x3a
 5438 0078 0B       		.uleb128 0xb
 5439 0079 3B       		.uleb128 0x3b
 5440 007a 05       		.uleb128 0x5
 5441 007b 27       		.uleb128 0x27
 5442 007c 19       		.uleb128 0x19
 5443 007d 49       		.uleb128 0x49
 5444 007e 13       		.uleb128 0x13
 5445 007f 11       		.uleb128 0x11
 5446 0080 01       		.uleb128 0x1
 5447 0081 12       		.uleb128 0x12
 5448 0082 06       		.uleb128 0x6
 5449 0083 40       		.uleb128 0x40
 5450 0084 18       		.uleb128 0x18
 5451 0085 9742     		.uleb128 0x2117
 5452 0087 19       		.uleb128 0x19
 5453 0088 01       		.uleb128 0x1
 5454 0089 13       		.uleb128 0x13
 5455 008a 00       		.byte	0
 5456 008b 00       		.byte	0
 5457 008c 0C       		.uleb128 0xc
 5458 008d 05       		.uleb128 0x5
 5459 008e 00       		.byte	0
 5460 008f 03       		.uleb128 0x3
 5461 0090 0E       		.uleb128 0xe
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 119


 5462 0091 3A       		.uleb128 0x3a
 5463 0092 0B       		.uleb128 0xb
 5464 0093 3B       		.uleb128 0x3b
 5465 0094 05       		.uleb128 0x5
 5466 0095 49       		.uleb128 0x49
 5467 0096 13       		.uleb128 0x13
 5468 0097 02       		.uleb128 0x2
 5469 0098 17       		.uleb128 0x17
 5470 0099 00       		.byte	0
 5471 009a 00       		.byte	0
 5472 009b 0D       		.uleb128 0xd
 5473 009c 05       		.uleb128 0x5
 5474 009d 00       		.byte	0
 5475 009e 03       		.uleb128 0x3
 5476 009f 08       		.uleb128 0x8
 5477 00a0 3A       		.uleb128 0x3a
 5478 00a1 0B       		.uleb128 0xb
 5479 00a2 3B       		.uleb128 0x3b
 5480 00a3 05       		.uleb128 0x5
 5481 00a4 49       		.uleb128 0x49
 5482 00a5 13       		.uleb128 0x13
 5483 00a6 02       		.uleb128 0x2
 5484 00a7 17       		.uleb128 0x17
 5485 00a8 00       		.byte	0
 5486 00a9 00       		.byte	0
 5487 00aa 0E       		.uleb128 0xe
 5488 00ab 34       		.uleb128 0x34
 5489 00ac 00       		.byte	0
 5490 00ad 03       		.uleb128 0x3
 5491 00ae 08       		.uleb128 0x8
 5492 00af 3A       		.uleb128 0x3a
 5493 00b0 0B       		.uleb128 0xb
 5494 00b1 3B       		.uleb128 0x3b
 5495 00b2 05       		.uleb128 0x5
 5496 00b3 49       		.uleb128 0x49
 5497 00b4 13       		.uleb128 0x13
 5498 00b5 02       		.uleb128 0x2
 5499 00b6 17       		.uleb128 0x17
 5500 00b7 00       		.byte	0
 5501 00b8 00       		.byte	0
 5502 00b9 0F       		.uleb128 0xf
 5503 00ba 898201   		.uleb128 0x4109
 5504 00bd 01       		.byte	0x1
 5505 00be 11       		.uleb128 0x11
 5506 00bf 01       		.uleb128 0x1
 5507 00c0 31       		.uleb128 0x31
 5508 00c1 13       		.uleb128 0x13
 5509 00c2 01       		.uleb128 0x1
 5510 00c3 13       		.uleb128 0x13
 5511 00c4 00       		.byte	0
 5512 00c5 00       		.byte	0
 5513 00c6 10       		.uleb128 0x10
 5514 00c7 8A8201   		.uleb128 0x410a
 5515 00ca 00       		.byte	0
 5516 00cb 02       		.uleb128 0x2
 5517 00cc 18       		.uleb128 0x18
 5518 00cd 9142     		.uleb128 0x2111
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 120


 5519 00cf 18       		.uleb128 0x18
 5520 00d0 00       		.byte	0
 5521 00d1 00       		.byte	0
 5522 00d2 11       		.uleb128 0x11
 5523 00d3 898201   		.uleb128 0x4109
 5524 00d6 00       		.byte	0
 5525 00d7 11       		.uleb128 0x11
 5526 00d8 01       		.uleb128 0x1
 5527 00d9 31       		.uleb128 0x31
 5528 00da 13       		.uleb128 0x13
 5529 00db 00       		.byte	0
 5530 00dc 00       		.byte	0
 5531 00dd 12       		.uleb128 0x12
 5532 00de 34       		.uleb128 0x34
 5533 00df 00       		.byte	0
 5534 00e0 03       		.uleb128 0x3
 5535 00e1 0E       		.uleb128 0xe
 5536 00e2 3A       		.uleb128 0x3a
 5537 00e3 0B       		.uleb128 0xb
 5538 00e4 3B       		.uleb128 0x3b
 5539 00e5 05       		.uleb128 0x5
 5540 00e6 49       		.uleb128 0x49
 5541 00e7 13       		.uleb128 0x13
 5542 00e8 02       		.uleb128 0x2
 5543 00e9 18       		.uleb128 0x18
 5544 00ea 00       		.byte	0
 5545 00eb 00       		.byte	0
 5546 00ec 13       		.uleb128 0x13
 5547 00ed 898201   		.uleb128 0x4109
 5548 00f0 01       		.byte	0x1
 5549 00f1 11       		.uleb128 0x11
 5550 00f2 01       		.uleb128 0x1
 5551 00f3 31       		.uleb128 0x31
 5552 00f4 13       		.uleb128 0x13
 5553 00f5 00       		.byte	0
 5554 00f6 00       		.byte	0
 5555 00f7 14       		.uleb128 0x14
 5556 00f8 34       		.uleb128 0x34
 5557 00f9 00       		.byte	0
 5558 00fa 03       		.uleb128 0x3
 5559 00fb 0E       		.uleb128 0xe
 5560 00fc 3A       		.uleb128 0x3a
 5561 00fd 0B       		.uleb128 0xb
 5562 00fe 3B       		.uleb128 0x3b
 5563 00ff 05       		.uleb128 0x5
 5564 0100 49       		.uleb128 0x49
 5565 0101 13       		.uleb128 0x13
 5566 0102 02       		.uleb128 0x2
 5567 0103 17       		.uleb128 0x17
 5568 0104 00       		.byte	0
 5569 0105 00       		.byte	0
 5570 0106 15       		.uleb128 0x15
 5571 0107 01       		.uleb128 0x1
 5572 0108 01       		.byte	0x1
 5573 0109 49       		.uleb128 0x49
 5574 010a 13       		.uleb128 0x13
 5575 010b 01       		.uleb128 0x1
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 121


 5576 010c 13       		.uleb128 0x13
 5577 010d 00       		.byte	0
 5578 010e 00       		.byte	0
 5579 010f 16       		.uleb128 0x16
 5580 0110 21       		.uleb128 0x21
 5581 0111 00       		.byte	0
 5582 0112 49       		.uleb128 0x49
 5583 0113 13       		.uleb128 0x13
 5584 0114 2F       		.uleb128 0x2f
 5585 0115 0B       		.uleb128 0xb
 5586 0116 00       		.byte	0
 5587 0117 00       		.byte	0
 5588 0118 17       		.uleb128 0x17
 5589 0119 0B       		.uleb128 0xb
 5590 011a 01       		.byte	0x1
 5591 011b 55       		.uleb128 0x55
 5592 011c 17       		.uleb128 0x17
 5593 011d 01       		.uleb128 0x1
 5594 011e 13       		.uleb128 0x13
 5595 011f 00       		.byte	0
 5596 0120 00       		.byte	0
 5597 0121 18       		.uleb128 0x18
 5598 0122 34       		.uleb128 0x34
 5599 0123 00       		.byte	0
 5600 0124 03       		.uleb128 0x3
 5601 0125 08       		.uleb128 0x8
 5602 0126 3A       		.uleb128 0x3a
 5603 0127 0B       		.uleb128 0xb
 5604 0128 3B       		.uleb128 0x3b
 5605 0129 05       		.uleb128 0x5
 5606 012a 49       		.uleb128 0x49
 5607 012b 13       		.uleb128 0x13
 5608 012c 02       		.uleb128 0x2
 5609 012d 18       		.uleb128 0x18
 5610 012e 00       		.byte	0
 5611 012f 00       		.byte	0
 5612 0130 19       		.uleb128 0x19
 5613 0131 2E       		.uleb128 0x2e
 5614 0132 01       		.byte	0x1
 5615 0133 3F       		.uleb128 0x3f
 5616 0134 19       		.uleb128 0x19
 5617 0135 03       		.uleb128 0x3
 5618 0136 0E       		.uleb128 0xe
 5619 0137 3A       		.uleb128 0x3a
 5620 0138 0B       		.uleb128 0xb
 5621 0139 3B       		.uleb128 0x3b
 5622 013a 05       		.uleb128 0x5
 5623 013b 27       		.uleb128 0x27
 5624 013c 19       		.uleb128 0x19
 5625 013d 49       		.uleb128 0x49
 5626 013e 13       		.uleb128 0x13
 5627 013f 11       		.uleb128 0x11
 5628 0140 01       		.uleb128 0x1
 5629 0141 12       		.uleb128 0x12
 5630 0142 06       		.uleb128 0x6
 5631 0143 40       		.uleb128 0x40
 5632 0144 18       		.uleb128 0x18
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 122


 5633 0145 9742     		.uleb128 0x2117
 5634 0147 19       		.uleb128 0x19
 5635 0148 01       		.uleb128 0x1
 5636 0149 13       		.uleb128 0x13
 5637 014a 00       		.byte	0
 5638 014b 00       		.byte	0
 5639 014c 1A       		.uleb128 0x1a
 5640 014d 2E       		.uleb128 0x2e
 5641 014e 01       		.byte	0x1
 5642 014f 3F       		.uleb128 0x3f
 5643 0150 19       		.uleb128 0x19
 5644 0151 03       		.uleb128 0x3
 5645 0152 0E       		.uleb128 0xe
 5646 0153 3A       		.uleb128 0x3a
 5647 0154 0B       		.uleb128 0xb
 5648 0155 3B       		.uleb128 0x3b
 5649 0156 05       		.uleb128 0x5
 5650 0157 27       		.uleb128 0x27
 5651 0158 19       		.uleb128 0x19
 5652 0159 11       		.uleb128 0x11
 5653 015a 01       		.uleb128 0x1
 5654 015b 12       		.uleb128 0x12
 5655 015c 06       		.uleb128 0x6
 5656 015d 40       		.uleb128 0x40
 5657 015e 18       		.uleb128 0x18
 5658 015f 9742     		.uleb128 0x2117
 5659 0161 19       		.uleb128 0x19
 5660 0162 01       		.uleb128 0x1
 5661 0163 13       		.uleb128 0x13
 5662 0164 00       		.byte	0
 5663 0165 00       		.byte	0
 5664 0166 1B       		.uleb128 0x1b
 5665 0167 05       		.uleb128 0x5
 5666 0168 00       		.byte	0
 5667 0169 03       		.uleb128 0x3
 5668 016a 0E       		.uleb128 0xe
 5669 016b 3A       		.uleb128 0x3a
 5670 016c 0B       		.uleb128 0xb
 5671 016d 3B       		.uleb128 0x3b
 5672 016e 05       		.uleb128 0x5
 5673 016f 49       		.uleb128 0x49
 5674 0170 13       		.uleb128 0x13
 5675 0171 02       		.uleb128 0x2
 5676 0172 18       		.uleb128 0x18
 5677 0173 00       		.byte	0
 5678 0174 00       		.byte	0
 5679 0175 1C       		.uleb128 0x1c
 5680 0176 2E       		.uleb128 0x2e
 5681 0177 01       		.byte	0x1
 5682 0178 3F       		.uleb128 0x3f
 5683 0179 19       		.uleb128 0x19
 5684 017a 03       		.uleb128 0x3
 5685 017b 0E       		.uleb128 0xe
 5686 017c 3A       		.uleb128 0x3a
 5687 017d 0B       		.uleb128 0xb
 5688 017e 3B       		.uleb128 0x3b
 5689 017f 05       		.uleb128 0x5
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 123


 5690 0180 49       		.uleb128 0x49
 5691 0181 13       		.uleb128 0x13
 5692 0182 11       		.uleb128 0x11
 5693 0183 01       		.uleb128 0x1
 5694 0184 12       		.uleb128 0x12
 5695 0185 06       		.uleb128 0x6
 5696 0186 40       		.uleb128 0x40
 5697 0187 18       		.uleb128 0x18
 5698 0188 9742     		.uleb128 0x2117
 5699 018a 19       		.uleb128 0x19
 5700 018b 01       		.uleb128 0x1
 5701 018c 13       		.uleb128 0x13
 5702 018d 00       		.byte	0
 5703 018e 00       		.byte	0
 5704 018f 1D       		.uleb128 0x1d
 5705 0190 2E       		.uleb128 0x2e
 5706 0191 01       		.byte	0x1
 5707 0192 3F       		.uleb128 0x3f
 5708 0193 19       		.uleb128 0x19
 5709 0194 03       		.uleb128 0x3
 5710 0195 0E       		.uleb128 0xe
 5711 0196 3A       		.uleb128 0x3a
 5712 0197 0B       		.uleb128 0xb
 5713 0198 3B       		.uleb128 0x3b
 5714 0199 0B       		.uleb128 0xb
 5715 019a 27       		.uleb128 0x27
 5716 019b 19       		.uleb128 0x19
 5717 019c 49       		.uleb128 0x49
 5718 019d 13       		.uleb128 0x13
 5719 019e 11       		.uleb128 0x11
 5720 019f 01       		.uleb128 0x1
 5721 01a0 12       		.uleb128 0x12
 5722 01a1 06       		.uleb128 0x6
 5723 01a2 40       		.uleb128 0x40
 5724 01a3 18       		.uleb128 0x18
 5725 01a4 9742     		.uleb128 0x2117
 5726 01a6 19       		.uleb128 0x19
 5727 01a7 01       		.uleb128 0x1
 5728 01a8 13       		.uleb128 0x13
 5729 01a9 00       		.byte	0
 5730 01aa 00       		.byte	0
 5731 01ab 1E       		.uleb128 0x1e
 5732 01ac 34       		.uleb128 0x34
 5733 01ad 00       		.byte	0
 5734 01ae 03       		.uleb128 0x3
 5735 01af 0E       		.uleb128 0xe
 5736 01b0 3A       		.uleb128 0x3a
 5737 01b1 0B       		.uleb128 0xb
 5738 01b2 3B       		.uleb128 0x3b
 5739 01b3 0B       		.uleb128 0xb
 5740 01b4 49       		.uleb128 0x49
 5741 01b5 13       		.uleb128 0x13
 5742 01b6 02       		.uleb128 0x2
 5743 01b7 17       		.uleb128 0x17
 5744 01b8 00       		.byte	0
 5745 01b9 00       		.byte	0
 5746 01ba 1F       		.uleb128 0x1f
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 124


 5747 01bb 34       		.uleb128 0x34
 5748 01bc 00       		.byte	0
 5749 01bd 03       		.uleb128 0x3
 5750 01be 0E       		.uleb128 0xe
 5751 01bf 3A       		.uleb128 0x3a
 5752 01c0 0B       		.uleb128 0xb
 5753 01c1 3B       		.uleb128 0x3b
 5754 01c2 05       		.uleb128 0x5
 5755 01c3 49       		.uleb128 0x49
 5756 01c4 13       		.uleb128 0x13
 5757 01c5 00       		.byte	0
 5758 01c6 00       		.byte	0
 5759 01c7 20       		.uleb128 0x20
 5760 01c8 05       		.uleb128 0x5
 5761 01c9 00       		.byte	0
 5762 01ca 03       		.uleb128 0x3
 5763 01cb 0E       		.uleb128 0xe
 5764 01cc 3A       		.uleb128 0x3a
 5765 01cd 0B       		.uleb128 0xb
 5766 01ce 3B       		.uleb128 0x3b
 5767 01cf 0B       		.uleb128 0xb
 5768 01d0 49       		.uleb128 0x49
 5769 01d1 13       		.uleb128 0x13
 5770 01d2 02       		.uleb128 0x2
 5771 01d3 17       		.uleb128 0x17
 5772 01d4 00       		.byte	0
 5773 01d5 00       		.byte	0
 5774 01d6 21       		.uleb128 0x21
 5775 01d7 34       		.uleb128 0x34
 5776 01d8 00       		.byte	0
 5777 01d9 03       		.uleb128 0x3
 5778 01da 0E       		.uleb128 0xe
 5779 01db 3A       		.uleb128 0x3a
 5780 01dc 0B       		.uleb128 0xb
 5781 01dd 3B       		.uleb128 0x3b
 5782 01de 0B       		.uleb128 0xb
 5783 01df 49       		.uleb128 0x49
 5784 01e0 13       		.uleb128 0x13
 5785 01e1 02       		.uleb128 0x2
 5786 01e2 18       		.uleb128 0x18
 5787 01e3 00       		.byte	0
 5788 01e4 00       		.byte	0
 5789 01e5 22       		.uleb128 0x22
 5790 01e6 34       		.uleb128 0x34
 5791 01e7 00       		.byte	0
 5792 01e8 03       		.uleb128 0x3
 5793 01e9 0E       		.uleb128 0xe
 5794 01ea 3A       		.uleb128 0x3a
 5795 01eb 0B       		.uleb128 0xb
 5796 01ec 3B       		.uleb128 0x3b
 5797 01ed 0B       		.uleb128 0xb
 5798 01ee 49       		.uleb128 0x49
 5799 01ef 13       		.uleb128 0x13
 5800 01f0 1C       		.uleb128 0x1c
 5801 01f1 0B       		.uleb128 0xb
 5802 01f2 00       		.byte	0
 5803 01f3 00       		.byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 125


 5804 01f4 23       		.uleb128 0x23
 5805 01f5 26       		.uleb128 0x26
 5806 01f6 00       		.byte	0
 5807 01f7 49       		.uleb128 0x49
 5808 01f8 13       		.uleb128 0x13
 5809 01f9 00       		.byte	0
 5810 01fa 00       		.byte	0
 5811 01fb 24       		.uleb128 0x24
 5812 01fc 34       		.uleb128 0x34
 5813 01fd 00       		.byte	0
 5814 01fe 03       		.uleb128 0x3
 5815 01ff 0E       		.uleb128 0xe
 5816 0200 3A       		.uleb128 0x3a
 5817 0201 0B       		.uleb128 0xb
 5818 0202 3B       		.uleb128 0x3b
 5819 0203 05       		.uleb128 0x5
 5820 0204 49       		.uleb128 0x49
 5821 0205 13       		.uleb128 0x13
 5822 0206 3F       		.uleb128 0x3f
 5823 0207 19       		.uleb128 0x19
 5824 0208 02       		.uleb128 0x2
 5825 0209 18       		.uleb128 0x18
 5826 020a 00       		.byte	0
 5827 020b 00       		.byte	0
 5828 020c 25       		.uleb128 0x25
 5829 020d 2E       		.uleb128 0x2e
 5830 020e 01       		.byte	0x1
 5831 020f 3F       		.uleb128 0x3f
 5832 0210 19       		.uleb128 0x19
 5833 0211 03       		.uleb128 0x3
 5834 0212 0E       		.uleb128 0xe
 5835 0213 3A       		.uleb128 0x3a
 5836 0214 0B       		.uleb128 0xb
 5837 0215 3B       		.uleb128 0x3b
 5838 0216 05       		.uleb128 0x5
 5839 0217 27       		.uleb128 0x27
 5840 0218 19       		.uleb128 0x19
 5841 0219 49       		.uleb128 0x49
 5842 021a 13       		.uleb128 0x13
 5843 021b 3C       		.uleb128 0x3c
 5844 021c 19       		.uleb128 0x19
 5845 021d 01       		.uleb128 0x1
 5846 021e 13       		.uleb128 0x13
 5847 021f 00       		.byte	0
 5848 0220 00       		.byte	0
 5849 0221 26       		.uleb128 0x26
 5850 0222 05       		.uleb128 0x5
 5851 0223 00       		.byte	0
 5852 0224 49       		.uleb128 0x49
 5853 0225 13       		.uleb128 0x13
 5854 0226 00       		.byte	0
 5855 0227 00       		.byte	0
 5856 0228 27       		.uleb128 0x27
 5857 0229 2E       		.uleb128 0x2e
 5858 022a 00       		.byte	0
 5859 022b 3F       		.uleb128 0x3f
 5860 022c 19       		.uleb128 0x19
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 126


 5861 022d 03       		.uleb128 0x3
 5862 022e 0E       		.uleb128 0xe
 5863 022f 3A       		.uleb128 0x3a
 5864 0230 0B       		.uleb128 0xb
 5865 0231 3B       		.uleb128 0x3b
 5866 0232 05       		.uleb128 0x5
 5867 0233 27       		.uleb128 0x27
 5868 0234 19       		.uleb128 0x19
 5869 0235 49       		.uleb128 0x49
 5870 0236 13       		.uleb128 0x13
 5871 0237 3C       		.uleb128 0x3c
 5872 0238 19       		.uleb128 0x19
 5873 0239 00       		.byte	0
 5874 023a 00       		.byte	0
 5875 023b 28       		.uleb128 0x28
 5876 023c 2E       		.uleb128 0x2e
 5877 023d 01       		.byte	0x1
 5878 023e 3F       		.uleb128 0x3f
 5879 023f 19       		.uleb128 0x19
 5880 0240 03       		.uleb128 0x3
 5881 0241 0E       		.uleb128 0xe
 5882 0242 27       		.uleb128 0x27
 5883 0243 19       		.uleb128 0x19
 5884 0244 49       		.uleb128 0x49
 5885 0245 13       		.uleb128 0x13
 5886 0246 34       		.uleb128 0x34
 5887 0247 19       		.uleb128 0x19
 5888 0248 3C       		.uleb128 0x3c
 5889 0249 19       		.uleb128 0x19
 5890 024a 01       		.uleb128 0x1
 5891 024b 13       		.uleb128 0x13
 5892 024c 00       		.byte	0
 5893 024d 00       		.byte	0
 5894 024e 29       		.uleb128 0x29
 5895 024f 2E       		.uleb128 0x2e
 5896 0250 01       		.byte	0x1
 5897 0251 3F       		.uleb128 0x3f
 5898 0252 19       		.uleb128 0x19
 5899 0253 03       		.uleb128 0x3
 5900 0254 0E       		.uleb128 0xe
 5901 0255 3A       		.uleb128 0x3a
 5902 0256 0B       		.uleb128 0xb
 5903 0257 3B       		.uleb128 0x3b
 5904 0258 0B       		.uleb128 0xb
 5905 0259 27       		.uleb128 0x27
 5906 025a 19       		.uleb128 0x19
 5907 025b 3C       		.uleb128 0x3c
 5908 025c 19       		.uleb128 0x19
 5909 025d 01       		.uleb128 0x1
 5910 025e 13       		.uleb128 0x13
 5911 025f 00       		.byte	0
 5912 0260 00       		.byte	0
 5913 0261 2A       		.uleb128 0x2a
 5914 0262 2E       		.uleb128 0x2e
 5915 0263 00       		.byte	0
 5916 0264 3F       		.uleb128 0x3f
 5917 0265 19       		.uleb128 0x19
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 127


 5918 0266 03       		.uleb128 0x3
 5919 0267 0E       		.uleb128 0xe
 5920 0268 3A       		.uleb128 0x3a
 5921 0269 0B       		.uleb128 0xb
 5922 026a 3B       		.uleb128 0x3b
 5923 026b 0B       		.uleb128 0xb
 5924 026c 27       		.uleb128 0x27
 5925 026d 19       		.uleb128 0x19
 5926 026e 3C       		.uleb128 0x3c
 5927 026f 19       		.uleb128 0x19
 5928 0270 00       		.byte	0
 5929 0271 00       		.byte	0
 5930 0272 2B       		.uleb128 0x2b
 5931 0273 2E       		.uleb128 0x2e
 5932 0274 01       		.byte	0x1
 5933 0275 3F       		.uleb128 0x3f
 5934 0276 19       		.uleb128 0x19
 5935 0277 03       		.uleb128 0x3
 5936 0278 0E       		.uleb128 0xe
 5937 0279 3A       		.uleb128 0x3a
 5938 027a 0B       		.uleb128 0xb
 5939 027b 3B       		.uleb128 0x3b
 5940 027c 0B       		.uleb128 0xb
 5941 027d 27       		.uleb128 0x27
 5942 027e 19       		.uleb128 0x19
 5943 027f 3C       		.uleb128 0x3c
 5944 0280 19       		.uleb128 0x19
 5945 0281 00       		.byte	0
 5946 0282 00       		.byte	0
 5947 0283 00       		.byte	0
 5948              		.section	.debug_loc,"",%progbits
 5949              	.Ldebug_loc0:
 5950              	.LLST0:
 5951 0000 00000000 		.4byte	.LVL0
 5952 0004 0A000000 		.4byte	.LVL1
 5953 0008 0100     		.2byte	0x1
 5954 000a 50       		.byte	0x50
 5955 000b 0A000000 		.4byte	.LVL1
 5956 000f 2E000000 		.4byte	.LFE90
 5957 0013 0400     		.2byte	0x4
 5958 0015 F3       		.byte	0xf3
 5959 0016 01       		.uleb128 0x1
 5960 0017 50       		.byte	0x50
 5961 0018 9F       		.byte	0x9f
 5962 0019 00000000 		.4byte	0
 5963 001d 00000000 		.4byte	0
 5964              	.LLST1:
 5965 0021 00000000 		.4byte	.LVL0
 5966 0025 0C000000 		.4byte	.LVL2
 5967 0029 0100     		.2byte	0x1
 5968 002b 51       		.byte	0x51
 5969 002c 0C000000 		.4byte	.LVL2
 5970 0030 2C000000 		.4byte	.LVL10
 5971 0034 0100     		.2byte	0x1
 5972 0036 56       		.byte	0x56
 5973 0037 2C000000 		.4byte	.LVL10
 5974 003b 2E000000 		.4byte	.LFE90
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 128


 5975 003f 0400     		.2byte	0x4
 5976 0041 F3       		.byte	0xf3
 5977 0042 01       		.uleb128 0x1
 5978 0043 51       		.byte	0x51
 5979 0044 9F       		.byte	0x9f
 5980 0045 00000000 		.4byte	0
 5981 0049 00000000 		.4byte	0
 5982              	.LLST2:
 5983 004d 00000000 		.4byte	.LVL0
 5984 0051 0F000000 		.4byte	.LVL3-1
 5985 0055 0100     		.2byte	0x1
 5986 0057 52       		.byte	0x52
 5987 0058 0F000000 		.4byte	.LVL3-1
 5988 005c 2E000000 		.4byte	.LFE90
 5989 0060 0400     		.2byte	0x4
 5990 0062 F3       		.byte	0xf3
 5991 0063 01       		.uleb128 0x1
 5992 0064 52       		.byte	0x52
 5993 0065 9F       		.byte	0x9f
 5994 0066 00000000 		.4byte	0
 5995 006a 00000000 		.4byte	0
 5996              	.LLST3:
 5997 006e 16000000 		.4byte	.LVL4
 5998 0072 1A000000 		.4byte	.LVL5
 5999 0076 0200     		.2byte	0x2
 6000 0078 30       		.byte	0x30
 6001 0079 9F       		.byte	0x9f
 6002 007a 1A000000 		.4byte	.LVL5
 6003 007e 2C000000 		.4byte	.LVL9
 6004 0082 0100     		.2byte	0x1
 6005 0084 54       		.byte	0x54
 6006 0085 00000000 		.4byte	0
 6007 0089 00000000 		.4byte	0
 6008              	.LLST4:
 6009 008d 00000000 		.4byte	.LVL12
 6010 0091 0C000000 		.4byte	.LVL13
 6011 0095 0100     		.2byte	0x1
 6012 0097 50       		.byte	0x50
 6013 0098 0C000000 		.4byte	.LVL13
 6014 009c 11000000 		.4byte	.LVL14-1
 6015 00a0 0200     		.2byte	0x2
 6016 00a2 71       		.byte	0x71
 6017 00a3 00       		.sleb128 0
 6018 00a4 11000000 		.4byte	.LVL14-1
 6019 00a8 14000000 		.4byte	.LVL15
 6020 00ac 0200     		.2byte	0x2
 6021 00ae 7D       		.byte	0x7d
 6022 00af 07       		.sleb128 7
 6023 00b0 14000000 		.4byte	.LVL15
 6024 00b4 16000000 		.4byte	.LFE80
 6025 00b8 0200     		.2byte	0x2
 6026 00ba 91       		.byte	0x91
 6027 00bb 77       		.sleb128 -9
 6028 00bc 00000000 		.4byte	0
 6029 00c0 00000000 		.4byte	0
 6030              	.LLST5:
 6031 00c4 00000000 		.4byte	.LVL16
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 129


 6032 00c8 0C000000 		.4byte	.LVL17
 6033 00cc 0100     		.2byte	0x1
 6034 00ce 50       		.byte	0x50
 6035 00cf 0C000000 		.4byte	.LVL17
 6036 00d3 11000000 		.4byte	.LVL18-1
 6037 00d7 0200     		.2byte	0x2
 6038 00d9 71       		.byte	0x71
 6039 00da 00       		.sleb128 0
 6040 00db 11000000 		.4byte	.LVL18-1
 6041 00df 14000000 		.4byte	.LVL19
 6042 00e3 0200     		.2byte	0x2
 6043 00e5 7D       		.byte	0x7d
 6044 00e6 07       		.sleb128 7
 6045 00e7 14000000 		.4byte	.LVL19
 6046 00eb 16000000 		.4byte	.LFE81
 6047 00ef 0200     		.2byte	0x2
 6048 00f1 91       		.byte	0x91
 6049 00f2 77       		.sleb128 -9
 6050 00f3 00000000 		.4byte	0
 6051 00f7 00000000 		.4byte	0
 6052              	.LLST6:
 6053 00fb 00000000 		.4byte	.LVL20
 6054 00ff 0C000000 		.4byte	.LVL21
 6055 0103 0100     		.2byte	0x1
 6056 0105 50       		.byte	0x50
 6057 0106 0C000000 		.4byte	.LVL21
 6058 010a 1A000000 		.4byte	.LFE84
 6059 010e 0400     		.2byte	0x4
 6060 0110 F3       		.byte	0xf3
 6061 0111 01       		.uleb128 0x1
 6062 0112 50       		.byte	0x50
 6063 0113 9F       		.byte	0x9f
 6064 0114 00000000 		.4byte	0
 6065 0118 00000000 		.4byte	0
 6066              	.LLST7:
 6067 011c 00000000 		.4byte	.LVL20
 6068 0120 10000000 		.4byte	.LVL23
 6069 0124 0100     		.2byte	0x1
 6070 0126 51       		.byte	0x51
 6071 0127 10000000 		.4byte	.LVL23
 6072 012b 15000000 		.4byte	.LVL24-1
 6073 012f 0200     		.2byte	0x2
 6074 0131 71       		.byte	0x71
 6075 0132 00       		.sleb128 0
 6076 0133 15000000 		.4byte	.LVL24-1
 6077 0137 18000000 		.4byte	.LVL25
 6078 013b 0200     		.2byte	0x2
 6079 013d 7D       		.byte	0x7d
 6080 013e 07       		.sleb128 7
 6081 013f 18000000 		.4byte	.LVL25
 6082 0143 1A000000 		.4byte	.LFE84
 6083 0147 0200     		.2byte	0x2
 6084 0149 91       		.byte	0x91
 6085 014a 77       		.sleb128 -9
 6086 014b 00000000 		.4byte	0
 6087 014f 00000000 		.4byte	0
 6088              	.LLST8:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 130


 6089 0153 0E000000 		.4byte	.LVL22
 6090 0157 15000000 		.4byte	.LVL24-1
 6091 015b 0100     		.2byte	0x1
 6092 015d 50       		.byte	0x50
 6093 015e 00000000 		.4byte	0
 6094 0162 00000000 		.4byte	0
 6095              	.LLST9:
 6096 0166 00000000 		.4byte	.LVL26
 6097 016a 0C000000 		.4byte	.LVL27
 6098 016e 0100     		.2byte	0x1
 6099 0170 50       		.byte	0x50
 6100 0171 0C000000 		.4byte	.LVL27
 6101 0175 11000000 		.4byte	.LVL28-1
 6102 0179 0200     		.2byte	0x2
 6103 017b 71       		.byte	0x71
 6104 017c 00       		.sleb128 0
 6105 017d 11000000 		.4byte	.LVL28-1
 6106 0181 14000000 		.4byte	.LVL29
 6107 0185 0200     		.2byte	0x2
 6108 0187 7D       		.byte	0x7d
 6109 0188 07       		.sleb128 7
 6110 0189 14000000 		.4byte	.LVL29
 6111 018d 16000000 		.4byte	.LFE86
 6112 0191 0200     		.2byte	0x2
 6113 0193 91       		.byte	0x91
 6114 0194 77       		.sleb128 -9
 6115 0195 00000000 		.4byte	0
 6116 0199 00000000 		.4byte	0
 6117              	.LLST10:
 6118 019d 00000000 		.4byte	.LVL30
 6119 01a1 0E000000 		.4byte	.LVL32
 6120 01a5 0100     		.2byte	0x1
 6121 01a7 50       		.byte	0x50
 6122 01a8 0E000000 		.4byte	.LVL32
 6123 01ac 1E000000 		.4byte	.LFE78
 6124 01b0 0400     		.2byte	0x4
 6125 01b2 F3       		.byte	0xf3
 6126 01b3 01       		.uleb128 0x1
 6127 01b4 50       		.byte	0x50
 6128 01b5 9F       		.byte	0x9f
 6129 01b6 00000000 		.4byte	0
 6130 01ba 00000000 		.4byte	0
 6131              	.LLST11:
 6132 01be 06000000 		.4byte	.LVL31
 6133 01c2 13000000 		.4byte	.LVL33-1
 6134 01c6 0100     		.2byte	0x1
 6135 01c8 53       		.byte	0x53
 6136 01c9 00000000 		.4byte	0
 6137 01cd 00000000 		.4byte	0
 6138              	.LLST12:
 6139 01d1 06000000 		.4byte	.LVL31
 6140 01d5 0E000000 		.4byte	.LVL32
 6141 01d9 0100     		.2byte	0x1
 6142 01db 50       		.byte	0x50
 6143 01dc 0E000000 		.4byte	.LVL32
 6144 01e0 13000000 		.4byte	.LVL33-1
 6145 01e4 0200     		.2byte	0x2
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 131


 6146 01e6 71       		.byte	0x71
 6147 01e7 00       		.sleb128 0
 6148 01e8 13000000 		.4byte	.LVL33-1
 6149 01ec 1E000000 		.4byte	.LFE78
 6150 01f0 0400     		.2byte	0x4
 6151 01f2 F3       		.byte	0xf3
 6152 01f3 01       		.uleb128 0x1
 6153 01f4 50       		.byte	0x50
 6154 01f5 9F       		.byte	0x9f
 6155 01f6 00000000 		.4byte	0
 6156 01fa 00000000 		.4byte	0
 6157              	.LLST13:
 6158 01fe 00000000 		.4byte	.LVL35
 6159 0202 10000000 		.4byte	.LVL36
 6160 0206 0100     		.2byte	0x1
 6161 0208 50       		.byte	0x50
 6162 0209 10000000 		.4byte	.LVL36
 6163 020d 7A000000 		.4byte	.LFE89
 6164 0211 0400     		.2byte	0x4
 6165 0213 F3       		.byte	0xf3
 6166 0214 01       		.uleb128 0x1
 6167 0215 50       		.byte	0x50
 6168 0216 9F       		.byte	0x9f
 6169 0217 00000000 		.4byte	0
 6170 021b 00000000 		.4byte	0
 6171              	.LLST14:
 6172 021f 00000000 		.4byte	.LVL35
 6173 0223 12000000 		.4byte	.LVL37
 6174 0227 0100     		.2byte	0x1
 6175 0229 51       		.byte	0x51
 6176 022a 12000000 		.4byte	.LVL37
 6177 022e 74000000 		.4byte	.LVL55
 6178 0232 0100     		.2byte	0x1
 6179 0234 56       		.byte	0x56
 6180 0235 74000000 		.4byte	.LVL55
 6181 0239 7A000000 		.4byte	.LFE89
 6182 023d 0400     		.2byte	0x4
 6183 023f F3       		.byte	0xf3
 6184 0240 01       		.uleb128 0x1
 6185 0241 51       		.byte	0x51
 6186 0242 9F       		.byte	0x9f
 6187 0243 00000000 		.4byte	0
 6188 0247 00000000 		.4byte	0
 6189              	.LLST15:
 6190 024b 00000000 		.4byte	.LVL35
 6191 024f 14000000 		.4byte	.LVL38
 6192 0253 0100     		.2byte	0x1
 6193 0255 52       		.byte	0x52
 6194 0256 14000000 		.4byte	.LVL38
 6195 025a 7A000000 		.4byte	.LFE89
 6196 025e 0400     		.2byte	0x4
 6197 0260 F3       		.byte	0xf3
 6198 0261 01       		.uleb128 0x1
 6199 0262 52       		.byte	0x52
 6200 0263 9F       		.byte	0x9f
 6201 0264 00000000 		.4byte	0
 6202 0268 00000000 		.4byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 132


 6203              	.LLST16:
 6204 026c 1A000000 		.4byte	.LVL39
 6205 0270 40000000 		.4byte	.LVL44
 6206 0274 0400     		.2byte	0x4
 6207 0276 0A       		.byte	0xa
 6208 0277 D007     		.2byte	0x7d0
 6209 0279 9F       		.byte	0x9f
 6210 027a 40000000 		.4byte	.LVL44
 6211 027e 48000000 		.4byte	.LVL46
 6212 0282 0100     		.2byte	0x1
 6213 0284 54       		.byte	0x54
 6214 0285 48000000 		.4byte	.LVL46
 6215 0289 54000000 		.4byte	.LVL48
 6216 028d 0100     		.2byte	0x1
 6217 028f 57       		.byte	0x57
 6218 0290 54000000 		.4byte	.LVL48
 6219 0294 5A000000 		.4byte	.LVL49
 6220 0298 0100     		.2byte	0x1
 6221 029a 54       		.byte	0x54
 6222 029b 5A000000 		.4byte	.LVL49
 6223 029f 74000000 		.4byte	.LVL56
 6224 02a3 0100     		.2byte	0x1
 6225 02a5 57       		.byte	0x57
 6226 02a6 74000000 		.4byte	.LVL56
 6227 02aa 7A000000 		.4byte	.LFE89
 6228 02ae 0100     		.2byte	0x1
 6229 02b0 50       		.byte	0x50
 6230 02b1 00000000 		.4byte	0
 6231 02b5 00000000 		.4byte	0
 6232              	.LLST17:
 6233 02b9 60000000 		.4byte	.LVL50
 6234 02bd 6A000000 		.4byte	.LVL52
 6235 02c1 0100     		.2byte	0x1
 6236 02c3 53       		.byte	0x53
 6237 02c4 6C000000 		.4byte	.LVL53
 6238 02c8 70000000 		.4byte	.LVL54
 6239 02cc 0100     		.2byte	0x1
 6240 02ce 53       		.byte	0x53
 6241 02cf 00000000 		.4byte	0
 6242 02d3 00000000 		.4byte	0
 6243              	.LLST18:
 6244 02d7 0E000000 		.4byte	.LVL58
 6245 02db 14000000 		.4byte	.LVL59
 6246 02df 0200     		.2byte	0x2
 6247 02e1 30       		.byte	0x30
 6248 02e2 9F       		.byte	0x9f
 6249 02e3 14000000 		.4byte	.LVL59
 6250 02e7 1A000000 		.4byte	.LVL60
 6251 02eb 0100     		.2byte	0x1
 6252 02ed 53       		.byte	0x53
 6253 02ee 1C000000 		.4byte	.LVL61
 6254 02f2 24000000 		.4byte	.LVL63
 6255 02f6 0100     		.2byte	0x1
 6256 02f8 53       		.byte	0x53
 6257 02f9 26000000 		.4byte	.LVL64
 6258 02fd 2A000000 		.4byte	.LFE85
 6259 0301 0100     		.2byte	0x1
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 133


 6260 0303 50       		.byte	0x50
 6261 0304 00000000 		.4byte	0
 6262 0308 00000000 		.4byte	0
 6263              	.LLST19:
 6264 030c 0E000000 		.4byte	.LVL58
 6265 0310 14000000 		.4byte	.LVL59
 6266 0314 0200     		.2byte	0x2
 6267 0316 30       		.byte	0x30
 6268 0317 9F       		.byte	0x9f
 6269 0318 14000000 		.4byte	.LVL59
 6270 031c 2A000000 		.4byte	.LFE85
 6271 0320 0100     		.2byte	0x1
 6272 0322 52       		.byte	0x52
 6273 0323 00000000 		.4byte	0
 6274 0327 00000000 		.4byte	0
 6275              	.LLST20:
 6276 032b 00000000 		.4byte	.LVL65
 6277 032f 06000000 		.4byte	.LVL66
 6278 0333 0100     		.2byte	0x1
 6279 0335 50       		.byte	0x50
 6280 0336 06000000 		.4byte	.LVL66
 6281 033a 1C000000 		.4byte	.LFE76
 6282 033e 0400     		.2byte	0x4
 6283 0340 F3       		.byte	0xf3
 6284 0341 01       		.uleb128 0x1
 6285 0342 50       		.byte	0x50
 6286 0343 9F       		.byte	0x9f
 6287 0344 00000000 		.4byte	0
 6288 0348 00000000 		.4byte	0
 6289              	.LLST21:
 6290 034c 00000000 		.4byte	.LVL69
 6291 0350 06000000 		.4byte	.LVL70
 6292 0354 0100     		.2byte	0x1
 6293 0356 50       		.byte	0x50
 6294 0357 06000000 		.4byte	.LVL70
 6295 035b 1A000000 		.4byte	.LFE83
 6296 035f 0400     		.2byte	0x4
 6297 0361 F3       		.byte	0xf3
 6298 0362 01       		.uleb128 0x1
 6299 0363 50       		.byte	0x50
 6300 0364 9F       		.byte	0x9f
 6301 0365 00000000 		.4byte	0
 6302 0369 00000000 		.4byte	0
 6303              	.LLST22:
 6304 036d 08000000 		.4byte	.LVL71
 6305 0371 13000000 		.4byte	.LVL72-1
 6306 0375 0100     		.2byte	0x1
 6307 0377 50       		.byte	0x50
 6308 0378 00000000 		.4byte	0
 6309 037c 00000000 		.4byte	0
 6310              	.LLST23:
 6311 0380 00000000 		.4byte	.LVL73
 6312 0384 16000000 		.4byte	.LVL76
 6313 0388 0100     		.2byte	0x1
 6314 038a 50       		.byte	0x50
 6315 038b 16000000 		.4byte	.LVL76
 6316 038f 3C000000 		.4byte	.LFE77
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 134


 6317 0393 0400     		.2byte	0x4
 6318 0395 F3       		.byte	0xf3
 6319 0396 01       		.uleb128 0x1
 6320 0397 50       		.byte	0x50
 6321 0398 9F       		.byte	0x9f
 6322 0399 00000000 		.4byte	0
 6323 039d 00000000 		.4byte	0
 6324              	.LLST24:
 6325 03a1 06000000 		.4byte	.LVL74
 6326 03a5 0E000000 		.4byte	.LVL75
 6327 03a9 0100     		.2byte	0x1
 6328 03ab 53       		.byte	0x53
 6329 03ac 0E000000 		.4byte	.LVL75
 6330 03b0 1B000000 		.4byte	.LVL77-1
 6331 03b4 0200     		.2byte	0x2
 6332 03b6 71       		.byte	0x71
 6333 03b7 01       		.sleb128 1
 6334 03b8 00000000 		.4byte	0
 6335 03bc 00000000 		.4byte	0
 6336              	.LLST25:
 6337 03c0 06000000 		.4byte	.LVL74
 6338 03c4 16000000 		.4byte	.LVL76
 6339 03c8 0100     		.2byte	0x1
 6340 03ca 50       		.byte	0x50
 6341 03cb 16000000 		.4byte	.LVL76
 6342 03cf 1B000000 		.4byte	.LVL77-1
 6343 03d3 0200     		.2byte	0x2
 6344 03d5 71       		.byte	0x71
 6345 03d6 00       		.sleb128 0
 6346 03d7 1B000000 		.4byte	.LVL77-1
 6347 03db 3C000000 		.4byte	.LFE77
 6348 03df 0400     		.2byte	0x4
 6349 03e1 F3       		.byte	0xf3
 6350 03e2 01       		.uleb128 0x1
 6351 03e3 50       		.byte	0x50
 6352 03e4 9F       		.byte	0x9f
 6353 03e5 00000000 		.4byte	0
 6354 03e9 00000000 		.4byte	0
 6355              	.LLST26:
 6356 03ed 02000000 		.4byte	.LVL84
 6357 03f1 1C000000 		.4byte	.LVL86
 6358 03f5 0200     		.2byte	0x2
 6359 03f7 30       		.byte	0x30
 6360 03f8 9F       		.byte	0x9f
 6361 03f9 1C000000 		.4byte	.LVL86
 6362 03fd 1E000000 		.4byte	.LVL87
 6363 0401 0100     		.2byte	0x1
 6364 0403 50       		.byte	0x50
 6365 0404 1E000000 		.4byte	.LVL87
 6366 0408 26000000 		.4byte	.LVL89
 6367 040c 0200     		.2byte	0x2
 6368 040e 30       		.byte	0x30
 6369 040f 9F       		.byte	0x9f
 6370 0410 26000000 		.4byte	.LVL89
 6371 0414 28000000 		.4byte	.LVL90
 6372 0418 0100     		.2byte	0x1
 6373 041a 50       		.byte	0x50
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 135


 6374 041b 28000000 		.4byte	.LVL90
 6375 041f 30000000 		.4byte	.LVL92
 6376 0423 0200     		.2byte	0x2
 6377 0425 30       		.byte	0x30
 6378 0426 9F       		.byte	0x9f
 6379 0427 30000000 		.4byte	.LVL92
 6380 042b 32000000 		.4byte	.LVL93
 6381 042f 0100     		.2byte	0x1
 6382 0431 50       		.byte	0x50
 6383 0432 32000000 		.4byte	.LVL93
 6384 0436 34000000 		.4byte	.LVL94
 6385 043a 0200     		.2byte	0x2
 6386 043c 30       		.byte	0x30
 6387 043d 9F       		.byte	0x9f
 6388 043e 34000000 		.4byte	.LVL94
 6389 0442 3C000000 		.4byte	.LFE38
 6390 0446 0100     		.2byte	0x1
 6391 0448 50       		.byte	0x50
 6392 0449 00000000 		.4byte	0
 6393 044d 00000000 		.4byte	0
 6394              	.LLST27:
 6395 0451 02000000 		.4byte	.LVL96
 6396 0455 28000000 		.4byte	.LVL99
 6397 0459 0200     		.2byte	0x2
 6398 045b 30       		.byte	0x30
 6399 045c 9F       		.byte	0x9f
 6400 045d 28000000 		.4byte	.LVL99
 6401 0461 2A000000 		.4byte	.LVL100
 6402 0465 0100     		.2byte	0x1
 6403 0467 50       		.byte	0x50
 6404 0468 2A000000 		.4byte	.LVL100
 6405 046c 30000000 		.4byte	.LVL101
 6406 0470 0200     		.2byte	0x2
 6407 0472 30       		.byte	0x30
 6408 0473 9F       		.byte	0x9f
 6409 0474 30000000 		.4byte	.LVL101
 6410 0478 32000000 		.4byte	.LVL102
 6411 047c 0100     		.2byte	0x1
 6412 047e 50       		.byte	0x50
 6413 047f 32000000 		.4byte	.LVL102
 6414 0483 38000000 		.4byte	.LVL103
 6415 0487 0200     		.2byte	0x2
 6416 0489 30       		.byte	0x30
 6417 048a 9F       		.byte	0x9f
 6418 048b 38000000 		.4byte	.LVL103
 6419 048f 3A000000 		.4byte	.LVL104
 6420 0493 0100     		.2byte	0x1
 6421 0495 50       		.byte	0x50
 6422 0496 3A000000 		.4byte	.LVL104
 6423 049a 40000000 		.4byte	.LVL105
 6424 049e 0200     		.2byte	0x2
 6425 04a0 30       		.byte	0x30
 6426 04a1 9F       		.byte	0x9f
 6427 04a2 40000000 		.4byte	.LVL105
 6428 04a6 42000000 		.4byte	.LVL106
 6429 04aa 0100     		.2byte	0x1
 6430 04ac 50       		.byte	0x50
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 136


 6431 04ad 42000000 		.4byte	.LVL106
 6432 04b1 48000000 		.4byte	.LVL107
 6433 04b5 0200     		.2byte	0x2
 6434 04b7 30       		.byte	0x30
 6435 04b8 9F       		.byte	0x9f
 6436 04b9 48000000 		.4byte	.LVL107
 6437 04bd 4A000000 		.4byte	.LVL108
 6438 04c1 0100     		.2byte	0x1
 6439 04c3 50       		.byte	0x50
 6440 04c4 4A000000 		.4byte	.LVL108
 6441 04c8 50000000 		.4byte	.LVL109
 6442 04cc 0200     		.2byte	0x2
 6443 04ce 30       		.byte	0x30
 6444 04cf 9F       		.byte	0x9f
 6445 04d0 50000000 		.4byte	.LVL109
 6446 04d4 52000000 		.4byte	.LVL110
 6447 04d8 0100     		.2byte	0x1
 6448 04da 50       		.byte	0x50
 6449 04db 52000000 		.4byte	.LVL110
 6450 04df 58000000 		.4byte	.LVL111
 6451 04e3 0200     		.2byte	0x2
 6452 04e5 30       		.byte	0x30
 6453 04e6 9F       		.byte	0x9f
 6454 04e7 58000000 		.4byte	.LVL111
 6455 04eb 5A000000 		.4byte	.LVL112
 6456 04ef 0100     		.2byte	0x1
 6457 04f1 50       		.byte	0x50
 6458 04f2 5A000000 		.4byte	.LVL112
 6459 04f6 5C000000 		.4byte	.LVL113
 6460 04fa 0200     		.2byte	0x2
 6461 04fc 30       		.byte	0x30
 6462 04fd 9F       		.byte	0x9f
 6463 04fe 00000000 		.4byte	0
 6464 0502 00000000 		.4byte	0
 6465              	.LLST28:
 6466 0506 02000000 		.4byte	.LVL116
 6467 050a 16000000 		.4byte	.LVL117
 6468 050e 0200     		.2byte	0x2
 6469 0510 30       		.byte	0x30
 6470 0511 9F       		.byte	0x9f
 6471 0512 16000000 		.4byte	.LVL117
 6472 0516 18000000 		.4byte	.LVL118
 6473 051a 0100     		.2byte	0x1
 6474 051c 50       		.byte	0x50
 6475 051d 18000000 		.4byte	.LVL118
 6476 0521 1E000000 		.4byte	.LVL119
 6477 0525 0200     		.2byte	0x2
 6478 0527 30       		.byte	0x30
 6479 0528 9F       		.byte	0x9f
 6480 0529 1E000000 		.4byte	.LVL119
 6481 052d 20000000 		.4byte	.LVL120
 6482 0531 0100     		.2byte	0x1
 6483 0533 50       		.byte	0x50
 6484 0534 20000000 		.4byte	.LVL120
 6485 0538 22000000 		.4byte	.LVL121
 6486 053c 0200     		.2byte	0x2
 6487 053e 30       		.byte	0x30
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 137


 6488 053f 9F       		.byte	0x9f
 6489 0540 22000000 		.4byte	.LVL121
 6490 0544 28000000 		.4byte	.LFE43
 6491 0548 0100     		.2byte	0x1
 6492 054a 50       		.byte	0x50
 6493 054b 00000000 		.4byte	0
 6494 054f 00000000 		.4byte	0
 6495              	.LLST29:
 6496 0553 08000000 		.4byte	.LVL123
 6497 0557 0E000000 		.4byte	.LVL125
 6498 055b 0100     		.2byte	0x1
 6499 055d 50       		.byte	0x50
 6500 055e 00000000 		.4byte	0
 6501 0562 00000000 		.4byte	0
 6502              	.LLST30:
 6503 0566 0E000000 		.4byte	.LVL125
 6504 056a 18000000 		.4byte	.LVL126
 6505 056e 0100     		.2byte	0x1
 6506 0570 50       		.byte	0x50
 6507 0571 00000000 		.4byte	0
 6508 0575 00000000 		.4byte	0
 6509              	.LLST31:
 6510 0579 02000000 		.4byte	.LVL128
 6511 057d 16000000 		.4byte	.LVL129
 6512 0581 0200     		.2byte	0x2
 6513 0583 30       		.byte	0x30
 6514 0584 9F       		.byte	0x9f
 6515 0585 16000000 		.4byte	.LVL129
 6516 0589 18000000 		.4byte	.LVL130
 6517 058d 0100     		.2byte	0x1
 6518 058f 50       		.byte	0x50
 6519 0590 18000000 		.4byte	.LVL130
 6520 0594 1E000000 		.4byte	.LVL131
 6521 0598 0200     		.2byte	0x2
 6522 059a 30       		.byte	0x30
 6523 059b 9F       		.byte	0x9f
 6524 059c 1E000000 		.4byte	.LVL131
 6525 05a0 20000000 		.4byte	.LVL132
 6526 05a4 0100     		.2byte	0x1
 6527 05a6 50       		.byte	0x50
 6528 05a7 20000000 		.4byte	.LVL132
 6529 05ab 22000000 		.4byte	.LVL133
 6530 05af 0200     		.2byte	0x2
 6531 05b1 30       		.byte	0x30
 6532 05b2 9F       		.byte	0x9f
 6533 05b3 22000000 		.4byte	.LVL133
 6534 05b7 28000000 		.4byte	.LFE47
 6535 05bb 0100     		.2byte	0x1
 6536 05bd 50       		.byte	0x50
 6537 05be 00000000 		.4byte	0
 6538 05c2 00000000 		.4byte	0
 6539              	.LLST32:
 6540 05c6 06000000 		.4byte	.LVL134
 6541 05ca 0C000000 		.4byte	.LVL135
 6542 05ce 0100     		.2byte	0x1
 6543 05d0 50       		.byte	0x50
 6544 05d1 00000000 		.4byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 138


 6545 05d5 00000000 		.4byte	0
 6546              	.LLST33:
 6547 05d9 06000000 		.4byte	.LVL136
 6548 05dd 0A000000 		.4byte	.LVL137
 6549 05e1 0100     		.2byte	0x1
 6550 05e3 50       		.byte	0x50
 6551 05e4 00000000 		.4byte	0
 6552 05e8 00000000 		.4byte	0
 6553              	.LLST34:
 6554 05ec 02000000 		.4byte	.LVL140
 6555 05f0 0A000000 		.4byte	.LVL142
 6556 05f4 0200     		.2byte	0x2
 6557 05f6 30       		.byte	0x30
 6558 05f7 9F       		.byte	0x9f
 6559 05f8 0A000000 		.4byte	.LVL142
 6560 05fc 12000000 		.4byte	.LVL143
 6561 0600 0100     		.2byte	0x1
 6562 0602 50       		.byte	0x50
 6563 0603 14000000 		.4byte	.LVL144
 6564 0607 16000000 		.4byte	.LVL145
 6565 060b 0100     		.2byte	0x1
 6566 060d 50       		.byte	0x50
 6567 060e 00000000 		.4byte	0
 6568 0612 00000000 		.4byte	0
 6569              	.LLST35:
 6570 0616 06000000 		.4byte	.LVL149
 6571 061a 0A000000 		.4byte	.LVL150
 6572 061e 0100     		.2byte	0x1
 6573 0620 50       		.byte	0x50
 6574 0621 00000000 		.4byte	0
 6575 0625 00000000 		.4byte	0
 6576              	.LLST36:
 6577 0629 06000000 		.4byte	.LVL151
 6578 062d 0A000000 		.4byte	.LVL152
 6579 0631 0100     		.2byte	0x1
 6580 0633 50       		.byte	0x50
 6581 0634 00000000 		.4byte	0
 6582 0638 00000000 		.4byte	0
 6583              	.LLST37:
 6584 063c 14000000 		.4byte	.LVL154
 6585 0640 1E000000 		.4byte	.LVL156
 6586 0644 0100     		.2byte	0x1
 6587 0646 54       		.byte	0x54
 6588 0647 22000000 		.4byte	.LVL157
 6589 064b 26000000 		.4byte	.LVL158
 6590 064f 0100     		.2byte	0x1
 6591 0651 52       		.byte	0x52
 6592 0652 26000000 		.4byte	.LVL158
 6593 0656 48000000 		.4byte	.LVL161
 6594 065a 0100     		.2byte	0x1
 6595 065c 54       		.byte	0x54
 6596 065d 50000000 		.4byte	.LVL163
 6597 0661 56000000 		.4byte	.LVL164
 6598 0665 0100     		.2byte	0x1
 6599 0667 54       		.byte	0x54
 6600 0668 00000000 		.4byte	0
 6601 066c 00000000 		.4byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 139


 6602              	.LLST38:
 6603 0670 06000000 		.4byte	.LVL166
 6604 0674 0C000000 		.4byte	.LVL167
 6605 0678 0100     		.2byte	0x1
 6606 067a 50       		.byte	0x50
 6607 067b 00000000 		.4byte	0
 6608 067f 00000000 		.4byte	0
 6609              	.LLST39:
 6610 0683 2E000000 		.4byte	.LVL171
 6611 0687 38000000 		.4byte	.LVL173
 6612 068b 0100     		.2byte	0x1
 6613 068d 54       		.byte	0x54
 6614 068e 3C000000 		.4byte	.LVL174
 6615 0692 40000000 		.4byte	.LVL175
 6616 0696 0100     		.2byte	0x1
 6617 0698 52       		.byte	0x52
 6618 0699 40000000 		.4byte	.LVL175
 6619 069d 58000000 		.4byte	.LVL177
 6620 06a1 0100     		.2byte	0x1
 6621 06a3 54       		.byte	0x54
 6622 06a4 00000000 		.4byte	0
 6623 06a8 00000000 		.4byte	0
 6624              	.LLST40:
 6625 06ac 00000000 		.4byte	.LVL178
 6626 06b0 0C000000 		.4byte	.LVL179
 6627 06b4 0100     		.2byte	0x1
 6628 06b6 50       		.byte	0x50
 6629 06b7 0C000000 		.4byte	.LVL179
 6630 06bb B8000000 		.4byte	.LFE88
 6631 06bf 0400     		.2byte	0x4
 6632 06c1 F3       		.byte	0xf3
 6633 06c2 01       		.uleb128 0x1
 6634 06c3 50       		.byte	0x50
 6635 06c4 9F       		.byte	0x9f
 6636 06c5 00000000 		.4byte	0
 6637 06c9 00000000 		.4byte	0
 6638              	.LLST41:
 6639 06cd 00000000 		.4byte	.LVL178
 6640 06d1 0F000000 		.4byte	.LVL180-1
 6641 06d5 0100     		.2byte	0x1
 6642 06d7 51       		.byte	0x51
 6643 06d8 0F000000 		.4byte	.LVL180-1
 6644 06dc B8000000 		.4byte	.LFE88
 6645 06e0 0400     		.2byte	0x4
 6646 06e2 F3       		.byte	0xf3
 6647 06e3 01       		.uleb128 0x1
 6648 06e4 51       		.byte	0x51
 6649 06e5 9F       		.byte	0x9f
 6650 06e6 00000000 		.4byte	0
 6651 06ea 00000000 		.4byte	0
 6652              	.LLST42:
 6653 06ee 00000000 		.4byte	.LVL178
 6654 06f2 0F000000 		.4byte	.LVL180-1
 6655 06f6 0100     		.2byte	0x1
 6656 06f8 52       		.byte	0x52
 6657 06f9 0F000000 		.4byte	.LVL180-1
 6658 06fd 96000000 		.4byte	.LVL199
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 140


 6659 0701 0100     		.2byte	0x1
 6660 0703 57       		.byte	0x57
 6661 0704 96000000 		.4byte	.LVL199
 6662 0708 B8000000 		.4byte	.LFE88
 6663 070c 0400     		.2byte	0x4
 6664 070e F3       		.byte	0xf3
 6665 070f 01       		.uleb128 0x1
 6666 0710 52       		.byte	0x52
 6667 0711 9F       		.byte	0x9f
 6668 0712 00000000 		.4byte	0
 6669 0716 00000000 		.4byte	0
 6670              	.LLST43:
 6671 071a 00000000 		.4byte	.LVL178
 6672 071e 0F000000 		.4byte	.LVL180-1
 6673 0722 0100     		.2byte	0x1
 6674 0724 53       		.byte	0x53
 6675 0725 0F000000 		.4byte	.LVL180-1
 6676 0729 B8000000 		.4byte	.LFE88
 6677 072d 0400     		.2byte	0x4
 6678 072f F3       		.byte	0xf3
 6679 0730 01       		.uleb128 0x1
 6680 0731 53       		.byte	0x53
 6681 0732 9F       		.byte	0x9f
 6682 0733 00000000 		.4byte	0
 6683 0737 00000000 		.4byte	0
 6684              	.LLST44:
 6685 073b 52000000 		.4byte	.LVL188
 6686 073f 56000000 		.4byte	.LVL189
 6687 0743 0200     		.2byte	0x2
 6688 0745 30       		.byte	0x30
 6689 0746 9F       		.byte	0x9f
 6690 0747 56000000 		.4byte	.LVL189
 6691 074b 94000000 		.4byte	.LVL198
 6692 074f 0100     		.2byte	0x1
 6693 0751 54       		.byte	0x54
 6694 0752 00000000 		.4byte	0
 6695 0756 00000000 		.4byte	0
 6696              	.LLST45:
 6697 075a 74000000 		.4byte	.LVL193
 6698 075e 77000000 		.4byte	.LVL194-1
 6699 0762 0100     		.2byte	0x1
 6700 0764 50       		.byte	0x50
 6701 0765 00000000 		.4byte	0
 6702 0769 00000000 		.4byte	0
 6703              	.LLST46:
 6704 076d 00000000 		.4byte	.LVL200
 6705 0771 0E000000 		.4byte	.LVL202
 6706 0775 0100     		.2byte	0x1
 6707 0777 50       		.byte	0x50
 6708 0778 0E000000 		.4byte	.LVL202
 6709 077c 1A000000 		.4byte	.LFE35
 6710 0780 0400     		.2byte	0x4
 6711 0782 F3       		.byte	0xf3
 6712 0783 01       		.uleb128 0x1
 6713 0784 50       		.byte	0x50
 6714 0785 9F       		.byte	0x9f
 6715 0786 00000000 		.4byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 141


 6716 078a 00000000 		.4byte	0
 6717              	.LLST47:
 6718 078e 06000000 		.4byte	.LVL201
 6719 0792 12000000 		.4byte	.LVL203
 6720 0796 0100     		.2byte	0x1
 6721 0798 53       		.byte	0x53
 6722 0799 12000000 		.4byte	.LVL203
 6723 079d 15000000 		.4byte	.LVL204-1
 6724 07a1 0200     		.2byte	0x2
 6725 07a3 72       		.byte	0x72
 6726 07a4 00       		.sleb128 0
 6727 07a5 00000000 		.4byte	0
 6728 07a9 00000000 		.4byte	0
 6729              	.LLST48:
 6730 07ad 06000000 		.4byte	.LVL201
 6731 07b1 0E000000 		.4byte	.LVL202
 6732 07b5 0100     		.2byte	0x1
 6733 07b7 50       		.byte	0x50
 6734 07b8 0E000000 		.4byte	.LVL202
 6735 07bc 15000000 		.4byte	.LVL204-1
 6736 07c0 0200     		.2byte	0x2
 6737 07c2 72       		.byte	0x72
 6738 07c3 01       		.sleb128 1
 6739 07c4 15000000 		.4byte	.LVL204-1
 6740 07c8 1A000000 		.4byte	.LFE35
 6741 07cc 0400     		.2byte	0x4
 6742 07ce F3       		.byte	0xf3
 6743 07cf 01       		.uleb128 0x1
 6744 07d0 50       		.byte	0x50
 6745 07d1 9F       		.byte	0x9f
 6746 07d2 00000000 		.4byte	0
 6747 07d6 00000000 		.4byte	0
 6748              	.LLST49:
 6749 07da 00000000 		.4byte	.LVL205
 6750 07de 0E000000 		.4byte	.LVL207
 6751 07e2 0100     		.2byte	0x1
 6752 07e4 50       		.byte	0x50
 6753 07e5 0E000000 		.4byte	.LVL207
 6754 07e9 1A000000 		.4byte	.LFE74
 6755 07ed 0400     		.2byte	0x4
 6756 07ef F3       		.byte	0xf3
 6757 07f0 01       		.uleb128 0x1
 6758 07f1 50       		.byte	0x50
 6759 07f2 9F       		.byte	0x9f
 6760 07f3 00000000 		.4byte	0
 6761 07f7 00000000 		.4byte	0
 6762              	.LLST50:
 6763 07fb 06000000 		.4byte	.LVL206
 6764 07ff 12000000 		.4byte	.LVL208
 6765 0803 0100     		.2byte	0x1
 6766 0805 53       		.byte	0x53
 6767 0806 12000000 		.4byte	.LVL208
 6768 080a 15000000 		.4byte	.LVL209-1
 6769 080e 0200     		.2byte	0x2
 6770 0810 72       		.byte	0x72
 6771 0811 00       		.sleb128 0
 6772 0812 00000000 		.4byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 142


 6773 0816 00000000 		.4byte	0
 6774              	.LLST51:
 6775 081a 06000000 		.4byte	.LVL206
 6776 081e 0E000000 		.4byte	.LVL207
 6777 0822 0100     		.2byte	0x1
 6778 0824 50       		.byte	0x50
 6779 0825 0E000000 		.4byte	.LVL207
 6780 0829 15000000 		.4byte	.LVL209-1
 6781 082d 0200     		.2byte	0x2
 6782 082f 72       		.byte	0x72
 6783 0830 01       		.sleb128 1
 6784 0831 15000000 		.4byte	.LVL209-1
 6785 0835 1A000000 		.4byte	.LFE74
 6786 0839 0400     		.2byte	0x4
 6787 083b F3       		.byte	0xf3
 6788 083c 01       		.uleb128 0x1
 6789 083d 50       		.byte	0x50
 6790 083e 9F       		.byte	0x9f
 6791 083f 00000000 		.4byte	0
 6792 0843 00000000 		.4byte	0
 6793              	.LLST52:
 6794 0847 00000000 		.4byte	.LVL210
 6795 084b 07000000 		.4byte	.LVL211-1
 6796 084f 0100     		.2byte	0x1
 6797 0851 50       		.byte	0x50
 6798 0852 07000000 		.4byte	.LVL211-1
 6799 0856 3C000000 		.4byte	.LFE49
 6800 085a 0400     		.2byte	0x4
 6801 085c F3       		.byte	0xf3
 6802 085d 01       		.uleb128 0x1
 6803 085e 50       		.byte	0x50
 6804 085f 9F       		.byte	0x9f
 6805 0860 00000000 		.4byte	0
 6806 0864 00000000 		.4byte	0
 6807              	.LLST53:
 6808 0868 08000000 		.4byte	.LVL211
 6809 086c 22000000 		.4byte	.LVL213
 6810 0870 0100     		.2byte	0x1
 6811 0872 50       		.byte	0x50
 6812 0873 26000000 		.4byte	.LVL215
 6813 0877 2A000000 		.4byte	.LVL216
 6814 087b 0100     		.2byte	0x1
 6815 087d 50       		.byte	0x50
 6816 087e 30000000 		.4byte	.LVL218
 6817 0882 32000000 		.4byte	.LVL219
 6818 0886 0100     		.2byte	0x1
 6819 0888 50       		.byte	0x50
 6820 0889 34000000 		.4byte	.LVL220
 6821 088d 36000000 		.4byte	.LVL221
 6822 0891 0100     		.2byte	0x1
 6823 0893 50       		.byte	0x50
 6824 0894 00000000 		.4byte	0
 6825 0898 00000000 		.4byte	0
 6826              	.LLST54:
 6827 089c 18000000 		.4byte	.LVL212
 6828 08a0 22000000 		.4byte	.LVL213
 6829 08a4 0100     		.2byte	0x1
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 143


 6830 08a6 50       		.byte	0x50
 6831 08a7 24000000 		.4byte	.LVL214
 6832 08ab 2D000000 		.4byte	.LVL217-1
 6833 08af 0100     		.2byte	0x1
 6834 08b1 50       		.byte	0x50
 6835 08b2 00000000 		.4byte	0
 6836 08b6 00000000 		.4byte	0
 6837              	.LLST55:
 6838 08ba 00000000 		.4byte	.LVL222
 6839 08be 07000000 		.4byte	.LVL223-1
 6840 08c2 0100     		.2byte	0x1
 6841 08c4 50       		.byte	0x50
 6842 08c5 07000000 		.4byte	.LVL223-1
 6843 08c9 3C000000 		.4byte	.LFE51
 6844 08cd 0400     		.2byte	0x4
 6845 08cf F3       		.byte	0xf3
 6846 08d0 01       		.uleb128 0x1
 6847 08d1 50       		.byte	0x50
 6848 08d2 9F       		.byte	0x9f
 6849 08d3 00000000 		.4byte	0
 6850 08d7 00000000 		.4byte	0
 6851              	.LLST56:
 6852 08db 08000000 		.4byte	.LVL223
 6853 08df 20000000 		.4byte	.LVL225
 6854 08e3 0100     		.2byte	0x1
 6855 08e5 50       		.byte	0x50
 6856 08e6 24000000 		.4byte	.LVL227
 6857 08ea 28000000 		.4byte	.LVL228
 6858 08ee 0100     		.2byte	0x1
 6859 08f0 50       		.byte	0x50
 6860 08f1 2E000000 		.4byte	.LVL230
 6861 08f5 30000000 		.4byte	.LVL231
 6862 08f9 0100     		.2byte	0x1
 6863 08fb 50       		.byte	0x50
 6864 08fc 32000000 		.4byte	.LVL232
 6865 0900 34000000 		.4byte	.LVL233
 6866 0904 0100     		.2byte	0x1
 6867 0906 50       		.byte	0x50
 6868 0907 00000000 		.4byte	0
 6869 090b 00000000 		.4byte	0
 6870              	.LLST57:
 6871 090f 18000000 		.4byte	.LVL224
 6872 0913 20000000 		.4byte	.LVL225
 6873 0917 0100     		.2byte	0x1
 6874 0919 50       		.byte	0x50
 6875 091a 22000000 		.4byte	.LVL226
 6876 091e 2B000000 		.4byte	.LVL229-1
 6877 0922 0100     		.2byte	0x1
 6878 0924 50       		.byte	0x50
 6879 0925 00000000 		.4byte	0
 6880 0929 00000000 		.4byte	0
 6881              	.LLST58:
 6882 092d 00000000 		.4byte	.LVL234
 6883 0931 1E000000 		.4byte	.LVL235
 6884 0935 0100     		.2byte	0x1
 6885 0937 50       		.byte	0x50
 6886 0938 1E000000 		.4byte	.LVL235
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 144


 6887 093c 2A000000 		.4byte	.LFE54
 6888 0940 0400     		.2byte	0x4
 6889 0942 F3       		.byte	0xf3
 6890 0943 01       		.uleb128 0x1
 6891 0944 50       		.byte	0x50
 6892 0945 9F       		.byte	0x9f
 6893 0946 00000000 		.4byte	0
 6894 094a 00000000 		.4byte	0
 6895              	.LLST59:
 6896 094e 00000000 		.4byte	.LVL234
 6897 0952 20000000 		.4byte	.LVL236
 6898 0956 0100     		.2byte	0x1
 6899 0958 51       		.byte	0x51
 6900 0959 20000000 		.4byte	.LVL236
 6901 095d 2A000000 		.4byte	.LFE54
 6902 0961 0400     		.2byte	0x4
 6903 0963 F3       		.byte	0xf3
 6904 0964 01       		.uleb128 0x1
 6905 0965 51       		.byte	0x51
 6906 0966 9F       		.byte	0x9f
 6907 0967 00000000 		.4byte	0
 6908 096b 00000000 		.4byte	0
 6909              	.LLST60:
 6910 096f 00000000 		.4byte	.LVL238
 6911 0973 1E000000 		.4byte	.LVL239
 6912 0977 0100     		.2byte	0x1
 6913 0979 50       		.byte	0x50
 6914 097a 1E000000 		.4byte	.LVL239
 6915 097e 2A000000 		.4byte	.LFE57
 6916 0982 0400     		.2byte	0x4
 6917 0984 F3       		.byte	0xf3
 6918 0985 01       		.uleb128 0x1
 6919 0986 50       		.byte	0x50
 6920 0987 9F       		.byte	0x9f
 6921 0988 00000000 		.4byte	0
 6922 098c 00000000 		.4byte	0
 6923              	.LLST61:
 6924 0990 00000000 		.4byte	.LVL238
 6925 0994 20000000 		.4byte	.LVL240
 6926 0998 0100     		.2byte	0x1
 6927 099a 51       		.byte	0x51
 6928 099b 20000000 		.4byte	.LVL240
 6929 099f 2A000000 		.4byte	.LFE57
 6930 09a3 0400     		.2byte	0x4
 6931 09a5 F3       		.byte	0xf3
 6932 09a6 01       		.uleb128 0x1
 6933 09a7 51       		.byte	0x51
 6934 09a8 9F       		.byte	0x9f
 6935 09a9 00000000 		.4byte	0
 6936 09ad 00000000 		.4byte	0
 6937              	.LLST62:
 6938 09b1 00000000 		.4byte	.LVL242
 6939 09b5 14000000 		.4byte	.LVL243
 6940 09b9 0100     		.2byte	0x1
 6941 09bb 50       		.byte	0x50
 6942 09bc 14000000 		.4byte	.LVL243
 6943 09c0 20000000 		.4byte	.LFE61
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 145


 6944 09c4 0400     		.2byte	0x4
 6945 09c6 F3       		.byte	0xf3
 6946 09c7 01       		.uleb128 0x1
 6947 09c8 50       		.byte	0x50
 6948 09c9 9F       		.byte	0x9f
 6949 09ca 00000000 		.4byte	0
 6950 09ce 00000000 		.4byte	0
 6951              	.LLST63:
 6952 09d2 00000000 		.4byte	.LVL245
 6953 09d6 17000000 		.4byte	.LVL247-1
 6954 09da 0100     		.2byte	0x1
 6955 09dc 50       		.byte	0x50
 6956 09dd 17000000 		.4byte	.LVL247-1
 6957 09e1 64000000 		.4byte	.LFE87
 6958 09e5 0400     		.2byte	0x4
 6959 09e7 F3       		.byte	0xf3
 6960 09e8 01       		.uleb128 0x1
 6961 09e9 50       		.byte	0x50
 6962 09ea 9F       		.byte	0x9f
 6963 09eb 00000000 		.4byte	0
 6964 09ef 00000000 		.4byte	0
 6965              	.LLST64:
 6966 09f3 00000000 		.4byte	.LVL245
 6967 09f7 17000000 		.4byte	.LVL247-1
 6968 09fb 0100     		.2byte	0x1
 6969 09fd 51       		.byte	0x51
 6970 09fe 17000000 		.4byte	.LVL247-1
 6971 0a02 64000000 		.4byte	.LFE87
 6972 0a06 0400     		.2byte	0x4
 6973 0a08 F3       		.byte	0xf3
 6974 0a09 01       		.uleb128 0x1
 6975 0a0a 51       		.byte	0x51
 6976 0a0b 9F       		.byte	0x9f
 6977 0a0c 00000000 		.4byte	0
 6978 0a10 00000000 		.4byte	0
 6979              	.LLST65:
 6980 0a14 06000000 		.4byte	.LVL246
 6981 0a18 42000000 		.4byte	.LVL254
 6982 0a1c 0200     		.2byte	0x2
 6983 0a1e 30       		.byte	0x30
 6984 0a1f 9F       		.byte	0x9f
 6985 0a20 42000000 		.4byte	.LVL254
 6986 0a24 52000000 		.4byte	.LVL256
 6987 0a28 0100     		.2byte	0x1
 6988 0a2a 54       		.byte	0x54
 6989 0a2b 52000000 		.4byte	.LVL256
 6990 0a2f 58000000 		.4byte	.LVL257
 6991 0a33 0200     		.2byte	0x2
 6992 0a35 30       		.byte	0x30
 6993 0a36 9F       		.byte	0x9f
 6994 0a37 00000000 		.4byte	0
 6995 0a3b 00000000 		.4byte	0
 6996              		.section	.debug_aranges,"",%progbits
 6997 0000 DC010000 		.4byte	0x1dc
 6998 0004 0200     		.2byte	0x2
 6999 0006 00000000 		.4byte	.Ldebug_info0
 7000 000a 04       		.byte	0x4
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 146


 7001 000b 00       		.byte	0
 7002 000c 0000     		.2byte	0
 7003 000e 0000     		.2byte	0
 7004 0010 00000000 		.4byte	.LFB90
 7005 0014 2E000000 		.4byte	.LFE90-.LFB90
 7006 0018 00000000 		.4byte	.LFB79
 7007 001c 18000000 		.4byte	.LFE79-.LFB79
 7008 0020 00000000 		.4byte	.LFB80
 7009 0024 16000000 		.4byte	.LFE80-.LFB80
 7010 0028 00000000 		.4byte	.LFB81
 7011 002c 16000000 		.4byte	.LFE81-.LFB81
 7012 0030 00000000 		.4byte	.LFB84
 7013 0034 1A000000 		.4byte	.LFE84-.LFB84
 7014 0038 00000000 		.4byte	.LFB86
 7015 003c 16000000 		.4byte	.LFE86-.LFB86
 7016 0040 00000000 		.4byte	.LFB78
 7017 0044 1E000000 		.4byte	.LFE78-.LFB78
 7018 0048 00000000 		.4byte	.LFB75
 7019 004c 0A000000 		.4byte	.LFE75-.LFB75
 7020 0050 00000000 		.4byte	.LFB89
 7021 0054 7A000000 		.4byte	.LFE89-.LFB89
 7022 0058 00000000 		.4byte	.LFB82
 7023 005c 18000000 		.4byte	.LFE82-.LFB82
 7024 0060 00000000 		.4byte	.LFB85
 7025 0064 2A000000 		.4byte	.LFE85-.LFB85
 7026 0068 00000000 		.4byte	.LFB76
 7027 006c 1C000000 		.4byte	.LFE76-.LFB76
 7028 0070 00000000 		.4byte	.LFB73
 7029 0074 0A000000 		.4byte	.LFE73-.LFB73
 7030 0078 00000000 		.4byte	.LFB83
 7031 007c 1A000000 		.4byte	.LFE83-.LFB83
 7032 0080 00000000 		.4byte	.LFB77
 7033 0084 3C000000 		.4byte	.LFE77-.LFB77
 7034 0088 00000000 		.4byte	.LFB72
 7035 008c 18000000 		.4byte	.LFE72-.LFB72
 7036 0090 00000000 		.4byte	.LFB71
 7037 0094 0A000000 		.4byte	.LFE71-.LFB71
 7038 0098 00000000 		.4byte	.LFB36
 7039 009c 0A000000 		.4byte	.LFE36-.LFB36
 7040 00a0 00000000 		.4byte	.LFB37
 7041 00a4 0C000000 		.4byte	.LFE37-.LFB37
 7042 00a8 00000000 		.4byte	.LFB38
 7043 00ac 3C000000 		.4byte	.LFE38-.LFB38
 7044 00b0 00000000 		.4byte	.LFB39
 7045 00b4 0C000000 		.4byte	.LFE39-.LFB39
 7046 00b8 00000000 		.4byte	.LFB40
 7047 00bc 68000000 		.4byte	.LFE40-.LFB40
 7048 00c0 00000000 		.4byte	.LFB41
 7049 00c4 0C000000 		.4byte	.LFE41-.LFB41
 7050 00c8 00000000 		.4byte	.LFB42
 7051 00cc 0C000000 		.4byte	.LFE42-.LFB42
 7052 00d0 00000000 		.4byte	.LFB43
 7053 00d4 28000000 		.4byte	.LFE43-.LFB43
 7054 00d8 00000000 		.4byte	.LFB44
 7055 00dc 0C000000 		.4byte	.LFE44-.LFB44
 7056 00e0 00000000 		.4byte	.LFB45
 7057 00e4 20000000 		.4byte	.LFE45-.LFB45
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 147


 7058 00e8 00000000 		.4byte	.LFB46
 7059 00ec 0C000000 		.4byte	.LFE46-.LFB46
 7060 00f0 00000000 		.4byte	.LFB47
 7061 00f4 28000000 		.4byte	.LFE47-.LFB47
 7062 00f8 00000000 		.4byte	.LFB48
 7063 00fc 0E000000 		.4byte	.LFE48-.LFB48
 7064 0100 00000000 		.4byte	.LFB50
 7065 0104 0C000000 		.4byte	.LFE50-.LFB50
 7066 0108 00000000 		.4byte	.LFB62
 7067 010c 0A000000 		.4byte	.LFE62-.LFB62
 7068 0110 00000000 		.4byte	.LFB63
 7069 0114 0A000000 		.4byte	.LFE63-.LFB63
 7070 0118 00000000 		.4byte	.LFB34
 7071 011c 1C000000 		.4byte	.LFE34-.LFB34
 7072 0120 00000000 		.4byte	.LFB64
 7073 0124 0C000000 		.4byte	.LFE64-.LFB64
 7074 0128 00000000 		.4byte	.LFB66
 7075 012c 0C000000 		.4byte	.LFE66-.LFB66
 7076 0130 00000000 		.4byte	.LFB68
 7077 0134 0A000000 		.4byte	.LFE68-.LFB68
 7078 0138 00000000 		.4byte	.LFB58
 7079 013c 0C000000 		.4byte	.LFE58-.LFB58
 7080 0140 00000000 		.4byte	.LFB59
 7081 0144 0C000000 		.4byte	.LFE59-.LFB59
 7082 0148 00000000 		.4byte	.LFB67
 7083 014c 60000000 		.4byte	.LFE67-.LFB67
 7084 0150 00000000 		.4byte	.LFB69
 7085 0154 0A000000 		.4byte	.LFE69-.LFB69
 7086 0158 00000000 		.4byte	.LFB70
 7087 015c 0E000000 		.4byte	.LFE70-.LFB70
 7088 0160 00000000 		.4byte	.LFB65
 7089 0164 64000000 		.4byte	.LFE65-.LFB65
 7090 0168 00000000 		.4byte	.LFB88
 7091 016c B8000000 		.4byte	.LFE88-.LFB88
 7092 0170 00000000 		.4byte	.LFB35
 7093 0174 1A000000 		.4byte	.LFE35-.LFB35
 7094 0178 00000000 		.4byte	.LFB74
 7095 017c 1A000000 		.4byte	.LFE74-.LFB74
 7096 0180 00000000 		.4byte	.LFB49
 7097 0184 3C000000 		.4byte	.LFE49-.LFB49
 7098 0188 00000000 		.4byte	.LFB51
 7099 018c 3C000000 		.4byte	.LFE51-.LFB51
 7100 0190 00000000 		.4byte	.LFB54
 7101 0194 2A000000 		.4byte	.LFE54-.LFB54
 7102 0198 00000000 		.4byte	.LFB57
 7103 019c 2A000000 		.4byte	.LFE57-.LFB57
 7104 01a0 00000000 		.4byte	.LFB61
 7105 01a4 20000000 		.4byte	.LFE61-.LFB61
 7106 01a8 00000000 		.4byte	.LFB87
 7107 01ac 64000000 		.4byte	.LFE87-.LFB87
 7108 01b0 00000000 		.4byte	.LFB52
 7109 01b4 0C000000 		.4byte	.LFE52-.LFB52
 7110 01b8 00000000 		.4byte	.LFB53
 7111 01bc 0C000000 		.4byte	.LFE53-.LFB53
 7112 01c0 00000000 		.4byte	.LFB55
 7113 01c4 0C000000 		.4byte	.LFE55-.LFB55
 7114 01c8 00000000 		.4byte	.LFB56
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 148


 7115 01cc 0C000000 		.4byte	.LFE56-.LFB56
 7116 01d0 00000000 		.4byte	.LFB60
 7117 01d4 0C000000 		.4byte	.LFE60-.LFB60
 7118 01d8 00000000 		.4byte	0
 7119 01dc 00000000 		.4byte	0
 7120              		.section	.debug_ranges,"",%progbits
 7121              	.Ldebug_ranges0:
 7122 0000 5E000000 		.4byte	.LBB2
 7123 0004 6A000000 		.4byte	.LBE2
 7124 0008 6C000000 		.4byte	.LBB3
 7125 000c 70000000 		.4byte	.LBE3
 7126 0010 00000000 		.4byte	0
 7127 0014 00000000 		.4byte	0
 7128 0018 12000000 		.4byte	.LBB4
 7129 001c 1E000000 		.4byte	.LBE4
 7130 0020 22000000 		.4byte	.LBB5
 7131 0024 48000000 		.4byte	.LBE5
 7132 0028 54000000 		.4byte	.LBB6
 7133 002c 56000000 		.4byte	.LBE6
 7134 0030 00000000 		.4byte	0
 7135 0034 00000000 		.4byte	0
 7136 0038 2C000000 		.4byte	.LBB7
 7137 003c 38000000 		.4byte	.LBE7
 7138 0040 3C000000 		.4byte	.LBB8
 7139 0044 56000000 		.4byte	.LBE8
 7140 0048 00000000 		.4byte	0
 7141 004c 00000000 		.4byte	0
 7142 0050 00000000 		.4byte	.LFB90
 7143 0054 2E000000 		.4byte	.LFE90
 7144 0058 00000000 		.4byte	.LFB79
 7145 005c 18000000 		.4byte	.LFE79
 7146 0060 00000000 		.4byte	.LFB80
 7147 0064 16000000 		.4byte	.LFE80
 7148 0068 00000000 		.4byte	.LFB81
 7149 006c 16000000 		.4byte	.LFE81
 7150 0070 00000000 		.4byte	.LFB84
 7151 0074 1A000000 		.4byte	.LFE84
 7152 0078 00000000 		.4byte	.LFB86
 7153 007c 16000000 		.4byte	.LFE86
 7154 0080 00000000 		.4byte	.LFB78
 7155 0084 1E000000 		.4byte	.LFE78
 7156 0088 00000000 		.4byte	.LFB75
 7157 008c 0A000000 		.4byte	.LFE75
 7158 0090 00000000 		.4byte	.LFB89
 7159 0094 7A000000 		.4byte	.LFE89
 7160 0098 00000000 		.4byte	.LFB82
 7161 009c 18000000 		.4byte	.LFE82
 7162 00a0 00000000 		.4byte	.LFB85
 7163 00a4 2A000000 		.4byte	.LFE85
 7164 00a8 00000000 		.4byte	.LFB76
 7165 00ac 1C000000 		.4byte	.LFE76
 7166 00b0 00000000 		.4byte	.LFB73
 7167 00b4 0A000000 		.4byte	.LFE73
 7168 00b8 00000000 		.4byte	.LFB83
 7169 00bc 1A000000 		.4byte	.LFE83
 7170 00c0 00000000 		.4byte	.LFB77
 7171 00c4 3C000000 		.4byte	.LFE77
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 149


 7172 00c8 00000000 		.4byte	.LFB72
 7173 00cc 18000000 		.4byte	.LFE72
 7174 00d0 00000000 		.4byte	.LFB71
 7175 00d4 0A000000 		.4byte	.LFE71
 7176 00d8 00000000 		.4byte	.LFB36
 7177 00dc 0A000000 		.4byte	.LFE36
 7178 00e0 00000000 		.4byte	.LFB37
 7179 00e4 0C000000 		.4byte	.LFE37
 7180 00e8 00000000 		.4byte	.LFB38
 7181 00ec 3C000000 		.4byte	.LFE38
 7182 00f0 00000000 		.4byte	.LFB39
 7183 00f4 0C000000 		.4byte	.LFE39
 7184 00f8 00000000 		.4byte	.LFB40
 7185 00fc 68000000 		.4byte	.LFE40
 7186 0100 00000000 		.4byte	.LFB41
 7187 0104 0C000000 		.4byte	.LFE41
 7188 0108 00000000 		.4byte	.LFB42
 7189 010c 0C000000 		.4byte	.LFE42
 7190 0110 00000000 		.4byte	.LFB43
 7191 0114 28000000 		.4byte	.LFE43
 7192 0118 00000000 		.4byte	.LFB44
 7193 011c 0C000000 		.4byte	.LFE44
 7194 0120 00000000 		.4byte	.LFB45
 7195 0124 20000000 		.4byte	.LFE45
 7196 0128 00000000 		.4byte	.LFB46
 7197 012c 0C000000 		.4byte	.LFE46
 7198 0130 00000000 		.4byte	.LFB47
 7199 0134 28000000 		.4byte	.LFE47
 7200 0138 00000000 		.4byte	.LFB48
 7201 013c 0E000000 		.4byte	.LFE48
 7202 0140 00000000 		.4byte	.LFB50
 7203 0144 0C000000 		.4byte	.LFE50
 7204 0148 00000000 		.4byte	.LFB62
 7205 014c 0A000000 		.4byte	.LFE62
 7206 0150 00000000 		.4byte	.LFB63
 7207 0154 0A000000 		.4byte	.LFE63
 7208 0158 00000000 		.4byte	.LFB34
 7209 015c 1C000000 		.4byte	.LFE34
 7210 0160 00000000 		.4byte	.LFB64
 7211 0164 0C000000 		.4byte	.LFE64
 7212 0168 00000000 		.4byte	.LFB66
 7213 016c 0C000000 		.4byte	.LFE66
 7214 0170 00000000 		.4byte	.LFB68
 7215 0174 0A000000 		.4byte	.LFE68
 7216 0178 00000000 		.4byte	.LFB58
 7217 017c 0C000000 		.4byte	.LFE58
 7218 0180 00000000 		.4byte	.LFB59
 7219 0184 0C000000 		.4byte	.LFE59
 7220 0188 00000000 		.4byte	.LFB67
 7221 018c 60000000 		.4byte	.LFE67
 7222 0190 00000000 		.4byte	.LFB69
 7223 0194 0A000000 		.4byte	.LFE69
 7224 0198 00000000 		.4byte	.LFB70
 7225 019c 0E000000 		.4byte	.LFE70
 7226 01a0 00000000 		.4byte	.LFB65
 7227 01a4 64000000 		.4byte	.LFE65
 7228 01a8 00000000 		.4byte	.LFB88
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 150


 7229 01ac B8000000 		.4byte	.LFE88
 7230 01b0 00000000 		.4byte	.LFB35
 7231 01b4 1A000000 		.4byte	.LFE35
 7232 01b8 00000000 		.4byte	.LFB74
 7233 01bc 1A000000 		.4byte	.LFE74
 7234 01c0 00000000 		.4byte	.LFB49
 7235 01c4 3C000000 		.4byte	.LFE49
 7236 01c8 00000000 		.4byte	.LFB51
 7237 01cc 3C000000 		.4byte	.LFE51
 7238 01d0 00000000 		.4byte	.LFB54
 7239 01d4 2A000000 		.4byte	.LFE54
 7240 01d8 00000000 		.4byte	.LFB57
 7241 01dc 2A000000 		.4byte	.LFE57
 7242 01e0 00000000 		.4byte	.LFB61
 7243 01e4 20000000 		.4byte	.LFE61
 7244 01e8 00000000 		.4byte	.LFB87
 7245 01ec 64000000 		.4byte	.LFE87
 7246 01f0 00000000 		.4byte	.LFB52
 7247 01f4 0C000000 		.4byte	.LFE52
 7248 01f8 00000000 		.4byte	.LFB53
 7249 01fc 0C000000 		.4byte	.LFE53
 7250 0200 00000000 		.4byte	.LFB55
 7251 0204 0C000000 		.4byte	.LFE55
 7252 0208 00000000 		.4byte	.LFB56
 7253 020c 0C000000 		.4byte	.LFE56
 7254 0210 00000000 		.4byte	.LFB60
 7255 0214 0C000000 		.4byte	.LFE60
 7256 0218 00000000 		.4byte	0
 7257 021c 00000000 		.4byte	0
 7258              		.section	.debug_line,"",%progbits
 7259              	.Ldebug_line0:
 7260 0000 24070000 		.section	.debug_str,"MS",%progbits,1
 7260      0200E801 
 7260      00000201 
 7260      FB0E0D00 
 7260      01010101 
 7261              	.LASF52:
 7262 0000 626C6F63 		.ascii	"blockDataOffset\000"
 7262      6B446174 
 7262      614F6666 
 7262      73657400 
 7263              	.LASF161:
 7264 0010 43794465 		.ascii	"CyDelay\000"
 7264      6C617900 
 7265              	.LASF67:
 7266 0018 5F627566 		.ascii	"_buffer\000"
 7266      66657200 
 7267              	.LASF118:
 7268 0020 6C69706F 		.ascii	"lipo_setCapacity\000"
 7268      5F736574 
 7268      43617061 
 7268      63697479 
 7268      00
 7269              	.LASF39:
 7270 0031 736F685F 		.ascii	"soh_measure\000"
 7270      6D656173 
 7270      75726500 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 151


 7271              	.LASF28:
 7272 003d 52454D41 		.ascii	"REMAIN_F\000"
 7272      494E5F46 
 7272      00
 7273              	.LASF89:
 7274 0046 7365745F 		.ascii	"set_lipo_soh_arg\000"
 7274      6C69706F 
 7274      5F736F68 
 7274      5F617267 
 7274      00
 7275              	.LASF165:
 7276 0057 2E2E5C2E 		.ascii	"..\\..\\..\\..\\PSoC Basestation\\Battery_Babysitte"
 7276      2E5C2E2E 
 7276      5C2E2E5C 
 7276      50536F43 
 7276      20426173 
 7277 0085 725C7372 		.ascii	"r\\src\\batteryMonitor.c\000"
 7277      635C6261 
 7277      74746572 
 7277      794D6F6E 
 7277      69746F72 
 7278              	.LASF97:
 7279 009c 6C69706F 		.ascii	"lipo_GPOUTPolarity\000"
 7279      5F47504F 
 7279      5554506F 
 7279      6C617269 
 7279      747900
 7280              	.LASF49:
 7281 00af 626C6F63 		.ascii	"blockDataControl\000"
 7281      6B446174 
 7281      61436F6E 
 7281      74726F6C 
 7281      00
 7282              	.LASF99:
 7283 00c0 6C69706F 		.ascii	"lipo_GPOUTFunction\000"
 7283      5F47504F 
 7283      55544675 
 7283      6E637469 
 7283      6F6E00
 7284              	.LASF95:
 7285 00d3 6C69706F 		.ascii	"lipo_temperature\000"
 7285      5F74656D 
 7285      70657261 
 7285      74757265 
 7285      00
 7286              	.LASF158:
 7287 00e4 4932435F 		.ascii	"I2C_I2CMasterWriteByte\000"
 7287      4932434D 
 7287      61737465 
 7287      72577269 
 7287      74654279 
 7288              	.LASF11:
 7289 00fb 756E7369 		.ascii	"unsigned int\000"
 7289      676E6564 
 7289      20696E74 
 7289      00
 7290              	.LASF81:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 152


 7291 0108 7365745F 		.ascii	"set_lipo_capacity_arg\000"
 7291      6C69706F 
 7291      5F636170 
 7291      61636974 
 7291      795F6172 
 7292              	.LASF58:
 7293 011e 6373756D 		.ascii	"csum\000"
 7293      00
 7294              	.LASF116:
 7295 0123 636C6173 		.ascii	"classID\000"
 7295      73494400 
 7296              	.LASF69:
 7297 012b 626C6F63 		.ascii	"blockDataChecksum\000"
 7297      6B446174 
 7297      61436865 
 7297      636B7375 
 7297      6D00
 7298              	.LASF62:
 7299 013d 73756243 		.ascii	"subCommandLSB\000"
 7299      6F6D6D61 
 7299      6E644C53 
 7299      4200
 7300              	.LASF108:
 7301 014b 666C6167 		.ascii	"flagState\000"
 7301      53746174 
 7301      6500
 7302              	.LASF146:
 7303 0155 6C69706F 		.ascii	"lipo_sociDelta\000"
 7303      5F736F63 
 7303      6944656C 
 7303      746100
 7304              	.LASF148:
 7305 0164 5F736561 		.ascii	"_sealFlag\000"
 7305      6C466C61 
 7305      6700
 7306              	.LASF149:
 7307 016e 5F757365 		.ascii	"_userConfigControl\000"
 7307      72436F6E 
 7307      66696743 
 7307      6F6E7472 
 7307      6F6C00
 7308              	.LASF46:
 7309 0181 73756241 		.ascii	"subAddress\000"
 7309      64647265 
 7309      737300
 7310              	.LASF24:
 7311 018c 52454D41 		.ascii	"REMAIN\000"
 7311      494E00
 7312              	.LASF87:
 7313 0193 6C69706F 		.ascii	"lipo_soc\000"
 7313      5F736F63 
 7313      00
 7314              	.LASF90:
 7315 019c 6C69706F 		.ascii	"lipo_soh\000"
 7315      5F736F68 
 7315      00
 7316              	.LASF140:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 153


 7317 01a5 72657444 		.ascii	"retData\000"
 7317      61746100 
 7318              	.LASF167:
 7319 01ad 4932435F 		.ascii	"I2C_Start\000"
 7319      53746172 
 7319      7400
 7320              	.LASF106:
 7321 01b7 6C69706F 		.ascii	"lipo_flags\000"
 7321      5F666C61 
 7321      677300
 7322              	.LASF73:
 7323 01c2 72656164 		.ascii	"readBlockData\000"
 7323      426C6F63 
 7323      6B446174 
 7323      6100
 7324              	.LASF92:
 7325 01d0 736F6853 		.ascii	"sohStatus\000"
 7325      74617475 
 7325      7300
 7326              	.LASF78:
 7327 01da 7365745F 		.ascii	"set_lipo_current_arg\000"
 7327      6C69706F 
 7327      5F637572 
 7327      72656E74 
 7327      5F617267 
 7328              	.LASF57:
 7329 01ef 77726974 		.ascii	"writeBlockChecksum\000"
 7329      65426C6F 
 7329      636B4368 
 7329      65636B73 
 7329      756D00
 7330              	.LASF22:
 7331 0202 53544259 		.ascii	"STBY\000"
 7331      00
 7332              	.LASF43:
 7333 0207 534F435F 		.ascii	"SOC_INT\000"
 7333      494E5400 
 7334              	.LASF139:
 7335 020f 72656164 		.ascii	"readExtendedData\000"
 7335      45787465 
 7335      6E646564 
 7335      44617461 
 7335      00
 7336              	.LASF17:
 7337 0220 666C6F61 		.ascii	"float\000"
 7337      7400
 7338              	.LASF47:
 7339 0226 636F756E 		.ascii	"count\000"
 7339      7400
 7340              	.LASF32:
 7341 022c 44455349 		.ascii	"DESIGN\000"
 7341      474E00
 7342              	.LASF13:
 7343 0233 696E7431 		.ascii	"int16_t\000"
 7343      365F7400 
 7344              	.LASF134:
 7345 023b 74687265 		.ascii	"thresholds\000"
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 154


 7345      73686F6C 
 7345      647300
 7346              	.LASF10:
 7347 0246 6C6F6E67 		.ascii	"long long unsigned int\000"
 7347      206C6F6E 
 7347      6720756E 
 7347      7369676E 
 7347      65642069 
 7348              	.LASF125:
 7349 025d 6F70436F 		.ascii	"opConfigLSB\000"
 7349      6E666967 
 7349      4C534200 
 7350              	.LASF136:
 7351 0269 6C69706F 		.ascii	"lipo_setSOCIDelta\000"
 7351      5F736574 
 7351      534F4349 
 7351      44656C74 
 7351      6100
 7352              	.LASF23:
 7353 027b 63757272 		.ascii	"current_measure\000"
 7353      656E745F 
 7353      6D656173 
 7353      75726500 
 7354              	.LASF5:
 7355 028b 5F5F7569 		.ascii	"__uint16_t\000"
 7355      6E743136 
 7355      5F7400
 7356              	.LASF82:
 7357 0296 6C69706F 		.ascii	"lipo_capacity\000"
 7357      5F636170 
 7357      61636974 
 7357      7900
 7358              	.LASF153:
 7359 02a4 736F685F 		.ascii	"soh_measure_type\000"
 7359      6D656173 
 7359      7572655F 
 7359      74797065 
 7359      00
 7360              	.LASF79:
 7361 02b5 6C69706F 		.ascii	"lipo_current\000"
 7361      5F637572 
 7361      72656E74 
 7361      00
 7362              	.LASF150:
 7363 02c2 63757272 		.ascii	"current_measure_type\000"
 7363      656E745F 
 7363      6D656173 
 7363      7572655F 
 7363      74797065 
 7364              	.LASF34:
 7365 02d7 46494C54 		.ascii	"FILTERED\000"
 7365      45524544 
 7365      00
 7366              	.LASF123:
 7367 02e0 76616C75 		.ascii	"value\000"
 7367      6500
 7368              	.LASF119:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 155


 7369 02e6 6361704D 		.ascii	"capMSB\000"
 7369      534200
 7370              	.LASF113:
 7371 02ed 73746174 		.ascii	"stat\000"
 7371      00
 7372              	.LASF145:
 7373 02f2 6C69706F 		.ascii	"lipo_SOCFClearThreshold\000"
 7373      5F534F43 
 7373      46436C65 
 7373      61725468 
 7373      72657368 
 7374              	.LASF59:
 7375 030a 65786563 		.ascii	"executeControlWord\000"
 7375      75746543 
 7375      6F6E7472 
 7375      6F6C576F 
 7375      726400
 7376              	.LASF53:
 7377 031d 6F666673 		.ascii	"offset\000"
 7377      657400
 7378              	.LASF76:
 7379 0324 7365616C 		.ascii	"seal\000"
 7379      00
 7380              	.LASF107:
 7381 0329 6C69706F 		.ascii	"lipo_socFlag\000"
 7381      5F736F63 
 7381      466C6167 
 7381      00
 7382              	.LASF101:
 7383 0336 6C69706F 		.ascii	"lipo_deviceType\000"
 7383      5F646576 
 7383      69636554 
 7383      79706500 
 7384              	.LASF42:
 7385 0346 74656D70 		.ascii	"temp_measure\000"
 7385      5F6D6561 
 7385      73757265 
 7385      00
 7386              	.LASF84:
 7387 0353 6C69706F 		.ascii	"lipo_voltage\000"
 7387      5F766F6C 
 7387      74616765 
 7387      00
 7388              	.LASF152:
 7389 0360 736F635F 		.ascii	"soc_measure_type\000"
 7389      6D656173 
 7389      7572655F 
 7389      74797065 
 7389      00
 7390              	.LASF111:
 7391 0371 6C69706F 		.ascii	"lipo_status\000"
 7391      5F737461 
 7391      74757300 
 7392              	.LASF122:
 7393 037d 77726974 		.ascii	"writeOpConfig\000"
 7393      654F7043 
 7393      6F6E6669 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 156


 7393      6700
 7394              	.LASF54:
 7395 038b 77726974 		.ascii	"writeBlockData\000"
 7395      65426C6F 
 7395      636B4461 
 7395      746100
 7396              	.LASF151:
 7397 039a 63617061 		.ascii	"capacity_measure_type\000"
 7397      63697479 
 7397      5F6D6561 
 7397      73757265 
 7397      5F747970 
 7398              	.LASF126:
 7399 03b0 6F70436F 		.ascii	"opConfigData\000"
 7399      6E666967 
 7399      44617461 
 7399      00
 7400              	.LASF19:
 7401 03bd 63686172 		.ascii	"char\000"
 7401      00
 7402              	.LASF65:
 7403 03c2 69326352 		.ascii	"i2cReadBytes\000"
 7403      65616442 
 7403      79746573 
 7403      00
 7404              	.LASF51:
 7405 03cf 626C6F63 		.ascii	"blockDataClass\000"
 7405      6B446174 
 7405      61436C61 
 7405      737300
 7406              	.LASF147:
 7407 03de 5F646576 		.ascii	"_deviceAddress\000"
 7407      69636541 
 7407      64647265 
 7407      737300
 7408              	.LASF138:
 7409 03ed 736F6369 		.ascii	"soci\000"
 7409      00
 7410              	.LASF109:
 7411 03f2 6C69706F 		.ascii	"lipo_socfFlag\000"
 7411      5F736F63 
 7411      66466C61 
 7411      6700
 7412              	.LASF55:
 7413 0400 64617461 		.ascii	"data\000"
 7413      00
 7414              	.LASF91:
 7415 0405 736F6852 		.ascii	"sohRaw\000"
 7415      617700
 7416              	.LASF112:
 7417 040c 7365616C 		.ascii	"sealed\000"
 7417      656400
 7418              	.LASF12:
 7419 0413 75696E74 		.ascii	"uint8_t\000"
 7419      385F7400 
 7420              	.LASF162:
 7421 041b 4932435F 		.ascii	"I2C_I2CMasterSendStop\000"
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 157


 7421      4932434D 
 7421      61737465 
 7421      7253656E 
 7421      6453746F 
 7422              	.LASF61:
 7423 0431 73756243 		.ascii	"subCommandMSB\000"
 7423      6F6D6D61 
 7423      6E644D53 
 7423      4200
 7424              	.LASF142:
 7425 043f 6C69706F 		.ascii	"lipo_SOC1SetThreshold\000"
 7425      5F534F43 
 7425      31536574 
 7425      54687265 
 7425      73686F6C 
 7426              	.LASF121:
 7427 0455 63617061 		.ascii	"capacityData\000"
 7427      63697479 
 7427      44617461 
 7427      00
 7428              	.LASF117:
 7429 0462 6E657743 		.ascii	"newCsum\000"
 7429      73756D00 
 7430              	.LASF9:
 7431 046a 6C6F6E67 		.ascii	"long long int\000"
 7431      206C6F6E 
 7431      6720696E 
 7431      7400
 7432              	.LASF102:
 7433 0478 6C69706F 		.ascii	"lipo_begin\000"
 7433      5F626567 
 7433      696E00
 7434              	.LASF48:
 7435 0483 69326357 		.ascii	"i2cWriteBytes\000"
 7435      72697465 
 7435      42797465 
 7435      7300
 7436              	.LASF143:
 7437 0491 6C69706F 		.ascii	"lipo_SOC1ClearThreshold\000"
 7437      5F534F43 
 7437      31436C65 
 7437      61725468 
 7437      72657368 
 7438              	.LASF21:
 7439 04a9 626F6F6C 		.ascii	"bool\000"
 7439      00
 7440              	.LASF3:
 7441 04ae 5F5F696E 		.ascii	"__int16_t\000"
 7441      7431365F 
 7441      7400
 7442              	.LASF33:
 7443 04b8 63617061 		.ascii	"capacity_measure\000"
 7443      63697479 
 7443      5F6D6561 
 7443      73757265 
 7443      00
 7444              	.LASF30:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 158


 7445 04c9 46554C4C 		.ascii	"FULL_F\000"
 7445      5F4600
 7446              	.LASF160:
 7447 04d0 6D656D73 		.ascii	"memset\000"
 7447      657400
 7448              	.LASF45:
 7449 04d7 67706F75 		.ascii	"gpout_function\000"
 7449      745F6675 
 7449      6E637469 
 7449      6F6E00
 7450              	.LASF26:
 7451 04e6 41564149 		.ascii	"AVAIL\000"
 7451      4C00
 7452              	.LASF16:
 7453 04ec 75696E74 		.ascii	"uint32\000"
 7453      333200
 7454              	.LASF35:
 7455 04f3 554E4649 		.ascii	"UNFILTERED\000"
 7455      4C544552 
 7455      454400
 7456              	.LASF168:
 7457 04fe 73657269 		.ascii	"serial_println\000"
 7457      616C5F70 
 7457      72696E74 
 7457      6C6E00
 7458              	.LASF37:
 7459 050d 50455243 		.ascii	"PERCENT\000"
 7459      454E5400 
 7460              	.LASF36:
 7461 0515 736F635F 		.ascii	"soc_measure\000"
 7461      6D656173 
 7461      75726500 
 7462              	.LASF110:
 7463 0521 6C69706F 		.ascii	"lipo_exitConfig\000"
 7463      5F657869 
 7463      74436F6E 
 7463      66696700 
 7464              	.LASF50:
 7465 0531 656E6162 		.ascii	"enableByte\000"
 7465      6C654279 
 7465      746500
 7466              	.LASF124:
 7467 053c 6F70436F 		.ascii	"opConfigMSB\000"
 7467      6E666967 
 7467      4D534200 
 7468              	.LASF154:
 7469 0548 74656D70 		.ascii	"temp_measure_type\000"
 7469      5F6D6561 
 7469      73757265 
 7469      5F747970 
 7469      6500
 7470              	.LASF14:
 7471 055a 75696E74 		.ascii	"uint16_t\000"
 7471      31365F74 
 7471      00
 7472              	.LASF132:
 7473 0563 6C69706F 		.ascii	"lipo_setSOC1Thresholds\000"
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 159


 7473      5F736574 
 7473      534F4331 
 7473      54687265 
 7473      73686F6C 
 7474              	.LASF128:
 7475 057a 61637469 		.ascii	"activeHigh\000"
 7475      76654869 
 7475      676800
 7476              	.LASF44:
 7477 0585 4241545F 		.ascii	"BAT_LOW\000"
 7477      4C4F5700 
 7478              	.LASF100:
 7479 058d 6C69706F 		.ascii	"lipo_pulseGPOUT\000"
 7479      5F70756C 
 7479      73654750 
 7479      4F555400 
 7480              	.LASF68:
 7481 059d 74696D65 		.ascii	"timeout\000"
 7481      6F757400 
 7482              	.LASF83:
 7483 05a5 63617061 		.ascii	"capacity\000"
 7483      63697479 
 7483      00
 7484              	.LASF64:
 7485 05ae 736F6674 		.ascii	"softReset\000"
 7485      52657365 
 7485      7400
 7486              	.LASF133:
 7487 05b8 636C6561 		.ascii	"clear\000"
 7487      7200
 7488              	.LASF114:
 7489 05be 6C69706F 		.ascii	"lipo_enterConfig\000"
 7489      5F656E74 
 7489      6572436F 
 7489      6E666967 
 7489      00
 7490              	.LASF31:
 7491 05cf 46554C4C 		.ascii	"FULL_UF\000"
 7491      5F554600 
 7492              	.LASF4:
 7493 05d7 73686F72 		.ascii	"short int\000"
 7493      7420696E 
 7493      7400
 7494              	.LASF38:
 7495 05e1 534F485F 		.ascii	"SOH_STAT\000"
 7495      53544154 
 7495      00
 7496              	.LASF7:
 7497 05ea 6C6F6E67 		.ascii	"long int\000"
 7497      20696E74 
 7497      00
 7498              	.LASF94:
 7499 05f3 7365745F 		.ascii	"set_lipo_temperature_arg\000"
 7499      6C69706F 
 7499      5F74656D 
 7499      70657261 
 7499      74757265 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 160


 7500              	.LASF93:
 7501 060c 736F6850 		.ascii	"sohPercent\000"
 7501      65726365 
 7501      6E7400
 7502              	.LASF96:
 7503 0617 74656D70 		.ascii	"temp\000"
 7503      00
 7504              	.LASF40:
 7505 061c 42415454 		.ascii	"BATTERY\000"
 7505      45525900 
 7506              	.LASF164:
 7507 0624 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7507      4320342E 
 7507      392E3320 
 7507      32303135 
 7507      30333033 
 7508 0657 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 7508      20726576 
 7508      6973696F 
 7508      6E203232 
 7508      31323230 
 7509 068a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 7509      66756E63 
 7509      74696F6E 
 7509      2D736563 
 7509      74696F6E 
 7510              	.LASF25:
 7511 06b2 46554C4C 		.ascii	"FULL\000"
 7511      00
 7512              	.LASF41:
 7513 06b7 494E5445 		.ascii	"INTERNAL_TEMP\000"
 7513      524E414C 
 7513      5F54454D 
 7513      5000
 7514              	.LASF105:
 7515 06c5 7365745F 		.ascii	"set_lipo_exitConfig_arg\000"
 7515      6C69706F 
 7515      5F657869 
 7515      74436F6E 
 7515      6669675F 
 7516              	.LASF27:
 7517 06dd 41564149 		.ascii	"AVAIL_FULL\000"
 7517      4C5F4655 
 7517      4C4C00
 7518              	.LASF2:
 7519 06e8 5F5F7569 		.ascii	"__uint8_t\000"
 7519      6E74385F 
 7519      7400
 7520              	.LASF86:
 7521 06f2 7365745F 		.ascii	"set_lipo_soc_arg\000"
 7521      6C69706F 
 7521      5F736F63 
 7521      5F617267 
 7521      00
 7522              	.LASF157:
 7523 0703 4932435F 		.ascii	"I2C_I2CMasterSendStart\000"
 7523      4932434D 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 161


 7523      61737465 
 7523      7253656E 
 7523      64537461 
 7524              	.LASF115:
 7525 071a 77726974 		.ascii	"writeExtendedData\000"
 7525      65457874 
 7525      656E6465 
 7525      64446174 
 7525      6100
 7526              	.LASF20:
 7527 072c 73697A65 		.ascii	"sizetype\000"
 7527      74797065 
 7527      00
 7528              	.LASF8:
 7529 0735 6C6F6E67 		.ascii	"long unsigned int\000"
 7529      20756E73 
 7529      69676E65 
 7529      6420696E 
 7529      7400
 7530              	.LASF56:
 7531 0747 61646472 		.ascii	"address\000"
 7531      65737300 
 7532              	.LASF144:
 7533 074f 6C69706F 		.ascii	"lipo_SOCFSetThreshold\000"
 7533      5F534F43 
 7533      46536574 
 7533      54687265 
 7533      73686F6C 
 7534              	.LASF129:
 7535 0765 6F6C644F 		.ascii	"oldOpConfig\000"
 7535      70436F6E 
 7535      66696700 
 7536              	.LASF156:
 7537 0771 72657369 		.ascii	"resim\000"
 7537      6D00
 7538              	.LASF130:
 7539 0777 6E65774F 		.ascii	"newOpConfig\000"
 7539      70436F6E 
 7539      66696700 
 7540              	.LASF29:
 7541 0783 52454D41 		.ascii	"REMAIN_UF\000"
 7541      494E5F55 
 7541      4600
 7542              	.LASF71:
 7543 078d 72656164 		.ascii	"readWord\000"
 7543      576F7264 
 7543      00
 7544              	.LASF88:
 7545 0796 736F6352 		.ascii	"socRet\000"
 7545      657400
 7546              	.LASF159:
 7547 079d 4932435F 		.ascii	"I2C_I2CMasterReadBuf\000"
 7547      4932434D 
 7547      61737465 
 7547      72526561 
 7547      64427566 
 7548              	.LASF1:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 162


 7549 07b2 756E7369 		.ascii	"unsigned char\000"
 7549      676E6564 
 7549      20636861 
 7549      7200
 7550              	.LASF75:
 7551 07c0 756E7365 		.ascii	"unseal\000"
 7551      616C00
 7552              	.LASF60:
 7553 07c7 66756E63 		.ascii	"function\000"
 7553      74696F6E 
 7553      00
 7554              	.LASF98:
 7555 07d0 6F70436F 		.ascii	"opConfigRegister\000"
 7555      6E666967 
 7555      52656769 
 7555      73746572 
 7555      00
 7556              	.LASF74:
 7557 07e1 72656164 		.ascii	"readControlWord\000"
 7557      436F6E74 
 7557      726F6C57 
 7557      6F726400 
 7558              	.LASF70:
 7559 07f1 636F6D70 		.ascii	"computeBlockChecksum\000"
 7559      75746542 
 7559      6C6F636B 
 7559      43686563 
 7559      6B73756D 
 7560              	.LASF63:
 7561 0806 636F6D6D 		.ascii	"command\000"
 7561      616E6400 
 7562              	.LASF120:
 7563 080e 6361704C 		.ascii	"capLSB\000"
 7563      534200
 7564              	.LASF0:
 7565 0815 7369676E 		.ascii	"signed char\000"
 7565      65642063 
 7565      68617200 
 7566              	.LASF137:
 7567 0821 64656C74 		.ascii	"delta\000"
 7567      6100
 7568              	.LASF6:
 7569 0827 73686F72 		.ascii	"short unsigned int\000"
 7569      7420756E 
 7569      7369676E 
 7569      65642069 
 7569      6E7400
 7570              	.LASF131:
 7571 083a 6C69706F 		.ascii	"lipo_setGPOUTFunction\000"
 7571      5F736574 
 7571      47504F55 
 7571      5446756E 
 7571      6374696F 
 7572              	.LASF166:
 7573 0850 433A5C55 		.ascii	"C:\\Users\\a85495\\Desktop\\PSoC-Quadcopter\\Sensor"
 7573      73657273 
 7573      5C613835 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 163


 7573      3439355C 
 7573      4465736B 
 7574 087e 735C5365 		.ascii	"s\\Sensor Test\\Base Station.cydsn\000"
 7574      6E736F72 
 7574      20546573 
 7574      745C4261 
 7574      73652053 
 7575              	.LASF135:
 7576 089f 6C69706F 		.ascii	"lipo_setSOCFThresholds\000"
 7576      5F736574 
 7576      534F4346 
 7576      54687265 
 7576      73686F6C 
 7577              	.LASF80:
 7578 08b6 63757272 		.ascii	"current\000"
 7578      656E7400 
 7579              	.LASF103:
 7580 08be 64657669 		.ascii	"deviceID\000"
 7580      63654944 
 7580      00
 7581              	.LASF127:
 7582 08c7 6C69706F 		.ascii	"lipo_setGPOUTPolarity\000"
 7582      5F736574 
 7582      47504F55 
 7582      54506F6C 
 7582      61726974 
 7583              	.LASF141:
 7584 08dd 6F6C6443 		.ascii	"oldCsum\000"
 7584      73756D00 
 7585              	.LASF15:
 7586 08e5 75696E74 		.ascii	"uint8\000"
 7586      3800
 7587              	.LASF18:
 7588 08eb 646F7562 		.ascii	"double\000"
 7588      6C6500
 7589              	.LASF155:
 7590 08f2 75736572 		.ascii	"userControl\000"
 7590      436F6E74 
 7590      726F6C00 
 7591              	.LASF77:
 7592 08fe 75736572 		.ascii	"userInput\000"
 7592      496E7075 
 7592      7400
 7593              	.LASF72:
 7594 0908 6F70436F 		.ascii	"opConfig\000"
 7594      6E666967 
 7594      00
 7595              	.LASF104:
 7596 0911 7365745F 		.ascii	"set_lipo_enterConfig_arg\000"
 7596      6C69706F 
 7596      5F656E74 
 7596      6572436F 
 7596      6E666967 
 7597              	.LASF66:
 7598 092a 64657374 		.ascii	"dest\000"
 7598      00
 7599              	.LASF85:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc8lzCse.s 			page 164


 7600 092f 6C69706F 		.ascii	"lipo_power\000"
 7600      5F706F77 
 7600      657200
 7601              	.LASF163:
 7602 093a 4932435F 		.ascii	"I2C_I2CMasterGetReadBufSize\000"
 7602      4932434D 
 7602      61737465 
 7602      72476574 
 7602      52656164 
 7603              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
