ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_SPI_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_SpiUartWriteTxData,"ax",%progbits
  18              		.align	2
  19              		.global	UART_SpiUartWriteTxData
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_SpiUartWriteTxData, %function
  23              	UART_SpiUartWriteTxData:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\UART_SPI_UART.c"
   1:Generated_Source\PSoC4/UART_SPI_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_SPI_UART.c **** * \file UART_SPI_UART.c
   3:Generated_Source\PSoC4/UART_SPI_UART.c **** * \version 3.20
   4:Generated_Source\PSoC4/UART_SPI_UART.c **** *
   5:Generated_Source\PSoC4/UART_SPI_UART.c **** * \brief
   6:Generated_Source\PSoC4/UART_SPI_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/UART_SPI_UART.c **** *  SPI and UART modes.
   8:Generated_Source\PSoC4/UART_SPI_UART.c **** *
   9:Generated_Source\PSoC4/UART_SPI_UART.c **** * Note:
  10:Generated_Source\PSoC4/UART_SPI_UART.c **** *
  11:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/UART_SPI_UART.c **** * \copyright
  13:Generated_Source\PSoC4/UART_SPI_UART.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_SPI_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_SPI_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_SPI_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  19:Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_PVT.h"
  20:Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  22:Generated_Source\PSoC4/UART_SPI_UART.c **** /***************************************
  23:Generated_Source\PSoC4/UART_SPI_UART.c **** *        SPI/UART Private Vars
  24:Generated_Source\PSoC4/UART_SPI_UART.c **** ***************************************/
  25:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  26:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
  27:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to put data into the software receive buffer.*/
  28:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferHead;
  29:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to get data from the software receive buffer.*/
  30:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferTail;
  31:Generated_Source\PSoC4/UART_SPI_UART.c ****     /**
  32:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \addtogroup group_globals
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 2


  33:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \{
  34:Generated_Source\PSoC4/UART_SPI_UART.c ****     */
  35:Generated_Source\PSoC4/UART_SPI_UART.c ****     /** Sets when internal software receive buffer overflow
  36:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  was occurred.
  37:Generated_Source\PSoC4/UART_SPI_UART.c ****     */
  38:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8  UART_rxBufferOverflow;
  39:Generated_Source\PSoC4/UART_SPI_UART.c ****     /** \} globals */
  40:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  41:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  42:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
  43:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to put data into the software transmit buffer.*/
  44:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferHead;
  45:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to get data from the software transmit buffer.*/
  46:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferTail;
  47:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
  48:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  49:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER)
  50:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Add one element to the buffer to receive full packet. One byte in receive buffer is always e
  51:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_rxBufferInternal[UART_INTERNAL_RX_BUFFER_SIZE];
  52:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER) */
  53:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  54:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER)
  55:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_txBufferInternal[UART_TX_BUFFER_SIZE];
  56:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER) */
  57:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  58:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  59:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_RX_DIRECTION)
  60:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
  61:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartReadRxData
  62:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
  63:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  64:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Retrieves the next data element from the receive buffer.
  65:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is disabled: Returns data element retrieved from
  66:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO. Undefined data will be returned if the RX FIFO is empty.
  67:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is enabled: Returns data element from the software
  68:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     receive buffer. Zero value is returned if the software receive buffer
  69:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     is empty.
  70:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  71:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \return
  72:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Next data element from the receive buffer. 
  73:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  The amount of data bits to be received depends on RX data bits selection 
  74:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  (the data bit counting starts from LSB of return value).
  75:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  76:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
  77:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferHead - the start index to put data into the 
  78:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
  79:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferTail - the start index to get data from the 
  80:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
  81:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  82:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
  83:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartReadRxData(void)
  84:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  85:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 rxData = 0u;
  86:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  87:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
  88:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
  89:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 3


  90:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  91:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
  92:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
  93:Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_rxBufferHead != UART_rxBufferTail)
  94:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
  95:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* There is data in RX software buffer */
  96:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  97:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Calculate index to read from */
  98:Generated_Source\PSoC4/UART_SPI_UART.c ****                 locTail = (UART_rxBufferTail + 1u);
  99:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 100:Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_INTERNAL_RX_BUFFER_SIZE == locTail)
 101:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 102:Generated_Source\PSoC4/UART_SPI_UART.c ****                     locTail = 0u;
 103:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 104:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 105:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Get data from RX software buffer */
 106:Generated_Source\PSoC4/UART_SPI_UART.c ****                 rxData = UART_GetWordFromRxBuffer(locTail);
 107:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 108:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Change index in the buffer */
 109:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_rxBufferTail = locTail;
 110:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 111:Generated_Source\PSoC4/UART_SPI_UART.c ****                 #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
 112:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 113:Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Check if RX Not Empty is disabled in the interrupt */
 114:Generated_Source\PSoC4/UART_SPI_UART.c ****                     if (0u == (UART_INTR_RX_MASK_REG & UART_INTR_RX_NOT_EMPTY))
 115:Generated_Source\PSoC4/UART_SPI_UART.c ****                     {
 116:Generated_Source\PSoC4/UART_SPI_UART.c ****                         /* Enable RX Not Empty interrupt source to continue
 117:Generated_Source\PSoC4/UART_SPI_UART.c ****                         * receiving data into software buffer.
 118:Generated_Source\PSoC4/UART_SPI_UART.c ****                         */
 119:Generated_Source\PSoC4/UART_SPI_UART.c ****                         UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 120:Generated_Source\PSoC4/UART_SPI_UART.c ****                     }
 121:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 122:Generated_Source\PSoC4/UART_SPI_UART.c ****                 #endif
 123:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 124:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 125:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 126:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 127:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 128:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Read data from RX FIFO */
 129:Generated_Source\PSoC4/UART_SPI_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
 130:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 131:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 132:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 133:Generated_Source\PSoC4/UART_SPI_UART.c ****         return (rxData);
 134:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 135:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 136:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 137:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 138:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetRxBufferSize
 139:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 140:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 141:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Returns the number of received data elements in the receive buffer.
 142:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer disabled: returns the number of used entries in
 143:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO.
 144:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer enabled: returns the number of elements which were
 145:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     placed in the receive buffer. This does not include the hardware RX FIFO.
 146:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 4


 147:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \return
 148:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of received data elements.
 149:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 150:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 151:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferHead - the start index to put data into the 
 152:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 153:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferTail - the start index to get data from the 
 154:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 155:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 156:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 157:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetRxBufferSize(void)
 158:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 159:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 160:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
 161:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 162:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
 163:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 164:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 165:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 166:Generated_Source\PSoC4/UART_SPI_UART.c ****             locHead = UART_rxBufferHead;
 167:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 168:Generated_Source\PSoC4/UART_SPI_UART.c ****             if(locHead >= UART_rxBufferTail)
 169:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 170:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead - UART_rxBufferTail);
 171:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 172:Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 173:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 174:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead + (UART_INTERNAL_RX_BUFFER_SIZE - UART_rxBufferTail));
 175:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 176:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 177:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 178:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 179:Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_RX_FIFO_ENTRIES;
 180:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 181:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 182:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 183:Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
 184:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 185:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 186:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 187:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 188:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearRxBuffer
 189:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 190:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 191:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the receive buffer and RX FIFO.
 192:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 193:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 194:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferHead - the start index to put data into the 
 195:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 196:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferTail - the start index to get data from the 
 197:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 198:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 199:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 200:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearRxBuffer(void)
 201:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 202:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 203:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 5


 204:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 205:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 206:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 207:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush RX software buffer */
 208:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferHead = UART_rxBufferTail;
 209:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferOverflow = 0u;
 210:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 211:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 212:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ALL);
 213:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 214:Generated_Source\PSoC4/UART_SPI_UART.c ****             #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
 215:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 216:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Enable RX Not Empty interrupt source to continue receiving
 217:Generated_Source\PSoC4/UART_SPI_UART.c ****                 * data into software buffer.
 218:Generated_Source\PSoC4/UART_SPI_UART.c ****                 */
 219:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 220:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 221:Generated_Source\PSoC4/UART_SPI_UART.c ****             #endif
 222:Generated_Source\PSoC4/UART_SPI_UART.c ****             
 223:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 224:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 225:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 226:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 227:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 228:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 229:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 230:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 231:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 232:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 233:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_RX_DIRECTION) */
 234:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 235:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 236:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_TX_DIRECTION)
 237:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 238:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartWriteTxData
 239:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 240:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 241:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places a data entry into the transmit buffer to be sent at the next available
 242:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  bus time.
 243:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is space available to put the
 244:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  requested data in the transmit buffer.
 245:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 246:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  \param txDataByte: the data to be transmitted.
 247:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   The amount of data bits to be transmitted depends on TX data bits selection 
 248:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   (the data bit counting starts from LSB of txDataByte).
 249:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 250:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 251:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 252:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 253:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 254:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 255:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 256:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 257:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartWriteTxData(uint32 txData)
 258:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  26              		.loc 1 258 0
  27              		.cfi_startproc
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 6


  28              	.LVL0:
  29              	.L2:
 259:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 260:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 261:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 262:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 263:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 264:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 265:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data directly into the TX FIFO */
 266:Generated_Source\PSoC4/UART_SPI_UART.c ****             if ((UART_txBufferHead == UART_txBufferTail) &&
 267:Generated_Source\PSoC4/UART_SPI_UART.c ****                 (UART_SPI_UART_FIFO_SIZE != UART_GET_TX_FIFO_ENTRIES))
 268:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 269:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer is empty: put data directly in TX FIFO */
 270:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_TX_FIFO_WR_REG = txData;
 271:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 272:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data into TX software buffer */
 273:Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 274:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 275:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Head index to put data */
 276:Generated_Source\PSoC4/UART_SPI_UART.c ****                 locHead = (UART_txBufferHead + 1u);
 277:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 278:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Adjust TX software buffer index */
 279:Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_TX_BUFFER_SIZE == locHead)
 280:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 281:Generated_Source\PSoC4/UART_SPI_UART.c ****                     locHead = 0u;
 282:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 283:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 284:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Wait for space in TX software buffer */
 285:Generated_Source\PSoC4/UART_SPI_UART.c ****                 while (locHead == UART_txBufferTail)
 286:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 287:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 288:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 289:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer has at least one room */
 290:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 291:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Clear old status of INTR_TX_NOT_FULL. It sets at the end of transfer when TX FIF
 292:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_ClearTxInterruptSource(UART_INTR_TX_NOT_FULL);
 293:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 294:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_PutWordInTxBuffer(locHead, txData);
 295:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 296:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_txBufferHead = locHead;
 297:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 298:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Check if TX Not Full is disabled in interrupt */
 299:Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (0u == (UART_INTR_TX_MASK_REG & UART_INTR_TX_NOT_FULL))
 300:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 301:Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Enable TX Not Full interrupt source to transmit from software buffer */
 302:Generated_Source\PSoC4/UART_SPI_UART.c ****                     UART_INTR_TX_MASK_REG |= (uint32) UART_INTR_TX_NOT_FULL;
 303:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 304:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 305:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 306:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 307:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 308:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Wait until TX FIFO has space to put data element */
 309:Generated_Source\PSoC4/UART_SPI_UART.c ****             while (UART_SPI_UART_FIFO_SIZE == UART_GET_TX_FIFO_ENTRIES)
  30              		.loc 1 309 0 discriminator 1
  31 0000 044B     		ldr	r3, .L3
  32 0002 1B68     		ldr	r3, [r3]
  33 0004 0F22     		mov	r2, #15
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 7


  34 0006 1340     		and	r3, r2
  35 0008 082B     		cmp	r3, #8
  36 000a F9D0     		beq	.L2
 310:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 311:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 312:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 313:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_TX_FIFO_WR_REG = txData;
  37              		.loc 1 313 0
  38 000c 024B     		ldr	r3, .L3+4
  39 000e 1860     		str	r0, [r3]
 314:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 315:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 316:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  40              		.loc 1 316 0
  41              		@ sp needed
  42 0010 7047     		bx	lr
  43              	.L4:
  44 0012 C046     		.align	2
  45              	.L3:
  46 0014 08020640 		.word	1074135560
  47 0018 40020640 		.word	1074135616
  48              		.cfi_endproc
  49              	.LFE0:
  50              		.size	UART_SpiUartWriteTxData, .-UART_SpiUartWriteTxData
  51              		.section	.text.UART_SpiUartPutArray,"ax",%progbits
  52              		.align	2
  53              		.global	UART_SpiUartPutArray
  54              		.code	16
  55              		.thumb_func
  56              		.type	UART_SpiUartPutArray, %function
  57              	UART_SpiUartPutArray:
  58              	.LFB1:
 317:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 318:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 319:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 320:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartPutArray
 321:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 322:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 323:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places an array of data into the transmit buffer to be sent.
 324:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is a space available to put
 325:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  all the requested data in the transmit buffer. The array size can be greater
 326:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  than transmit buffer size.
 327:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 328:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \param wrBuf: pointer to an array of data to be placed in transmit buffer. 
 329:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  The width of the data to be transmitted depends on TX data width selection 
 330:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  (the data bit counting starts from LSB for each array element).
 331:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \param count: number of data elements to be placed in the transmit buffer.
 332:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 333:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 334:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 335:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 336:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 337:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 338:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 339:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 340:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartPutArray(const uint8 wrBuf[], uint32 count)
 341:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 8


  59              		.loc 1 341 0
  60              		.cfi_startproc
  61              	.LVL1:
  62 0000 70B5     		push	{r4, r5, r6, lr}
  63              		.cfi_def_cfa_offset 16
  64              		.cfi_offset 4, -16
  65              		.cfi_offset 5, -12
  66              		.cfi_offset 6, -8
  67              		.cfi_offset 14, -4
  68 0002 061C     		mov	r6, r0
  69 0004 0D1C     		mov	r5, r1
  70              	.LVL2:
 342:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 i;
 343:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 344:Generated_Source\PSoC4/UART_SPI_UART.c ****         for (i=0u; i < count; i++)
  71              		.loc 1 344 0
  72 0006 0024     		mov	r4, #0
  73 0008 03E0     		b	.L6
  74              	.LVL3:
  75              	.L7:
 345:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 346:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_SpiUartWriteTxData((uint32) wrBuf[i]);
  76              		.loc 1 346 0 discriminator 3
  77 000a 305D     		ldrb	r0, [r6, r4]
  78 000c FFF7FEFF 		bl	UART_SpiUartWriteTxData
  79              	.LVL4:
 344:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
  80              		.loc 1 344 0 discriminator 3
  81 0010 0134     		add	r4, r4, #1
  82              	.LVL5:
  83              	.L6:
 344:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
  84              		.loc 1 344 0 is_stmt 0 discriminator 1
  85 0012 AC42     		cmp	r4, r5
  86 0014 F9D3     		bcc	.L7
 347:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 348:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  87              		.loc 1 348 0 is_stmt 1
  88              		@ sp needed
  89              	.LVL6:
  90              	.LVL7:
  91              	.LVL8:
  92 0016 70BD     		pop	{r4, r5, r6, pc}
  93              		.cfi_endproc
  94              	.LFE1:
  95              		.size	UART_SpiUartPutArray, .-UART_SpiUartPutArray
  96              		.section	.text.UART_SpiUartGetTxBufferSize,"ax",%progbits
  97              		.align	2
  98              		.global	UART_SpiUartGetTxBufferSize
  99              		.code	16
 100              		.thumb_func
 101              		.type	UART_SpiUartGetTxBufferSize, %function
 102              	UART_SpiUartGetTxBufferSize:
 103              	.LFB2:
 349:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 350:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 351:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 9


 352:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetTxBufferSize
 353:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 355:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Returns the number of elements currently in the transmit buffer.
 356:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - TX software buffer is disabled: returns the number of used entries in
 357:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     TX FIFO.
 358:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - TX software buffer is enabled: returns the number of elements currently
 359:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     used in the transmit buffer. This number does not include used entries in
 360:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     the TX FIFO. The transmit buffer size is zero until the TX FIFO is
 361:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     not full.
 362:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 363:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \return
 364:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of data elements ready to transmit.
 365:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 366:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 367:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 368:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 369:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 370:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 371:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 372:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 373:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetTxBufferSize(void)
 374:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 104              		.loc 1 374 0
 105              		.cfi_startproc
 375:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 376:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 377:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
 378:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 379:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 380:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 381:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 382:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Get current Tail index */
 383:Generated_Source\PSoC4/UART_SPI_UART.c ****             locTail = UART_txBufferTail;
 384:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 385:Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_txBufferHead >= locTail)
 386:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 387:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead - locTail);
 388:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 389:Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 390:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 391:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead + (UART_TX_BUFFER_SIZE - locTail));
 392:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 393:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 394:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 395:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 396:Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_TX_FIFO_ENTRIES;
 106              		.loc 1 396 0
 107 0000 024B     		ldr	r3, .L9
 108 0002 1B68     		ldr	r3, [r3]
 109 0004 0F20     		mov	r0, #15
 110 0006 1840     		and	r0, r3
 111              	.LVL9:
 397:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 398:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 399:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 400:Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 10


 401:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 112              		.loc 1 401 0
 113              		@ sp needed
 114 0008 7047     		bx	lr
 115              	.L10:
 116 000a C046     		.align	2
 117              	.L9:
 118 000c 08020640 		.word	1074135560
 119              		.cfi_endproc
 120              	.LFE2:
 121              		.size	UART_SpiUartGetTxBufferSize, .-UART_SpiUartGetTxBufferSize
 122              		.section	.text.UART_SpiUartClearTxBuffer,"ax",%progbits
 123              		.align	2
 124              		.global	UART_SpiUartClearTxBuffer
 125              		.code	16
 126              		.thumb_func
 127              		.type	UART_SpiUartClearTxBuffer, %function
 128              	UART_SpiUartClearTxBuffer:
 129              	.LFB3:
 402:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 403:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 404:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 405:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearTxBuffer
 406:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 407:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 408:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the transmit buffer and TX FIFO.
 409:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 410:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 411:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 412:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 413:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 414:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 415:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 416:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 417:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearTxBuffer(void)
 418:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 130              		.loc 1 418 0
 131              		.cfi_startproc
 419:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 420:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 421:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 422:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 423:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 424:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush TX software buffer */
 425:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_txBufferHead = UART_txBufferTail;
 426:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 427:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_INTR_TX_MASK_REG &= (uint32) ~UART_INTR_TX_NOT_FULL;
 428:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 429:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearTxInterruptSource(UART_INTR_TX_ALL);
 430:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 431:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 432:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 433:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 434:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 435:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 436:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 132              		.loc 1 436 0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 11


 133 0000 054B     		ldr	r3, .L12
 134 0002 1A68     		ldr	r2, [r3]
 135 0004 8021     		mov	r1, #128
 136 0006 4902     		lsl	r1, r1, #9
 137 0008 0A43     		orr	r2, r1
 138 000a 1A60     		str	r2, [r3]
 139 000c 1968     		ldr	r1, [r3]
 140 000e 034A     		ldr	r2, .L12+4
 141 0010 0A40     		and	r2, r1
 142 0012 1A60     		str	r2, [r3]
 437:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 438:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 439:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 143              		.loc 1 439 0
 144              		@ sp needed
 145 0014 7047     		bx	lr
 146              	.L13:
 147 0016 C046     		.align	2
 148              	.L12:
 149 0018 04020640 		.word	1074135556
 150 001c FFFFFEFF 		.word	-65537
 151              		.cfi_endproc
 152              	.LFE3:
 153              		.size	UART_SpiUartClearTxBuffer, .-UART_SpiUartClearTxBuffer
 154              		.section	.text.UART_SpiUartDisableIntRx,"ax",%progbits
 155              		.align	2
 156              		.global	UART_SpiUartDisableIntRx
 157              		.code	16
 158              		.thumb_func
 159              		.type	UART_SpiUartDisableIntRx, %function
 160              	UART_SpiUartDisableIntRx:
 161              	.LFB4:
 440:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 441:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_TX_DIRECTION) */
 442:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 443:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 444:Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 445:Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntRx
 446:Generated_Source\PSoC4/UART_SPI_UART.c **** ****************************************************************************//**
 447:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 448:Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables the RX interrupt sources.
 449:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 450:Generated_Source\PSoC4/UART_SPI_UART.c **** *  \return
 451:Generated_Source\PSoC4/UART_SPI_UART.c **** *   Returns the RX interrupt sources enabled before the function call.
 452:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 453:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 454:Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntRx(void)
 455:Generated_Source\PSoC4/UART_SPI_UART.c **** {
 162              		.loc 1 455 0
 163              		.cfi_startproc
 456:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSource;
 457:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 458:Generated_Source\PSoC4/UART_SPI_UART.c ****     intSource = UART_GetRxInterruptMode();
 164              		.loc 1 458 0
 165 0000 024B     		ldr	r3, .L15
 166 0002 1868     		ldr	r0, [r3]
 167              	.LVL10:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 12


 459:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 460:Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetRxInterruptMode(UART_NO_INTR_SOURCES);
 168              		.loc 1 460 0
 169 0004 0022     		mov	r2, #0
 170 0006 1A60     		str	r2, [r3]
 461:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 462:Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSource);
 463:Generated_Source\PSoC4/UART_SPI_UART.c **** }
 171              		.loc 1 463 0
 172              		@ sp needed
 173 0008 7047     		bx	lr
 174              	.L16:
 175 000a C046     		.align	2
 176              	.L15:
 177 000c C80F0640 		.word	1074139080
 178              		.cfi_endproc
 179              	.LFE4:
 180              		.size	UART_SpiUartDisableIntRx, .-UART_SpiUartDisableIntRx
 181              		.section	.text.UART_SpiUartDisableIntTx,"ax",%progbits
 182              		.align	2
 183              		.global	UART_SpiUartDisableIntTx
 184              		.code	16
 185              		.thumb_func
 186              		.type	UART_SpiUartDisableIntTx, %function
 187              	UART_SpiUartDisableIntTx:
 188              	.LFB5:
 464:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 465:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 466:Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntTx
 468:Generated_Source\PSoC4/UART_SPI_UART.c **** ****************************************************************************//**
 469:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 470:Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables TX interrupt sources.
 471:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 472:Generated_Source\PSoC4/UART_SPI_UART.c **** *  \return
 473:Generated_Source\PSoC4/UART_SPI_UART.c **** *   Returns TX interrupt sources enabled before function call.
 474:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 475:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 476:Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntTx(void)
 477:Generated_Source\PSoC4/UART_SPI_UART.c **** {
 189              		.loc 1 477 0
 190              		.cfi_startproc
 478:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSourceMask;
 479:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 480:Generated_Source\PSoC4/UART_SPI_UART.c ****     intSourceMask = UART_GetTxInterruptMode();
 191              		.loc 1 480 0
 192 0000 024B     		ldr	r3, .L18
 193 0002 1868     		ldr	r0, [r3]
 194              	.LVL11:
 481:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 482:Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetTxInterruptMode(UART_NO_INTR_SOURCES);
 195              		.loc 1 482 0
 196 0004 0022     		mov	r2, #0
 197 0006 1A60     		str	r2, [r3]
 483:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 484:Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSourceMask);
 485:Generated_Source\PSoC4/UART_SPI_UART.c **** }
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 13


 198              		.loc 1 485 0
 199              		@ sp needed
 200 0008 7047     		bx	lr
 201              	.L19:
 202 000a C046     		.align	2
 203              	.L18:
 204 000c 880F0640 		.word	1074139016
 205              		.cfi_endproc
 206              	.LFE5:
 207              		.size	UART_SpiUartDisableIntTx, .-UART_SpiUartDisableIntTx
 208              		.text
 209              	.Letext0:
 210              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 211              		.section	.debug_info,"",%progbits
 212              	.Ldebug_info0:
 213 0000 B4010000 		.4byte	0x1b4
 214 0004 0400     		.2byte	0x4
 215 0006 00000000 		.4byte	.Ldebug_abbrev0
 216 000a 04       		.byte	0x4
 217 000b 01       		.uleb128 0x1
 218 000c 53010000 		.4byte	.LASF27
 219 0010 01       		.byte	0x1
 220 0011 EB010000 		.4byte	.LASF28
 221 0015 20020000 		.4byte	.LASF29
 222 0019 00000000 		.4byte	.Ldebug_ranges0+0
 223 001d 00000000 		.4byte	0
 224 0021 00000000 		.4byte	.Ldebug_line0
 225 0025 02       		.uleb128 0x2
 226 0026 01       		.byte	0x1
 227 0027 06       		.byte	0x6
 228 0028 6F020000 		.4byte	.LASF0
 229 002c 02       		.uleb128 0x2
 230 002d 01       		.byte	0x1
 231 002e 08       		.byte	0x8
 232 002f 8E000000 		.4byte	.LASF1
 233 0033 02       		.uleb128 0x2
 234 0034 02       		.byte	0x2
 235 0035 05       		.byte	0x5
 236 0036 E1010000 		.4byte	.LASF2
 237 003a 02       		.uleb128 0x2
 238 003b 02       		.byte	0x2
 239 003c 07       		.byte	0x7
 240 003d 13000000 		.4byte	.LASF3
 241 0041 02       		.uleb128 0x2
 242 0042 04       		.byte	0x4
 243 0043 05       		.byte	0x5
 244 0044 12020000 		.4byte	.LASF4
 245 0048 02       		.uleb128 0x2
 246 0049 04       		.byte	0x4
 247 004a 07       		.byte	0x7
 248 004b 70000000 		.4byte	.LASF5
 249 004f 02       		.uleb128 0x2
 250 0050 08       		.byte	0x8
 251 0051 05       		.byte	0x5
 252 0052 11010000 		.4byte	.LASF6
 253 0056 02       		.uleb128 0x2
 254 0057 08       		.byte	0x8
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 14


 255 0058 07       		.byte	0x7
 256 0059 F1000000 		.4byte	.LASF7
 257 005d 03       		.uleb128 0x3
 258 005e 04       		.byte	0x4
 259 005f 05       		.byte	0x5
 260 0060 696E7400 		.ascii	"int\000"
 261 0064 02       		.uleb128 0x2
 262 0065 04       		.byte	0x4
 263 0066 07       		.byte	0x7
 264 0067 26000000 		.4byte	.LASF8
 265 006b 04       		.uleb128 0x4
 266 006c 82000000 		.4byte	.LASF9
 267 0070 02       		.byte	0x2
 268 0071 B901     		.2byte	0x1b9
 269 0073 2C000000 		.4byte	0x2c
 270 0077 04       		.uleb128 0x4
 271 0078 A3000000 		.4byte	.LASF10
 272 007c 02       		.byte	0x2
 273 007d BB01     		.2byte	0x1bb
 274 007f 48000000 		.4byte	0x48
 275 0083 02       		.uleb128 0x2
 276 0084 04       		.byte	0x4
 277 0085 04       		.byte	0x4
 278 0086 4C000000 		.4byte	.LASF11
 279 008a 02       		.uleb128 0x2
 280 008b 08       		.byte	0x8
 281 008c 04       		.byte	0x4
 282 008d 9C000000 		.4byte	.LASF12
 283 0091 02       		.uleb128 0x2
 284 0092 01       		.byte	0x1
 285 0093 08       		.byte	0x8
 286 0094 1B020000 		.4byte	.LASF13
 287 0098 04       		.uleb128 0x4
 288 0099 00000000 		.4byte	.LASF14
 289 009d 02       		.byte	0x2
 290 009e 6502     		.2byte	0x265
 291 00a0 A4000000 		.4byte	0xa4
 292 00a4 05       		.uleb128 0x5
 293 00a5 77000000 		.4byte	0x77
 294 00a9 02       		.uleb128 0x2
 295 00aa 04       		.byte	0x4
 296 00ab 07       		.byte	0x7
 297 00ac 08010000 		.4byte	.LASF15
 298 00b0 06       		.uleb128 0x6
 299 00b1 1F010000 		.4byte	.LASF16
 300 00b5 01       		.byte	0x1
 301 00b6 0101     		.2byte	0x101
 302 00b8 00000000 		.4byte	.LFB0
 303 00bc 1C000000 		.4byte	.LFE0-.LFB0
 304 00c0 01       		.uleb128 0x1
 305 00c1 9C       		.byte	0x9c
 306 00c2 D5000000 		.4byte	0xd5
 307 00c6 07       		.uleb128 0x7
 308 00c7 0C000000 		.4byte	.LASF18
 309 00cb 01       		.byte	0x1
 310 00cc 0101     		.2byte	0x101
 311 00ce 77000000 		.4byte	0x77
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 15


 312 00d2 01       		.uleb128 0x1
 313 00d3 50       		.byte	0x50
 314 00d4 00       		.byte	0
 315 00d5 06       		.uleb128 0x6
 316 00d6 C4000000 		.4byte	.LASF17
 317 00da 01       		.byte	0x1
 318 00db 5401     		.2byte	0x154
 319 00dd 00000000 		.4byte	.LFB1
 320 00e1 18000000 		.4byte	.LFE1-.LFB1
 321 00e5 01       		.uleb128 0x1
 322 00e6 9C       		.byte	0x9c
 323 00e7 23010000 		.4byte	0x123
 324 00eb 08       		.uleb128 0x8
 325 00ec 88000000 		.4byte	.LASF19
 326 00f0 01       		.byte	0x1
 327 00f1 5401     		.2byte	0x154
 328 00f3 23010000 		.4byte	0x123
 329 00f7 00000000 		.4byte	.LLST0
 330 00fb 08       		.uleb128 0x8
 331 00fc 06000000 		.4byte	.LASF20
 332 0100 01       		.byte	0x1
 333 0101 5401     		.2byte	0x154
 334 0103 77000000 		.4byte	0x77
 335 0107 2C000000 		.4byte	.LLST1
 336 010b 09       		.uleb128 0x9
 337 010c 6900     		.ascii	"i\000"
 338 010e 01       		.byte	0x1
 339 010f 5601     		.2byte	0x156
 340 0111 77000000 		.4byte	0x77
 341 0115 58000000 		.4byte	.LLST2
 342 0119 0A       		.uleb128 0xa
 343 011a 10000000 		.4byte	.LVL4
 344 011e B0000000 		.4byte	0xb0
 345 0122 00       		.byte	0
 346 0123 0B       		.uleb128 0xb
 347 0124 04       		.byte	0x4
 348 0125 29010000 		.4byte	0x129
 349 0129 0C       		.uleb128 0xc
 350 012a 6B000000 		.4byte	0x6b
 351 012e 0D       		.uleb128 0xd
 352 012f 37010000 		.4byte	.LASF22
 353 0133 01       		.byte	0x1
 354 0134 7501     		.2byte	0x175
 355 0136 77000000 		.4byte	0x77
 356 013a 00000000 		.4byte	.LFB2
 357 013e 10000000 		.4byte	.LFE2-.LFB2
 358 0142 01       		.uleb128 0x1
 359 0143 9C       		.byte	0x9c
 360 0144 57010000 		.4byte	0x157
 361 0148 0E       		.uleb128 0xe
 362 0149 6B000000 		.4byte	.LASF21
 363 014d 01       		.byte	0x1
 364 014e 7701     		.2byte	0x177
 365 0150 77000000 		.4byte	0x77
 366 0154 01       		.uleb128 0x1
 367 0155 50       		.byte	0x50
 368 0156 00       		.byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 16


 369 0157 0F       		.uleb128 0xf
 370 0158 AA000000 		.4byte	.LASF30
 371 015c 01       		.byte	0x1
 372 015d A101     		.2byte	0x1a1
 373 015f 00000000 		.4byte	.LFB3
 374 0163 20000000 		.4byte	.LFE3-.LFB3
 375 0167 01       		.uleb128 0x1
 376 0168 9C       		.byte	0x9c
 377 0169 0D       		.uleb128 0xd
 378 016a 33000000 		.4byte	.LASF23
 379 016e 01       		.byte	0x1
 380 016f C601     		.2byte	0x1c6
 381 0171 77000000 		.4byte	0x77
 382 0175 00000000 		.4byte	.LFB4
 383 0179 10000000 		.4byte	.LFE4-.LFB4
 384 017d 01       		.uleb128 0x1
 385 017e 9C       		.byte	0x9c
 386 017f 92010000 		.4byte	0x192
 387 0183 0E       		.uleb128 0xe
 388 0184 E7000000 		.4byte	.LASF24
 389 0188 01       		.byte	0x1
 390 0189 C801     		.2byte	0x1c8
 391 018b 77000000 		.4byte	0x77
 392 018f 01       		.uleb128 0x1
 393 0190 50       		.byte	0x50
 394 0191 00       		.byte	0
 395 0192 10       		.uleb128 0x10
 396 0193 52000000 		.4byte	.LASF25
 397 0197 01       		.byte	0x1
 398 0198 DC01     		.2byte	0x1dc
 399 019a 77000000 		.4byte	0x77
 400 019e 00000000 		.4byte	.LFB5
 401 01a2 10000000 		.4byte	.LFE5-.LFB5
 402 01a6 01       		.uleb128 0x1
 403 01a7 9C       		.byte	0x9c
 404 01a8 0E       		.uleb128 0xe
 405 01a9 D9000000 		.4byte	.LASF26
 406 01ad 01       		.byte	0x1
 407 01ae DE01     		.2byte	0x1de
 408 01b0 77000000 		.4byte	0x77
 409 01b4 01       		.uleb128 0x1
 410 01b5 50       		.byte	0x50
 411 01b6 00       		.byte	0
 412 01b7 00       		.byte	0
 413              		.section	.debug_abbrev,"",%progbits
 414              	.Ldebug_abbrev0:
 415 0000 01       		.uleb128 0x1
 416 0001 11       		.uleb128 0x11
 417 0002 01       		.byte	0x1
 418 0003 25       		.uleb128 0x25
 419 0004 0E       		.uleb128 0xe
 420 0005 13       		.uleb128 0x13
 421 0006 0B       		.uleb128 0xb
 422 0007 03       		.uleb128 0x3
 423 0008 0E       		.uleb128 0xe
 424 0009 1B       		.uleb128 0x1b
 425 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 17


 426 000b 55       		.uleb128 0x55
 427 000c 17       		.uleb128 0x17
 428 000d 11       		.uleb128 0x11
 429 000e 01       		.uleb128 0x1
 430 000f 10       		.uleb128 0x10
 431 0010 17       		.uleb128 0x17
 432 0011 00       		.byte	0
 433 0012 00       		.byte	0
 434 0013 02       		.uleb128 0x2
 435 0014 24       		.uleb128 0x24
 436 0015 00       		.byte	0
 437 0016 0B       		.uleb128 0xb
 438 0017 0B       		.uleb128 0xb
 439 0018 3E       		.uleb128 0x3e
 440 0019 0B       		.uleb128 0xb
 441 001a 03       		.uleb128 0x3
 442 001b 0E       		.uleb128 0xe
 443 001c 00       		.byte	0
 444 001d 00       		.byte	0
 445 001e 03       		.uleb128 0x3
 446 001f 24       		.uleb128 0x24
 447 0020 00       		.byte	0
 448 0021 0B       		.uleb128 0xb
 449 0022 0B       		.uleb128 0xb
 450 0023 3E       		.uleb128 0x3e
 451 0024 0B       		.uleb128 0xb
 452 0025 03       		.uleb128 0x3
 453 0026 08       		.uleb128 0x8
 454 0027 00       		.byte	0
 455 0028 00       		.byte	0
 456 0029 04       		.uleb128 0x4
 457 002a 16       		.uleb128 0x16
 458 002b 00       		.byte	0
 459 002c 03       		.uleb128 0x3
 460 002d 0E       		.uleb128 0xe
 461 002e 3A       		.uleb128 0x3a
 462 002f 0B       		.uleb128 0xb
 463 0030 3B       		.uleb128 0x3b
 464 0031 05       		.uleb128 0x5
 465 0032 49       		.uleb128 0x49
 466 0033 13       		.uleb128 0x13
 467 0034 00       		.byte	0
 468 0035 00       		.byte	0
 469 0036 05       		.uleb128 0x5
 470 0037 35       		.uleb128 0x35
 471 0038 00       		.byte	0
 472 0039 49       		.uleb128 0x49
 473 003a 13       		.uleb128 0x13
 474 003b 00       		.byte	0
 475 003c 00       		.byte	0
 476 003d 06       		.uleb128 0x6
 477 003e 2E       		.uleb128 0x2e
 478 003f 01       		.byte	0x1
 479 0040 3F       		.uleb128 0x3f
 480 0041 19       		.uleb128 0x19
 481 0042 03       		.uleb128 0x3
 482 0043 0E       		.uleb128 0xe
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 18


 483 0044 3A       		.uleb128 0x3a
 484 0045 0B       		.uleb128 0xb
 485 0046 3B       		.uleb128 0x3b
 486 0047 05       		.uleb128 0x5
 487 0048 27       		.uleb128 0x27
 488 0049 19       		.uleb128 0x19
 489 004a 11       		.uleb128 0x11
 490 004b 01       		.uleb128 0x1
 491 004c 12       		.uleb128 0x12
 492 004d 06       		.uleb128 0x6
 493 004e 40       		.uleb128 0x40
 494 004f 18       		.uleb128 0x18
 495 0050 9742     		.uleb128 0x2117
 496 0052 19       		.uleb128 0x19
 497 0053 01       		.uleb128 0x1
 498 0054 13       		.uleb128 0x13
 499 0055 00       		.byte	0
 500 0056 00       		.byte	0
 501 0057 07       		.uleb128 0x7
 502 0058 05       		.uleb128 0x5
 503 0059 00       		.byte	0
 504 005a 03       		.uleb128 0x3
 505 005b 0E       		.uleb128 0xe
 506 005c 3A       		.uleb128 0x3a
 507 005d 0B       		.uleb128 0xb
 508 005e 3B       		.uleb128 0x3b
 509 005f 05       		.uleb128 0x5
 510 0060 49       		.uleb128 0x49
 511 0061 13       		.uleb128 0x13
 512 0062 02       		.uleb128 0x2
 513 0063 18       		.uleb128 0x18
 514 0064 00       		.byte	0
 515 0065 00       		.byte	0
 516 0066 08       		.uleb128 0x8
 517 0067 05       		.uleb128 0x5
 518 0068 00       		.byte	0
 519 0069 03       		.uleb128 0x3
 520 006a 0E       		.uleb128 0xe
 521 006b 3A       		.uleb128 0x3a
 522 006c 0B       		.uleb128 0xb
 523 006d 3B       		.uleb128 0x3b
 524 006e 05       		.uleb128 0x5
 525 006f 49       		.uleb128 0x49
 526 0070 13       		.uleb128 0x13
 527 0071 02       		.uleb128 0x2
 528 0072 17       		.uleb128 0x17
 529 0073 00       		.byte	0
 530 0074 00       		.byte	0
 531 0075 09       		.uleb128 0x9
 532 0076 34       		.uleb128 0x34
 533 0077 00       		.byte	0
 534 0078 03       		.uleb128 0x3
 535 0079 08       		.uleb128 0x8
 536 007a 3A       		.uleb128 0x3a
 537 007b 0B       		.uleb128 0xb
 538 007c 3B       		.uleb128 0x3b
 539 007d 05       		.uleb128 0x5
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 19


 540 007e 49       		.uleb128 0x49
 541 007f 13       		.uleb128 0x13
 542 0080 02       		.uleb128 0x2
 543 0081 17       		.uleb128 0x17
 544 0082 00       		.byte	0
 545 0083 00       		.byte	0
 546 0084 0A       		.uleb128 0xa
 547 0085 898201   		.uleb128 0x4109
 548 0088 00       		.byte	0
 549 0089 11       		.uleb128 0x11
 550 008a 01       		.uleb128 0x1
 551 008b 31       		.uleb128 0x31
 552 008c 13       		.uleb128 0x13
 553 008d 00       		.byte	0
 554 008e 00       		.byte	0
 555 008f 0B       		.uleb128 0xb
 556 0090 0F       		.uleb128 0xf
 557 0091 00       		.byte	0
 558 0092 0B       		.uleb128 0xb
 559 0093 0B       		.uleb128 0xb
 560 0094 49       		.uleb128 0x49
 561 0095 13       		.uleb128 0x13
 562 0096 00       		.byte	0
 563 0097 00       		.byte	0
 564 0098 0C       		.uleb128 0xc
 565 0099 26       		.uleb128 0x26
 566 009a 00       		.byte	0
 567 009b 49       		.uleb128 0x49
 568 009c 13       		.uleb128 0x13
 569 009d 00       		.byte	0
 570 009e 00       		.byte	0
 571 009f 0D       		.uleb128 0xd
 572 00a0 2E       		.uleb128 0x2e
 573 00a1 01       		.byte	0x1
 574 00a2 3F       		.uleb128 0x3f
 575 00a3 19       		.uleb128 0x19
 576 00a4 03       		.uleb128 0x3
 577 00a5 0E       		.uleb128 0xe
 578 00a6 3A       		.uleb128 0x3a
 579 00a7 0B       		.uleb128 0xb
 580 00a8 3B       		.uleb128 0x3b
 581 00a9 05       		.uleb128 0x5
 582 00aa 27       		.uleb128 0x27
 583 00ab 19       		.uleb128 0x19
 584 00ac 49       		.uleb128 0x49
 585 00ad 13       		.uleb128 0x13
 586 00ae 11       		.uleb128 0x11
 587 00af 01       		.uleb128 0x1
 588 00b0 12       		.uleb128 0x12
 589 00b1 06       		.uleb128 0x6
 590 00b2 40       		.uleb128 0x40
 591 00b3 18       		.uleb128 0x18
 592 00b4 9742     		.uleb128 0x2117
 593 00b6 19       		.uleb128 0x19
 594 00b7 01       		.uleb128 0x1
 595 00b8 13       		.uleb128 0x13
 596 00b9 00       		.byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 20


 597 00ba 00       		.byte	0
 598 00bb 0E       		.uleb128 0xe
 599 00bc 34       		.uleb128 0x34
 600 00bd 00       		.byte	0
 601 00be 03       		.uleb128 0x3
 602 00bf 0E       		.uleb128 0xe
 603 00c0 3A       		.uleb128 0x3a
 604 00c1 0B       		.uleb128 0xb
 605 00c2 3B       		.uleb128 0x3b
 606 00c3 05       		.uleb128 0x5
 607 00c4 49       		.uleb128 0x49
 608 00c5 13       		.uleb128 0x13
 609 00c6 02       		.uleb128 0x2
 610 00c7 18       		.uleb128 0x18
 611 00c8 00       		.byte	0
 612 00c9 00       		.byte	0
 613 00ca 0F       		.uleb128 0xf
 614 00cb 2E       		.uleb128 0x2e
 615 00cc 00       		.byte	0
 616 00cd 3F       		.uleb128 0x3f
 617 00ce 19       		.uleb128 0x19
 618 00cf 03       		.uleb128 0x3
 619 00d0 0E       		.uleb128 0xe
 620 00d1 3A       		.uleb128 0x3a
 621 00d2 0B       		.uleb128 0xb
 622 00d3 3B       		.uleb128 0x3b
 623 00d4 05       		.uleb128 0x5
 624 00d5 27       		.uleb128 0x27
 625 00d6 19       		.uleb128 0x19
 626 00d7 11       		.uleb128 0x11
 627 00d8 01       		.uleb128 0x1
 628 00d9 12       		.uleb128 0x12
 629 00da 06       		.uleb128 0x6
 630 00db 40       		.uleb128 0x40
 631 00dc 18       		.uleb128 0x18
 632 00dd 9742     		.uleb128 0x2117
 633 00df 19       		.uleb128 0x19
 634 00e0 00       		.byte	0
 635 00e1 00       		.byte	0
 636 00e2 10       		.uleb128 0x10
 637 00e3 2E       		.uleb128 0x2e
 638 00e4 01       		.byte	0x1
 639 00e5 3F       		.uleb128 0x3f
 640 00e6 19       		.uleb128 0x19
 641 00e7 03       		.uleb128 0x3
 642 00e8 0E       		.uleb128 0xe
 643 00e9 3A       		.uleb128 0x3a
 644 00ea 0B       		.uleb128 0xb
 645 00eb 3B       		.uleb128 0x3b
 646 00ec 05       		.uleb128 0x5
 647 00ed 27       		.uleb128 0x27
 648 00ee 19       		.uleb128 0x19
 649 00ef 49       		.uleb128 0x49
 650 00f0 13       		.uleb128 0x13
 651 00f1 11       		.uleb128 0x11
 652 00f2 01       		.uleb128 0x1
 653 00f3 12       		.uleb128 0x12
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 21


 654 00f4 06       		.uleb128 0x6
 655 00f5 40       		.uleb128 0x40
 656 00f6 18       		.uleb128 0x18
 657 00f7 9742     		.uleb128 0x2117
 658 00f9 19       		.uleb128 0x19
 659 00fa 00       		.byte	0
 660 00fb 00       		.byte	0
 661 00fc 00       		.byte	0
 662              		.section	.debug_loc,"",%progbits
 663              	.Ldebug_loc0:
 664              	.LLST0:
 665 0000 00000000 		.4byte	.LVL1
 666 0004 0A000000 		.4byte	.LVL3
 667 0008 0100     		.2byte	0x1
 668 000a 50       		.byte	0x50
 669 000b 0A000000 		.4byte	.LVL3
 670 000f 16000000 		.4byte	.LVL8
 671 0013 0100     		.2byte	0x1
 672 0015 56       		.byte	0x56
 673 0016 16000000 		.4byte	.LVL8
 674 001a 18000000 		.4byte	.LFE1
 675 001e 0400     		.2byte	0x4
 676 0020 F3       		.byte	0xf3
 677 0021 01       		.uleb128 0x1
 678 0022 50       		.byte	0x50
 679 0023 9F       		.byte	0x9f
 680 0024 00000000 		.4byte	0
 681 0028 00000000 		.4byte	0
 682              	.LLST1:
 683 002c 00000000 		.4byte	.LVL1
 684 0030 0A000000 		.4byte	.LVL3
 685 0034 0100     		.2byte	0x1
 686 0036 51       		.byte	0x51
 687 0037 0A000000 		.4byte	.LVL3
 688 003b 16000000 		.4byte	.LVL7
 689 003f 0100     		.2byte	0x1
 690 0041 55       		.byte	0x55
 691 0042 16000000 		.4byte	.LVL7
 692 0046 18000000 		.4byte	.LFE1
 693 004a 0400     		.2byte	0x4
 694 004c F3       		.byte	0xf3
 695 004d 01       		.uleb128 0x1
 696 004e 51       		.byte	0x51
 697 004f 9F       		.byte	0x9f
 698 0050 00000000 		.4byte	0
 699 0054 00000000 		.4byte	0
 700              	.LLST2:
 701 0058 06000000 		.4byte	.LVL2
 702 005c 0A000000 		.4byte	.LVL3
 703 0060 0200     		.2byte	0x2
 704 0062 30       		.byte	0x30
 705 0063 9F       		.byte	0x9f
 706 0064 0A000000 		.4byte	.LVL3
 707 0068 16000000 		.4byte	.LVL6
 708 006c 0100     		.2byte	0x1
 709 006e 54       		.byte	0x54
 710 006f 00000000 		.4byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 22


 711 0073 00000000 		.4byte	0
 712              		.section	.debug_aranges,"",%progbits
 713 0000 44000000 		.4byte	0x44
 714 0004 0200     		.2byte	0x2
 715 0006 00000000 		.4byte	.Ldebug_info0
 716 000a 04       		.byte	0x4
 717 000b 00       		.byte	0
 718 000c 0000     		.2byte	0
 719 000e 0000     		.2byte	0
 720 0010 00000000 		.4byte	.LFB0
 721 0014 1C000000 		.4byte	.LFE0-.LFB0
 722 0018 00000000 		.4byte	.LFB1
 723 001c 18000000 		.4byte	.LFE1-.LFB1
 724 0020 00000000 		.4byte	.LFB2
 725 0024 10000000 		.4byte	.LFE2-.LFB2
 726 0028 00000000 		.4byte	.LFB3
 727 002c 20000000 		.4byte	.LFE3-.LFB3
 728 0030 00000000 		.4byte	.LFB4
 729 0034 10000000 		.4byte	.LFE4-.LFB4
 730 0038 00000000 		.4byte	.LFB5
 731 003c 10000000 		.4byte	.LFE5-.LFB5
 732 0040 00000000 		.4byte	0
 733 0044 00000000 		.4byte	0
 734              		.section	.debug_ranges,"",%progbits
 735              	.Ldebug_ranges0:
 736 0000 00000000 		.4byte	.LFB0
 737 0004 1C000000 		.4byte	.LFE0
 738 0008 00000000 		.4byte	.LFB1
 739 000c 18000000 		.4byte	.LFE1
 740 0010 00000000 		.4byte	.LFB2
 741 0014 10000000 		.4byte	.LFE2
 742 0018 00000000 		.4byte	.LFB3
 743 001c 20000000 		.4byte	.LFE3
 744 0020 00000000 		.4byte	.LFB4
 745 0024 10000000 		.4byte	.LFE4
 746 0028 00000000 		.4byte	.LFB5
 747 002c 10000000 		.4byte	.LFE5
 748 0030 00000000 		.4byte	0
 749 0034 00000000 		.4byte	0
 750              		.section	.debug_line,"",%progbits
 751              	.Ldebug_line0:
 752 0000 DA000000 		.section	.debug_str,"MS",%progbits,1
 752      02004A00 
 752      00000201 
 752      FB0E0D00 
 752      01010101 
 753              	.LASF14:
 754 0000 72656733 		.ascii	"reg32\000"
 754      3200
 755              	.LASF20:
 756 0006 636F756E 		.ascii	"count\000"
 756      7400
 757              	.LASF18:
 758 000c 74784461 		.ascii	"txData\000"
 758      746100
 759              	.LASF3:
 760 0013 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 23


 760      7420756E 
 760      7369676E 
 760      65642069 
 760      6E7400
 761              	.LASF8:
 762 0026 756E7369 		.ascii	"unsigned int\000"
 762      676E6564 
 762      20696E74 
 762      00
 763              	.LASF23:
 764 0033 55415254 		.ascii	"UART_SpiUartDisableIntRx\000"
 764      5F537069 
 764      55617274 
 764      44697361 
 764      626C6549 
 765              	.LASF11:
 766 004c 666C6F61 		.ascii	"float\000"
 766      7400
 767              	.LASF25:
 768 0052 55415254 		.ascii	"UART_SpiUartDisableIntTx\000"
 768      5F537069 
 768      55617274 
 768      44697361 
 768      626C6549 
 769              	.LASF21:
 770 006b 73697A65 		.ascii	"size\000"
 770      00
 771              	.LASF5:
 772 0070 6C6F6E67 		.ascii	"long unsigned int\000"
 772      20756E73 
 772      69676E65 
 772      6420696E 
 772      7400
 773              	.LASF9:
 774 0082 75696E74 		.ascii	"uint8\000"
 774      3800
 775              	.LASF19:
 776 0088 77724275 		.ascii	"wrBuf\000"
 776      6600
 777              	.LASF1:
 778 008e 756E7369 		.ascii	"unsigned char\000"
 778      676E6564 
 778      20636861 
 778      7200
 779              	.LASF12:
 780 009c 646F7562 		.ascii	"double\000"
 780      6C6500
 781              	.LASF10:
 782 00a3 75696E74 		.ascii	"uint32\000"
 782      333200
 783              	.LASF30:
 784 00aa 55415254 		.ascii	"UART_SpiUartClearTxBuffer\000"
 784      5F537069 
 784      55617274 
 784      436C6561 
 784      72547842 
 785              	.LASF17:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 24


 786 00c4 55415254 		.ascii	"UART_SpiUartPutArray\000"
 786      5F537069 
 786      55617274 
 786      50757441 
 786      72726179 
 787              	.LASF26:
 788 00d9 696E7453 		.ascii	"intSourceMask\000"
 788      6F757263 
 788      654D6173 
 788      6B00
 789              	.LASF24:
 790 00e7 696E7453 		.ascii	"intSource\000"
 790      6F757263 
 790      6500
 791              	.LASF7:
 792 00f1 6C6F6E67 		.ascii	"long long unsigned int\000"
 792      206C6F6E 
 792      6720756E 
 792      7369676E 
 792      65642069 
 793              	.LASF15:
 794 0108 73697A65 		.ascii	"sizetype\000"
 794      74797065 
 794      00
 795              	.LASF6:
 796 0111 6C6F6E67 		.ascii	"long long int\000"
 796      206C6F6E 
 796      6720696E 
 796      7400
 797              	.LASF16:
 798 011f 55415254 		.ascii	"UART_SpiUartWriteTxData\000"
 798      5F537069 
 798      55617274 
 798      57726974 
 798      65547844 
 799              	.LASF22:
 800 0137 55415254 		.ascii	"UART_SpiUartGetTxBufferSize\000"
 800      5F537069 
 800      55617274 
 800      47657454 
 800      78427566 
 801              	.LASF27:
 802 0153 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 802      4320342E 
 802      392E3320 
 802      32303135 
 802      30333033 
 803 0186 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 803      20726576 
 803      6973696F 
 803      6E203232 
 803      31323230 
 804 01b9 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 804      66756E63 
 804      74696F6E 
 804      2D736563 
 804      74696F6E 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cc9uH8TP.s 			page 25


 805              	.LASF2:
 806 01e1 73686F72 		.ascii	"short int\000"
 806      7420696E 
 806      7400
 807              	.LASF28:
 808 01eb 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_SPI_UART.c\000"
 808      72617465 
 808      645F536F 
 808      75726365 
 808      5C50536F 
 809              	.LASF4:
 810 0212 6C6F6E67 		.ascii	"long int\000"
 810      20696E74 
 810      00
 811              	.LASF13:
 812 021b 63686172 		.ascii	"char\000"
 812      00
 813              	.LASF29:
 814 0220 433A5C55 		.ascii	"C:\\Users\\a85495\\Desktop\\PSoC-Quadcopter\\Sensor"
 814      73657273 
 814      5C613835 
 814      3439355C 
 814      4465736B 
 815 024e 735C5365 		.ascii	"s\\Sensor Test\\Base Station.cydsn\000"
 815      6E736F72 
 815      20546573 
 815      745C4261 
 815      73652053 
 816              	.LASF0:
 817 026f 7369676E 		.ascii	"signed char\000"
 817      65642063 
 817      68617200 
 818              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
