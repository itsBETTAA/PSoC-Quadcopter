ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"serial_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.serial_UartInit,"ax",%progbits
  18              		.align	2
  19              		.global	serial_UartInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	serial_UartInit, %function
  23              	serial_UartInit:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\serial_UART.c"
   1:Generated_Source\PSoC4/serial_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/serial_UART.c **** * \file serial_UART.c
   3:Generated_Source\PSoC4/serial_UART.c **** * \version 3.20
   4:Generated_Source\PSoC4/serial_UART.c **** *
   5:Generated_Source\PSoC4/serial_UART.c **** * \brief
   6:Generated_Source\PSoC4/serial_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/serial_UART.c **** *  UART mode.
   8:Generated_Source\PSoC4/serial_UART.c **** *
   9:Generated_Source\PSoC4/serial_UART.c **** * Note:
  10:Generated_Source\PSoC4/serial_UART.c **** *
  11:Generated_Source\PSoC4/serial_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/serial_UART.c **** * \copyright
  13:Generated_Source\PSoC4/serial_UART.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/serial_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/serial_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/serial_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/serial_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/serial_UART.c **** 
  19:Generated_Source\PSoC4/serial_UART.c **** #include "serial_PVT.h"
  20:Generated_Source\PSoC4/serial_UART.c **** #include "serial_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/serial_UART.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/serial_UART.c **** 
  23:Generated_Source\PSoC4/serial_UART.c **** #if (serial_UART_WAKE_ENABLE_CONST && serial_UART_RX_WAKEUP_IRQ)
  24:Generated_Source\PSoC4/serial_UART.c ****     /**
  25:Generated_Source\PSoC4/serial_UART.c ****     * \addtogroup group_globals
  26:Generated_Source\PSoC4/serial_UART.c ****     * \{
  27:Generated_Source\PSoC4/serial_UART.c ****     */
  28:Generated_Source\PSoC4/serial_UART.c ****     /** This global variable determines whether to enable Skip Start
  29:Generated_Source\PSoC4/serial_UART.c ****     * functionality when serial_Sleep() function is called:
  30:Generated_Source\PSoC4/serial_UART.c ****     * 0 – disable, other values – enable. Default value is 1.
  31:Generated_Source\PSoC4/serial_UART.c ****     * It is only available when Enable wakeup from Deep Sleep Mode is enabled.
  32:Generated_Source\PSoC4/serial_UART.c ****     */
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 2


  33:Generated_Source\PSoC4/serial_UART.c ****     uint8 serial_skipStart = 1u;
  34:Generated_Source\PSoC4/serial_UART.c ****     /** \} globals */
  35:Generated_Source\PSoC4/serial_UART.c **** #endif /* (serial_UART_WAKE_ENABLE_CONST && serial_UART_RX_WAKEUP_IRQ) */
  36:Generated_Source\PSoC4/serial_UART.c **** 
  37:Generated_Source\PSoC4/serial_UART.c **** #if(serial_SCB_MODE_UNCONFIG_CONST_CFG)
  38:Generated_Source\PSoC4/serial_UART.c **** 
  39:Generated_Source\PSoC4/serial_UART.c ****     /***************************************
  40:Generated_Source\PSoC4/serial_UART.c ****     *  Configuration Structure Initialization
  41:Generated_Source\PSoC4/serial_UART.c ****     ***************************************/
  42:Generated_Source\PSoC4/serial_UART.c **** 
  43:Generated_Source\PSoC4/serial_UART.c ****     const serial_UART_INIT_STRUCT serial_configUart =
  44:Generated_Source\PSoC4/serial_UART.c ****     {
  45:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_SUB_MODE,
  46:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_DIRECTION,
  47:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_DATA_BITS_NUM,
  48:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_PARITY_TYPE,
  49:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_STOP_BITS_NUM,
  50:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_OVS_FACTOR,
  51:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_IRDA_LOW_POWER,
  52:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_MEDIAN_FILTER_ENABLE,
  53:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_RETRY_ON_NACK,
  54:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_IRDA_POLARITY,
  55:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_DROP_ON_PARITY_ERR,
  56:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_DROP_ON_FRAME_ERR,
  57:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_WAKE_ENABLE,
  58:Generated_Source\PSoC4/serial_UART.c ****         0u,
  59:Generated_Source\PSoC4/serial_UART.c ****         NULL,
  60:Generated_Source\PSoC4/serial_UART.c ****         0u,
  61:Generated_Source\PSoC4/serial_UART.c ****         NULL,
  62:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_MP_MODE_ENABLE,
  63:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_MP_ACCEPT_ADDRESS,
  64:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_MP_RX_ADDRESS,
  65:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_MP_RX_ADDRESS_MASK,
  66:Generated_Source\PSoC4/serial_UART.c ****         (uint32) serial_SCB_IRQ_INTERNAL,
  67:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_INTR_RX_MASK,
  68:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_RX_TRIGGER_LEVEL,
  69:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_INTR_TX_MASK,
  70:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_TX_TRIGGER_LEVEL,
  71:Generated_Source\PSoC4/serial_UART.c ****         (uint8) serial_UART_BYTE_MODE_ENABLE,
  72:Generated_Source\PSoC4/serial_UART.c ****         (uint8) serial_UART_CTS_ENABLE,
  73:Generated_Source\PSoC4/serial_UART.c ****         (uint8) serial_UART_CTS_POLARITY,
  74:Generated_Source\PSoC4/serial_UART.c ****         (uint8) serial_UART_RTS_POLARITY,
  75:Generated_Source\PSoC4/serial_UART.c ****         (uint8) serial_UART_RTS_FIFO_LEVEL
  76:Generated_Source\PSoC4/serial_UART.c ****     };
  77:Generated_Source\PSoC4/serial_UART.c **** 
  78:Generated_Source\PSoC4/serial_UART.c **** 
  79:Generated_Source\PSoC4/serial_UART.c ****     /*******************************************************************************
  80:Generated_Source\PSoC4/serial_UART.c ****     * Function Name: serial_UartInit
  81:Generated_Source\PSoC4/serial_UART.c ****     ****************************************************************************//**
  82:Generated_Source\PSoC4/serial_UART.c ****     *
  83:Generated_Source\PSoC4/serial_UART.c ****     *  Configures the serial for UART operation.
  84:Generated_Source\PSoC4/serial_UART.c ****     *
  85:Generated_Source\PSoC4/serial_UART.c ****     *  This function is intended specifically to be used when the serial
  86:Generated_Source\PSoC4/serial_UART.c ****     *  configuration is set to “Unconfigured serial” in the customizer.
  87:Generated_Source\PSoC4/serial_UART.c ****     *  After initializing the serial in UART mode using this function,
  88:Generated_Source\PSoC4/serial_UART.c ****     *  the component can be enabled using the serial_Start() or
  89:Generated_Source\PSoC4/serial_UART.c ****     * serial_Enable() function.
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 3


  90:Generated_Source\PSoC4/serial_UART.c ****     *  This function uses a pointer to a structure that provides the configuration
  91:Generated_Source\PSoC4/serial_UART.c ****     *  settings. This structure contains the same information that would otherwise
  92:Generated_Source\PSoC4/serial_UART.c ****     *  be provided by the customizer settings.
  93:Generated_Source\PSoC4/serial_UART.c ****     *
  94:Generated_Source\PSoC4/serial_UART.c ****     *  \param config: pointer to a structure that contains the following list of
  95:Generated_Source\PSoC4/serial_UART.c ****     *   fields. These fields match the selections available in the customizer.
  96:Generated_Source\PSoC4/serial_UART.c ****     *   Refer to the customizer for further description of the settings.
  97:Generated_Source\PSoC4/serial_UART.c ****     *
  98:Generated_Source\PSoC4/serial_UART.c ****     *******************************************************************************/
  99:Generated_Source\PSoC4/serial_UART.c ****     void serial_UartInit(const serial_UART_INIT_STRUCT *config)
 100:Generated_Source\PSoC4/serial_UART.c ****     {
 101:Generated_Source\PSoC4/serial_UART.c ****         uint32 pinsConfig;
 102:Generated_Source\PSoC4/serial_UART.c **** 
 103:Generated_Source\PSoC4/serial_UART.c ****         if (NULL == config)
 104:Generated_Source\PSoC4/serial_UART.c ****         {
 105:Generated_Source\PSoC4/serial_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
 106:Generated_Source\PSoC4/serial_UART.c ****         }
 107:Generated_Source\PSoC4/serial_UART.c ****         else
 108:Generated_Source\PSoC4/serial_UART.c ****         {
 109:Generated_Source\PSoC4/serial_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
 110:Generated_Source\PSoC4/serial_UART.c ****             pinsConfig  = config->direction;
 111:Generated_Source\PSoC4/serial_UART.c **** 
 112:Generated_Source\PSoC4/serial_UART.c ****         #if !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1)
 113:Generated_Source\PSoC4/serial_UART.c ****             /* Add RTS and CTS pins to configure */
 114:Generated_Source\PSoC4/serial_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (serial_UART_RTS_PIN_ENABLE) : (0u);
 115:Generated_Source\PSoC4/serial_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (serial_UART_CTS_PIN_ENABLE) : (0u);
 116:Generated_Source\PSoC4/serial_UART.c ****         #endif /* !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1) */
 117:Generated_Source\PSoC4/serial_UART.c **** 
 118:Generated_Source\PSoC4/serial_UART.c ****             /* Configure pins */
 119:Generated_Source\PSoC4/serial_UART.c ****             serial_SetPins(serial_SCB_MODE_UART, config->mode, pinsConfig);
 120:Generated_Source\PSoC4/serial_UART.c **** 
 121:Generated_Source\PSoC4/serial_UART.c ****             /* Store internal configuration */
 122:Generated_Source\PSoC4/serial_UART.c ****             serial_scbMode       = (uint8) serial_SCB_MODE_UART;
 123:Generated_Source\PSoC4/serial_UART.c ****             serial_scbEnableWake = (uint8) config->enableWake;
 124:Generated_Source\PSoC4/serial_UART.c ****             serial_scbEnableIntr = (uint8) config->enableInterrupt;
 125:Generated_Source\PSoC4/serial_UART.c **** 
 126:Generated_Source\PSoC4/serial_UART.c ****             /* Set RX direction internal variables */
 127:Generated_Source\PSoC4/serial_UART.c ****             serial_rxBuffer      =         config->rxBuffer;
 128:Generated_Source\PSoC4/serial_UART.c ****             serial_rxDataBits    = (uint8) config->dataBits;
 129:Generated_Source\PSoC4/serial_UART.c ****             serial_rxBufferSize  = (uint8) config->rxBufferSize;
 130:Generated_Source\PSoC4/serial_UART.c **** 
 131:Generated_Source\PSoC4/serial_UART.c ****             /* Set TX direction internal variables */
 132:Generated_Source\PSoC4/serial_UART.c ****             serial_txBuffer      =         config->txBuffer;
 133:Generated_Source\PSoC4/serial_UART.c ****             serial_txDataBits    = (uint8) config->dataBits;
 134:Generated_Source\PSoC4/serial_UART.c ****             serial_txBufferSize  = (uint8) config->txBufferSize;
 135:Generated_Source\PSoC4/serial_UART.c **** 
 136:Generated_Source\PSoC4/serial_UART.c ****             /* Configure UART interface */
 137:Generated_Source\PSoC4/serial_UART.c ****             if(serial_UART_MODE_IRDA == config->mode)
 138:Generated_Source\PSoC4/serial_UART.c ****             {
 139:Generated_Source\PSoC4/serial_UART.c ****                 /* OVS settings: IrDA */
 140:Generated_Source\PSoC4/serial_UART.c ****                 serial_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 141:Generated_Source\PSoC4/serial_UART.c ****                                                 (serial_UART_GET_CTRL_OVS_IRDA_LP(config->oversampl
 142:Generated_Source\PSoC4/serial_UART.c ****                                                 (serial_CTRL_OVS_IRDA_OVS16));
 143:Generated_Source\PSoC4/serial_UART.c ****             }
 144:Generated_Source\PSoC4/serial_UART.c ****             else
 145:Generated_Source\PSoC4/serial_UART.c ****             {
 146:Generated_Source\PSoC4/serial_UART.c ****                 /* OVS settings: UART and SmartCard */
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 4


 147:Generated_Source\PSoC4/serial_UART.c ****                 serial_CTRL_REG  = serial_GET_CTRL_OVS(config->oversample);
 148:Generated_Source\PSoC4/serial_UART.c ****             }
 149:Generated_Source\PSoC4/serial_UART.c **** 
 150:Generated_Source\PSoC4/serial_UART.c ****             serial_CTRL_REG     |= serial_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 151:Generated_Source\PSoC4/serial_UART.c ****                                              serial_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAdd
 152:Generated_Source\PSoC4/serial_UART.c ****                                              serial_CTRL_UART;
 153:Generated_Source\PSoC4/serial_UART.c **** 
 154:Generated_Source\PSoC4/serial_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 155:Generated_Source\PSoC4/serial_UART.c ****             serial_UART_CTRL_REG = serial_GET_UART_CTRL_MODE(config->mode);
 156:Generated_Source\PSoC4/serial_UART.c **** 
 157:Generated_Source\PSoC4/serial_UART.c ****             /* Configure RX direction */
 158:Generated_Source\PSoC4/serial_UART.c ****             serial_UART_RX_CTRL_REG = serial_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 159:Generated_Source\PSoC4/serial_UART.c ****                                         serial_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx) 
 160:Generated_Source\PSoC4/serial_UART.c ****                                         serial_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)   
 161:Generated_Source\PSoC4/serial_UART.c ****                                         serial_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPa
 162:Generated_Source\PSoC4/serial_UART.c ****                                         serial_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFra
 163:Generated_Source\PSoC4/serial_UART.c **** 
 164:Generated_Source\PSoC4/serial_UART.c ****             if(serial_UART_PARITY_NONE != config->parity)
 165:Generated_Source\PSoC4/serial_UART.c ****             {
 166:Generated_Source\PSoC4/serial_UART.c ****                serial_UART_RX_CTRL_REG |= serial_GET_UART_RX_CTRL_PARITY(config->parity) |
 167:Generated_Source\PSoC4/serial_UART.c ****                                                     serial_UART_RX_CTRL_PARITY_ENABLED;
 168:Generated_Source\PSoC4/serial_UART.c ****             }
 169:Generated_Source\PSoC4/serial_UART.c **** 
 170:Generated_Source\PSoC4/serial_UART.c ****             serial_RX_CTRL_REG      = serial_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 171:Generated_Source\PSoC4/serial_UART.c ****                                                 serial_GET_RX_CTRL_MEDIAN(config->enableMedianFilte
 172:Generated_Source\PSoC4/serial_UART.c ****                                                 serial_GET_UART_RX_CTRL_ENABLED(config->direction);
 173:Generated_Source\PSoC4/serial_UART.c **** 
 174:Generated_Source\PSoC4/serial_UART.c ****             serial_RX_FIFO_CTRL_REG = serial_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel)
 175:Generated_Source\PSoC4/serial_UART.c **** 
 176:Generated_Source\PSoC4/serial_UART.c ****             /* Configure MP address */
 177:Generated_Source\PSoC4/serial_UART.c ****             serial_RX_MATCH_REG     = serial_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 178:Generated_Source\PSoC4/serial_UART.c ****                                                 serial_GET_RX_MATCH_MASK(config->multiprocAddrMask)
 179:Generated_Source\PSoC4/serial_UART.c **** 
 180:Generated_Source\PSoC4/serial_UART.c ****             /* Configure RX direction */
 181:Generated_Source\PSoC4/serial_UART.c ****             serial_UART_TX_CTRL_REG = serial_GET_UART_TX_CTRL_MODE(config->stopBits) |
 182:Generated_Source\PSoC4/serial_UART.c ****                                                 serial_GET_UART_TX_CTRL_RETRY_NACK(config->enableRe
 183:Generated_Source\PSoC4/serial_UART.c **** 
 184:Generated_Source\PSoC4/serial_UART.c ****             if(serial_UART_PARITY_NONE != config->parity)
 185:Generated_Source\PSoC4/serial_UART.c ****             {
 186:Generated_Source\PSoC4/serial_UART.c ****                serial_UART_TX_CTRL_REG |= serial_GET_UART_TX_CTRL_PARITY(config->parity) |
 187:Generated_Source\PSoC4/serial_UART.c ****                                                     serial_UART_TX_CTRL_PARITY_ENABLED;
 188:Generated_Source\PSoC4/serial_UART.c ****             }
 189:Generated_Source\PSoC4/serial_UART.c **** 
 190:Generated_Source\PSoC4/serial_UART.c ****             serial_TX_CTRL_REG      = serial_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 191:Generated_Source\PSoC4/serial_UART.c ****                                                 serial_GET_UART_TX_CTRL_ENABLED(config->direction);
 192:Generated_Source\PSoC4/serial_UART.c **** 
 193:Generated_Source\PSoC4/serial_UART.c ****             serial_TX_FIFO_CTRL_REG = serial_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel)
 194:Generated_Source\PSoC4/serial_UART.c **** 
 195:Generated_Source\PSoC4/serial_UART.c ****         #if !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1)
 196:Generated_Source\PSoC4/serial_UART.c ****             serial_UART_FLOW_CTRL_REG = serial_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 197:Generated_Source\PSoC4/serial_UART.c ****                                             serial_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPola
 198:Generated_Source\PSoC4/serial_UART.c ****                                             serial_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPola
 199:Generated_Source\PSoC4/serial_UART.c ****                                             serial_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFi
 200:Generated_Source\PSoC4/serial_UART.c ****         #endif /* !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1) */
 201:Generated_Source\PSoC4/serial_UART.c **** 
 202:Generated_Source\PSoC4/serial_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 203:Generated_Source\PSoC4/serial_UART.c ****             CyIntDisable    (serial_ISR_NUMBER);
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 5


 204:Generated_Source\PSoC4/serial_UART.c ****             CyIntSetPriority(serial_ISR_NUMBER, serial_ISR_PRIORITY);
 205:Generated_Source\PSoC4/serial_UART.c ****             (void) CyIntSetVector(serial_ISR_NUMBER, &serial_SPI_UART_ISR);
 206:Generated_Source\PSoC4/serial_UART.c **** 
 207:Generated_Source\PSoC4/serial_UART.c ****             /* Configure WAKE interrupt */
 208:Generated_Source\PSoC4/serial_UART.c ****         #if(serial_UART_RX_WAKEUP_IRQ)
 209:Generated_Source\PSoC4/serial_UART.c ****             CyIntDisable    (serial_RX_WAKE_ISR_NUMBER);
 210:Generated_Source\PSoC4/serial_UART.c ****             CyIntSetPriority(serial_RX_WAKE_ISR_NUMBER, serial_RX_WAKE_ISR_PRIORITY);
 211:Generated_Source\PSoC4/serial_UART.c ****             (void) CyIntSetVector(serial_RX_WAKE_ISR_NUMBER, &serial_UART_WAKEUP_ISR);
 212:Generated_Source\PSoC4/serial_UART.c ****         #endif /* (serial_UART_RX_WAKEUP_IRQ) */
 213:Generated_Source\PSoC4/serial_UART.c **** 
 214:Generated_Source\PSoC4/serial_UART.c ****             /* Configure interrupt sources */
 215:Generated_Source\PSoC4/serial_UART.c ****             serial_INTR_I2C_EC_MASK_REG = serial_NO_INTR_SOURCES;
 216:Generated_Source\PSoC4/serial_UART.c ****             serial_INTR_SPI_EC_MASK_REG = serial_NO_INTR_SOURCES;
 217:Generated_Source\PSoC4/serial_UART.c ****             serial_INTR_SLAVE_MASK_REG  = serial_NO_INTR_SOURCES;
 218:Generated_Source\PSoC4/serial_UART.c ****             serial_INTR_MASTER_MASK_REG = serial_NO_INTR_SOURCES;
 219:Generated_Source\PSoC4/serial_UART.c ****             serial_INTR_RX_MASK_REG     = config->rxInterruptMask;
 220:Generated_Source\PSoC4/serial_UART.c ****             serial_INTR_TX_MASK_REG     = config->txInterruptMask;
 221:Generated_Source\PSoC4/serial_UART.c ****         
 222:Generated_Source\PSoC4/serial_UART.c ****             /* Configure TX interrupt sources to restore. */
 223:Generated_Source\PSoC4/serial_UART.c ****             serial_IntrTxMask = LO16(serial_INTR_TX_MASK_REG);
 224:Generated_Source\PSoC4/serial_UART.c **** 
 225:Generated_Source\PSoC4/serial_UART.c ****             /* Clear RX buffer indexes */
 226:Generated_Source\PSoC4/serial_UART.c ****             serial_rxBufferHead     = 0u;
 227:Generated_Source\PSoC4/serial_UART.c ****             serial_rxBufferTail     = 0u;
 228:Generated_Source\PSoC4/serial_UART.c ****             serial_rxBufferOverflow = 0u;
 229:Generated_Source\PSoC4/serial_UART.c **** 
 230:Generated_Source\PSoC4/serial_UART.c ****             /* Clear TX buffer indexes */
 231:Generated_Source\PSoC4/serial_UART.c ****             serial_txBufferHead = 0u;
 232:Generated_Source\PSoC4/serial_UART.c ****             serial_txBufferTail = 0u;
 233:Generated_Source\PSoC4/serial_UART.c ****         }
 234:Generated_Source\PSoC4/serial_UART.c ****     }
 235:Generated_Source\PSoC4/serial_UART.c **** 
 236:Generated_Source\PSoC4/serial_UART.c **** #else
 237:Generated_Source\PSoC4/serial_UART.c **** 
 238:Generated_Source\PSoC4/serial_UART.c ****     /*******************************************************************************
 239:Generated_Source\PSoC4/serial_UART.c ****     * Function Name: serial_UartInit
 240:Generated_Source\PSoC4/serial_UART.c ****     ****************************************************************************//**
 241:Generated_Source\PSoC4/serial_UART.c ****     *
 242:Generated_Source\PSoC4/serial_UART.c ****     *  Configures the SCB for the UART operation.
 243:Generated_Source\PSoC4/serial_UART.c ****     *
 244:Generated_Source\PSoC4/serial_UART.c ****     *******************************************************************************/
 245:Generated_Source\PSoC4/serial_UART.c ****     void serial_UartInit(void)
 246:Generated_Source\PSoC4/serial_UART.c ****     {
  26              		.loc 1 246 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 4, -8
  31              		.cfi_offset 14, -4
 247:Generated_Source\PSoC4/serial_UART.c ****         /* Configure UART interface */
 248:Generated_Source\PSoC4/serial_UART.c ****         serial_CTRL_REG = serial_UART_DEFAULT_CTRL;
  32              		.loc 1 248 0
  33 0002 1B4A     		ldr	r2, .L2
  34 0004 1B4B     		ldr	r3, .L2+4
  35 0006 1A60     		str	r2, [r3]
 249:Generated_Source\PSoC4/serial_UART.c **** 
 250:Generated_Source\PSoC4/serial_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 6


 251:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_CTRL_REG = serial_UART_DEFAULT_UART_CTRL;
  36              		.loc 1 251 0
  37 0008 0024     		mov	r4, #0
  38 000a 1B4B     		ldr	r3, .L2+8
  39 000c 1C60     		str	r4, [r3]
 252:Generated_Source\PSoC4/serial_UART.c **** 
 253:Generated_Source\PSoC4/serial_UART.c ****         /* Configure RX direction */
 254:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_RX_CTRL_REG = serial_UART_DEFAULT_UART_RX_CTRL;
  40              		.loc 1 254 0
  41 000e 0122     		mov	r2, #1
  42 0010 1A4B     		ldr	r3, .L2+12
  43 0012 1A60     		str	r2, [r3]
 255:Generated_Source\PSoC4/serial_UART.c ****         serial_RX_CTRL_REG      = serial_UART_DEFAULT_RX_CTRL;
  44              		.loc 1 255 0
  45 0014 1A4B     		ldr	r3, .L2+16
  46 0016 1B49     		ldr	r1, .L2+20
  47 0018 0B60     		str	r3, [r1]
 256:Generated_Source\PSoC4/serial_UART.c ****         serial_RX_FIFO_CTRL_REG = serial_UART_DEFAULT_RX_FIFO_CTRL;
  48              		.loc 1 256 0
  49 001a 0720     		mov	r0, #7
  50 001c 1A49     		ldr	r1, .L2+24
  51 001e 0860     		str	r0, [r1]
 257:Generated_Source\PSoC4/serial_UART.c ****         serial_RX_MATCH_REG     = serial_UART_DEFAULT_RX_MATCH_REG;
  52              		.loc 1 257 0
  53 0020 1A49     		ldr	r1, .L2+28
  54 0022 0C60     		str	r4, [r1]
 258:Generated_Source\PSoC4/serial_UART.c **** 
 259:Generated_Source\PSoC4/serial_UART.c ****         /* Configure TX direction */
 260:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_TX_CTRL_REG = serial_UART_DEFAULT_UART_TX_CTRL;
  55              		.loc 1 260 0
  56 0024 1A49     		ldr	r1, .L2+32
  57 0026 0A60     		str	r2, [r1]
 261:Generated_Source\PSoC4/serial_UART.c ****         serial_TX_CTRL_REG      = serial_UART_DEFAULT_TX_CTRL;
  58              		.loc 1 261 0
  59 0028 1A4A     		ldr	r2, .L2+36
  60 002a 1360     		str	r3, [r2]
 262:Generated_Source\PSoC4/serial_UART.c ****         serial_TX_FIFO_CTRL_REG = serial_UART_DEFAULT_TX_FIFO_CTRL;
  61              		.loc 1 262 0
  62 002c 1A4B     		ldr	r3, .L2+40
  63 002e 1C60     		str	r4, [r3]
 263:Generated_Source\PSoC4/serial_UART.c **** 
 264:Generated_Source\PSoC4/serial_UART.c ****     #if !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1)
 265:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_FLOW_CTRL_REG = serial_UART_DEFAULT_FLOW_CTRL;
 266:Generated_Source\PSoC4/serial_UART.c ****     #endif /* !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1) */
 267:Generated_Source\PSoC4/serial_UART.c **** 
 268:Generated_Source\PSoC4/serial_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 269:Generated_Source\PSoC4/serial_UART.c ****     #if(serial_SCB_IRQ_INTERNAL)
 270:Generated_Source\PSoC4/serial_UART.c ****         CyIntDisable    (serial_ISR_NUMBER);
  64              		.loc 1 270 0
  65 0030 0430     		add	r0, r0, #4
  66 0032 FFF7FEFF 		bl	CyIntDisable
  67              	.LVL0:
 271:Generated_Source\PSoC4/serial_UART.c ****         CyIntSetPriority(serial_ISR_NUMBER, serial_ISR_PRIORITY);
  68              		.loc 1 271 0
  69 0036 0B20     		mov	r0, #11
  70 0038 0321     		mov	r1, #3
  71 003a FFF7FEFF 		bl	CyIntSetPriority
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 7


  72              	.LVL1:
 272:Generated_Source\PSoC4/serial_UART.c ****         (void) CyIntSetVector(serial_ISR_NUMBER, &serial_SPI_UART_ISR);
  73              		.loc 1 272 0
  74 003e 0B20     		mov	r0, #11
  75 0040 1649     		ldr	r1, .L2+44
  76 0042 FFF7FEFF 		bl	CyIntSetVector
  77              	.LVL2:
 273:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_SCB_IRQ_INTERNAL) */
 274:Generated_Source\PSoC4/serial_UART.c **** 
 275:Generated_Source\PSoC4/serial_UART.c ****         /* Configure WAKE interrupt */
 276:Generated_Source\PSoC4/serial_UART.c ****     #if(serial_UART_RX_WAKEUP_IRQ)
 277:Generated_Source\PSoC4/serial_UART.c ****         CyIntDisable    (serial_RX_WAKE_ISR_NUMBER);
 278:Generated_Source\PSoC4/serial_UART.c ****         CyIntSetPriority(serial_RX_WAKE_ISR_NUMBER, serial_RX_WAKE_ISR_PRIORITY);
 279:Generated_Source\PSoC4/serial_UART.c ****         (void) CyIntSetVector(serial_RX_WAKE_ISR_NUMBER, &serial_UART_WAKEUP_ISR);
 280:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_UART_RX_WAKEUP_IRQ) */
 281:Generated_Source\PSoC4/serial_UART.c **** 
 282:Generated_Source\PSoC4/serial_UART.c ****         /* Configure interrupt sources */
 283:Generated_Source\PSoC4/serial_UART.c ****         serial_INTR_I2C_EC_MASK_REG = serial_UART_DEFAULT_INTR_I2C_EC_MASK;
  78              		.loc 1 283 0
  79 0046 164B     		ldr	r3, .L2+48
  80 0048 1C60     		str	r4, [r3]
 284:Generated_Source\PSoC4/serial_UART.c ****         serial_INTR_SPI_EC_MASK_REG = serial_UART_DEFAULT_INTR_SPI_EC_MASK;
  81              		.loc 1 284 0
  82 004a 164B     		ldr	r3, .L2+52
  83 004c 1C60     		str	r4, [r3]
 285:Generated_Source\PSoC4/serial_UART.c ****         serial_INTR_SLAVE_MASK_REG  = serial_UART_DEFAULT_INTR_SLAVE_MASK;
  84              		.loc 1 285 0
  85 004e 164B     		ldr	r3, .L2+56
  86 0050 1C60     		str	r4, [r3]
 286:Generated_Source\PSoC4/serial_UART.c ****         serial_INTR_MASTER_MASK_REG = serial_UART_DEFAULT_INTR_MASTER_MASK;
  87              		.loc 1 286 0
  88 0052 164B     		ldr	r3, .L2+60
  89 0054 1C60     		str	r4, [r3]
 287:Generated_Source\PSoC4/serial_UART.c ****         serial_INTR_RX_MASK_REG     = serial_UART_DEFAULT_INTR_RX_MASK;
  90              		.loc 1 287 0
  91 0056 164B     		ldr	r3, .L2+64
  92 0058 1C60     		str	r4, [r3]
 288:Generated_Source\PSoC4/serial_UART.c ****         serial_INTR_TX_MASK_REG     = serial_UART_DEFAULT_INTR_TX_MASK;
  93              		.loc 1 288 0
  94 005a 164B     		ldr	r3, .L2+68
  95 005c 1C60     		str	r4, [r3]
 289:Generated_Source\PSoC4/serial_UART.c ****     
 290:Generated_Source\PSoC4/serial_UART.c ****         /* Configure TX interrupt sources to restore. */
 291:Generated_Source\PSoC4/serial_UART.c ****         serial_IntrTxMask = LO16(serial_INTR_TX_MASK_REG);
  96              		.loc 1 291 0
  97 005e 1A68     		ldr	r2, [r3]
  98 0060 154B     		ldr	r3, .L2+72
  99 0062 1A80     		strh	r2, [r3]
 292:Generated_Source\PSoC4/serial_UART.c **** 
 293:Generated_Source\PSoC4/serial_UART.c ****     #if(serial_INTERNAL_RX_SW_BUFFER_CONST)
 294:Generated_Source\PSoC4/serial_UART.c ****         serial_rxBufferHead     = 0u;
 295:Generated_Source\PSoC4/serial_UART.c ****         serial_rxBufferTail     = 0u;
 296:Generated_Source\PSoC4/serial_UART.c ****         serial_rxBufferOverflow = 0u;
 297:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_INTERNAL_RX_SW_BUFFER_CONST) */
 298:Generated_Source\PSoC4/serial_UART.c **** 
 299:Generated_Source\PSoC4/serial_UART.c ****     #if(serial_INTERNAL_TX_SW_BUFFER_CONST)
 300:Generated_Source\PSoC4/serial_UART.c ****         serial_txBufferHead = 0u;
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 8


 100              		.loc 1 300 0
 101 0064 154B     		ldr	r3, .L2+76
 102 0066 1C60     		str	r4, [r3]
 301:Generated_Source\PSoC4/serial_UART.c ****         serial_txBufferTail = 0u;
 103              		.loc 1 301 0
 104 0068 154B     		ldr	r3, .L2+80
 105 006a 1C60     		str	r4, [r3]
 302:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_INTERNAL_TX_SW_BUFFER_CONST) */
 303:Generated_Source\PSoC4/serial_UART.c ****     }
 106              		.loc 1 303 0
 107              		@ sp needed
 108 006c 10BD     		pop	{r4, pc}
 109              	.L3:
 110 006e C046     		.align	2
 111              	.L2:
 112 0070 0B000002 		.word	33554443
 113 0074 00000740 		.word	1074200576
 114 0078 40000740 		.word	1074200640
 115 007c 48000740 		.word	1074200648
 116 0080 07000080 		.word	-2147483641
 117 0084 00030740 		.word	1074201344
 118 0088 04030740 		.word	1074201348
 119 008c 10030740 		.word	1074201360
 120 0090 44000740 		.word	1074200644
 121 0094 00020740 		.word	1074201088
 122 0098 04020740 		.word	1074201092
 123 009c 00000000 		.word	serial_SPI_UART_ISR
 124 00a0 880E0740 		.word	1074204296
 125 00a4 C80E0740 		.word	1074204360
 126 00a8 480F0740 		.word	1074204488
 127 00ac 080F0740 		.word	1074204424
 128 00b0 C80F0740 		.word	1074204616
 129 00b4 880F0740 		.word	1074204552
 130 00b8 00000000 		.word	serial_IntrTxMask
 131 00bc 00000000 		.word	serial_txBufferHead
 132 00c0 00000000 		.word	serial_txBufferTail
 133              		.cfi_endproc
 134              	.LFE0:
 135              		.size	serial_UartInit, .-serial_UartInit
 136              		.section	.text.serial_UartPostEnable,"ax",%progbits
 137              		.align	2
 138              		.global	serial_UartPostEnable
 139              		.code	16
 140              		.thumb_func
 141              		.type	serial_UartPostEnable, %function
 142              	serial_UartPostEnable:
 143              	.LFB1:
 304:Generated_Source\PSoC4/serial_UART.c **** #endif /* (serial_SCB_MODE_UNCONFIG_CONST_CFG) */
 305:Generated_Source\PSoC4/serial_UART.c **** 
 306:Generated_Source\PSoC4/serial_UART.c **** 
 307:Generated_Source\PSoC4/serial_UART.c **** /*******************************************************************************
 308:Generated_Source\PSoC4/serial_UART.c **** * Function Name: serial_UartPostEnable
 309:Generated_Source\PSoC4/serial_UART.c **** ****************************************************************************//**
 310:Generated_Source\PSoC4/serial_UART.c **** *
 311:Generated_Source\PSoC4/serial_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be
 312:Generated_Source\PSoC4/serial_UART.c **** *  controlled by the SCB UART.
 313:Generated_Source\PSoC4/serial_UART.c **** *
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 9


 314:Generated_Source\PSoC4/serial_UART.c **** *******************************************************************************/
 315:Generated_Source\PSoC4/serial_UART.c **** void serial_UartPostEnable(void)
 316:Generated_Source\PSoC4/serial_UART.c **** {
 144              		.loc 1 316 0
 145              		.cfi_startproc
 317:Generated_Source\PSoC4/serial_UART.c **** #if (serial_SCB_MODE_UNCONFIG_CONST_CFG)
 318:Generated_Source\PSoC4/serial_UART.c ****     #if (serial_TX_SDA_MISO_PIN)
 319:Generated_Source\PSoC4/serial_UART.c ****         if (serial_CHECK_TX_SDA_MISO_PIN_USED)
 320:Generated_Source\PSoC4/serial_UART.c ****         {
 321:Generated_Source\PSoC4/serial_UART.c ****             /* Set SCB UART to drive the output pin */
 322:Generated_Source\PSoC4/serial_UART.c ****             serial_SET_HSIOM_SEL(serial_TX_SDA_MISO_HSIOM_REG, serial_TX_SDA_MISO_HSIOM_MASK,
 323:Generated_Source\PSoC4/serial_UART.c ****                                            serial_TX_SDA_MISO_HSIOM_POS, serial_TX_SDA_MISO_HSIOM_S
 324:Generated_Source\PSoC4/serial_UART.c ****         }
 325:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_TX_SDA_MISO_PIN_PIN) */
 326:Generated_Source\PSoC4/serial_UART.c **** 
 327:Generated_Source\PSoC4/serial_UART.c ****     #if !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1)
 328:Generated_Source\PSoC4/serial_UART.c ****         #if (serial_SS0_PIN)
 329:Generated_Source\PSoC4/serial_UART.c ****             if (serial_CHECK_SS0_PIN_USED)
 330:Generated_Source\PSoC4/serial_UART.c ****             {
 331:Generated_Source\PSoC4/serial_UART.c ****                 /* Set SCB UART to drive the output pin */
 332:Generated_Source\PSoC4/serial_UART.c ****                 serial_SET_HSIOM_SEL(serial_SS0_HSIOM_REG, serial_SS0_HSIOM_MASK,
 333:Generated_Source\PSoC4/serial_UART.c ****                                                serial_SS0_HSIOM_POS, serial_SS0_HSIOM_SEL_UART);
 334:Generated_Source\PSoC4/serial_UART.c ****             }
 335:Generated_Source\PSoC4/serial_UART.c ****         #endif /* (serial_SS0_PIN) */
 336:Generated_Source\PSoC4/serial_UART.c ****     #endif /* !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1) */
 337:Generated_Source\PSoC4/serial_UART.c **** 
 338:Generated_Source\PSoC4/serial_UART.c **** #else
 339:Generated_Source\PSoC4/serial_UART.c ****     #if (serial_UART_TX_PIN)
 340:Generated_Source\PSoC4/serial_UART.c ****          /* Set SCB UART to drive the output pin */
 341:Generated_Source\PSoC4/serial_UART.c ****         serial_SET_HSIOM_SEL(serial_TX_HSIOM_REG, serial_TX_HSIOM_MASK,
 146              		.loc 1 341 0
 147 0000 064A     		ldr	r2, .L5
 148 0002 1168     		ldr	r1, [r2]
 149 0004 064B     		ldr	r3, .L5+4
 150 0006 0B40     		and	r3, r1
 151 0008 9021     		mov	r1, #144
 152 000a 0904     		lsl	r1, r1, #16
 153 000c 0B43     		orr	r3, r1
 154 000e 1360     		str	r3, [r2]
 342:Generated_Source\PSoC4/serial_UART.c ****                                        serial_TX_HSIOM_POS, serial_TX_HSIOM_SEL_UART);
 343:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_UART_TX_PIN) */
 344:Generated_Source\PSoC4/serial_UART.c **** 
 345:Generated_Source\PSoC4/serial_UART.c ****     #if (serial_UART_RTS_PIN)
 346:Generated_Source\PSoC4/serial_UART.c ****         /* Set SCB UART to drive the output pin */
 347:Generated_Source\PSoC4/serial_UART.c ****         serial_SET_HSIOM_SEL(serial_RTS_HSIOM_REG, serial_RTS_HSIOM_MASK,
 348:Generated_Source\PSoC4/serial_UART.c ****                                        serial_RTS_HSIOM_POS, serial_RTS_HSIOM_SEL_UART);
 349:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_UART_RTS_PIN) */
 350:Generated_Source\PSoC4/serial_UART.c **** #endif /* (serial_SCB_MODE_UNCONFIG_CONST_CFG) */
 351:Generated_Source\PSoC4/serial_UART.c **** 
 352:Generated_Source\PSoC4/serial_UART.c ****     /* Restore TX interrupt sources. */
 353:Generated_Source\PSoC4/serial_UART.c ****     serial_SetTxInterruptMode(serial_IntrTxMask);
 155              		.loc 1 353 0
 156 0010 044B     		ldr	r3, .L5+8
 157 0012 1A88     		ldrh	r2, [r3]
 158 0014 044B     		ldr	r3, .L5+12
 159 0016 1A60     		str	r2, [r3]
 354:Generated_Source\PSoC4/serial_UART.c **** }
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 10


 160              		.loc 1 354 0
 161              		@ sp needed
 162 0018 7047     		bx	lr
 163              	.L6:
 164 001a C046     		.align	2
 165              	.L5:
 166 001c 00000140 		.word	1073807360
 167 0020 FFFF0FFF 		.word	-15728641
 168 0024 00000000 		.word	serial_IntrTxMask
 169 0028 880F0740 		.word	1074204552
 170              		.cfi_endproc
 171              	.LFE1:
 172              		.size	serial_UartPostEnable, .-serial_UartPostEnable
 173              		.section	.text.serial_UartStop,"ax",%progbits
 174              		.align	2
 175              		.global	serial_UartStop
 176              		.code	16
 177              		.thumb_func
 178              		.type	serial_UartStop, %function
 179              	serial_UartStop:
 180              	.LFB2:
 355:Generated_Source\PSoC4/serial_UART.c **** 
 356:Generated_Source\PSoC4/serial_UART.c **** 
 357:Generated_Source\PSoC4/serial_UART.c **** /*******************************************************************************
 358:Generated_Source\PSoC4/serial_UART.c **** * Function Name: serial_UartStop
 359:Generated_Source\PSoC4/serial_UART.c **** ****************************************************************************//**
 360:Generated_Source\PSoC4/serial_UART.c **** *
 361:Generated_Source\PSoC4/serial_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 362:Generated_Source\PSoC4/serial_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
 363:Generated_Source\PSoC4/serial_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature
 364:Generated_Source\PSoC4/serial_UART.c **** *  to not cause it to trigger after the component is enabled.
 365:Generated_Source\PSoC4/serial_UART.c **** *
 366:Generated_Source\PSoC4/serial_UART.c **** *******************************************************************************/
 367:Generated_Source\PSoC4/serial_UART.c **** void serial_UartStop(void)
 368:Generated_Source\PSoC4/serial_UART.c **** {
 181              		.loc 1 368 0
 182              		.cfi_startproc
 369:Generated_Source\PSoC4/serial_UART.c **** #if(serial_SCB_MODE_UNCONFIG_CONST_CFG)
 370:Generated_Source\PSoC4/serial_UART.c ****     #if (serial_TX_SDA_MISO_PIN)
 371:Generated_Source\PSoC4/serial_UART.c ****         if (serial_CHECK_TX_SDA_MISO_PIN_USED)
 372:Generated_Source\PSoC4/serial_UART.c ****         {
 373:Generated_Source\PSoC4/serial_UART.c ****             /* Set GPIO to drive output pin */
 374:Generated_Source\PSoC4/serial_UART.c ****             serial_SET_HSIOM_SEL(serial_TX_SDA_MISO_HSIOM_REG, serial_TX_SDA_MISO_HSIOM_MASK,
 375:Generated_Source\PSoC4/serial_UART.c ****                                            serial_TX_SDA_MISO_HSIOM_POS, serial_TX_SDA_MISO_HSIOM_S
 376:Generated_Source\PSoC4/serial_UART.c ****         }
 377:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_TX_SDA_MISO_PIN_PIN) */
 378:Generated_Source\PSoC4/serial_UART.c **** 
 379:Generated_Source\PSoC4/serial_UART.c ****     #if !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1)
 380:Generated_Source\PSoC4/serial_UART.c ****         #if (serial_SS0_PIN)
 381:Generated_Source\PSoC4/serial_UART.c ****             if (serial_CHECK_SS0_PIN_USED)
 382:Generated_Source\PSoC4/serial_UART.c ****             {
 383:Generated_Source\PSoC4/serial_UART.c ****                 /* Set output pin state after block is disabled */
 384:Generated_Source\PSoC4/serial_UART.c ****                 serial_spi_ss0_Write(serial_GET_UART_RTS_INACTIVE);
 385:Generated_Source\PSoC4/serial_UART.c **** 
 386:Generated_Source\PSoC4/serial_UART.c ****                 /* Set GPIO to drive output pin */
 387:Generated_Source\PSoC4/serial_UART.c ****                 serial_SET_HSIOM_SEL(serial_SS0_HSIOM_REG, serial_SS0_HSIOM_MASK,
 388:Generated_Source\PSoC4/serial_UART.c ****                                                serial_SS0_HSIOM_POS, serial_SS0_HSIOM_SEL_GPIO);
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 11


 389:Generated_Source\PSoC4/serial_UART.c ****             }
 390:Generated_Source\PSoC4/serial_UART.c ****         #endif /* (serial_SS0_PIN) */
 391:Generated_Source\PSoC4/serial_UART.c ****     #endif /* !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1) */
 392:Generated_Source\PSoC4/serial_UART.c **** 
 393:Generated_Source\PSoC4/serial_UART.c **** #else
 394:Generated_Source\PSoC4/serial_UART.c ****     #if (serial_UART_TX_PIN)
 395:Generated_Source\PSoC4/serial_UART.c ****         /* Set GPIO to drive output pin */
 396:Generated_Source\PSoC4/serial_UART.c ****         serial_SET_HSIOM_SEL(serial_TX_HSIOM_REG, serial_TX_HSIOM_MASK,
 183              		.loc 1 396 0
 184 0000 064A     		ldr	r2, .L8
 185 0002 1168     		ldr	r1, [r2]
 186 0004 064B     		ldr	r3, .L8+4
 187 0006 0B40     		and	r3, r1
 188 0008 1360     		str	r3, [r2]
 397:Generated_Source\PSoC4/serial_UART.c ****                                        serial_TX_HSIOM_POS, serial_TX_HSIOM_SEL_GPIO);
 398:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_UART_TX_PIN) */
 399:Generated_Source\PSoC4/serial_UART.c **** 
 400:Generated_Source\PSoC4/serial_UART.c ****     #if (serial_UART_RTS_PIN)
 401:Generated_Source\PSoC4/serial_UART.c ****         /* Set output pin state after block is disabled */
 402:Generated_Source\PSoC4/serial_UART.c ****         serial_rts_Write(serial_GET_UART_RTS_INACTIVE);
 403:Generated_Source\PSoC4/serial_UART.c **** 
 404:Generated_Source\PSoC4/serial_UART.c ****         /* Set GPIO to drive output pin */
 405:Generated_Source\PSoC4/serial_UART.c ****         serial_SET_HSIOM_SEL(serial_RTS_HSIOM_REG, serial_RTS_HSIOM_MASK,
 406:Generated_Source\PSoC4/serial_UART.c ****                                        serial_RTS_HSIOM_POS, serial_RTS_HSIOM_SEL_GPIO);
 407:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_UART_RTS_PIN) */
 408:Generated_Source\PSoC4/serial_UART.c **** 
 409:Generated_Source\PSoC4/serial_UART.c **** #endif /* (serial_SCB_MODE_UNCONFIG_CONST_CFG) */
 410:Generated_Source\PSoC4/serial_UART.c **** 
 411:Generated_Source\PSoC4/serial_UART.c **** #if (serial_UART_WAKE_ENABLE_CONST)
 412:Generated_Source\PSoC4/serial_UART.c ****     /* Disable skip start feature used for wakeup */
 413:Generated_Source\PSoC4/serial_UART.c ****     serial_UART_RX_CTRL_REG &= (uint32) ~serial_UART_RX_CTRL_SKIP_START;
 414:Generated_Source\PSoC4/serial_UART.c **** #endif /* (serial_UART_WAKE_ENABLE_CONST) */
 415:Generated_Source\PSoC4/serial_UART.c **** 
 416:Generated_Source\PSoC4/serial_UART.c ****     /* Store TX interrupt sources (exclude level triggered). */
 417:Generated_Source\PSoC4/serial_UART.c ****     serial_IntrTxMask = LO16(serial_GetTxInterruptMode() & serial_INTR_UART_TX_RESTORE);
 189              		.loc 1 417 0
 190 000a 064B     		ldr	r3, .L8+8
 191 000c 1A68     		ldr	r2, [r3]
 192 000e E423     		mov	r3, #228
 193 0010 DB00     		lsl	r3, r3, #3
 194 0012 1340     		and	r3, r2
 195 0014 044A     		ldr	r2, .L8+12
 196 0016 1380     		strh	r3, [r2]
 418:Generated_Source\PSoC4/serial_UART.c **** }
 197              		.loc 1 418 0
 198              		@ sp needed
 199 0018 7047     		bx	lr
 200              	.L9:
 201 001a C046     		.align	2
 202              	.L8:
 203 001c 00000140 		.word	1073807360
 204 0020 FFFF0FFF 		.word	-15728641
 205 0024 880F0740 		.word	1074204552
 206 0028 00000000 		.word	serial_IntrTxMask
 207              		.cfi_endproc
 208              	.LFE2:
 209              		.size	serial_UartStop, .-serial_UartStop
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 12


 210              		.section	.text.serial_UartSetRxAddress,"ax",%progbits
 211              		.align	2
 212              		.global	serial_UartSetRxAddress
 213              		.code	16
 214              		.thumb_func
 215              		.type	serial_UartSetRxAddress, %function
 216              	serial_UartSetRxAddress:
 217              	.LFB3:
 419:Generated_Source\PSoC4/serial_UART.c **** 
 420:Generated_Source\PSoC4/serial_UART.c **** 
 421:Generated_Source\PSoC4/serial_UART.c **** /*******************************************************************************
 422:Generated_Source\PSoC4/serial_UART.c **** * Function Name: serial_UartSetRxAddress
 423:Generated_Source\PSoC4/serial_UART.c **** ****************************************************************************//**
 424:Generated_Source\PSoC4/serial_UART.c **** *
 425:Generated_Source\PSoC4/serial_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 426:Generated_Source\PSoC4/serial_UART.c **** *  Multiprocessor mode.
 427:Generated_Source\PSoC4/serial_UART.c **** *
 428:Generated_Source\PSoC4/serial_UART.c **** *  \param address: Address for hardware address detection.
 429:Generated_Source\PSoC4/serial_UART.c **** *
 430:Generated_Source\PSoC4/serial_UART.c **** *******************************************************************************/
 431:Generated_Source\PSoC4/serial_UART.c **** void serial_UartSetRxAddress(uint32 address)
 432:Generated_Source\PSoC4/serial_UART.c **** {
 218              		.loc 1 432 0
 219              		.cfi_startproc
 220              	.LVL3:
 433:Generated_Source\PSoC4/serial_UART.c ****      uint32 matchReg;
 434:Generated_Source\PSoC4/serial_UART.c **** 
 435:Generated_Source\PSoC4/serial_UART.c ****     matchReg = serial_RX_MATCH_REG;
 221              		.loc 1 435 0
 222 0000 034A     		ldr	r2, .L11
 223 0002 1368     		ldr	r3, [r2]
 224              	.LVL4:
 436:Generated_Source\PSoC4/serial_UART.c **** 
 437:Generated_Source\PSoC4/serial_UART.c ****     matchReg &= ((uint32) ~serial_RX_MATCH_ADDR_MASK); /* Clear address bits */
 225              		.loc 1 437 0
 226 0004 FF21     		mov	r1, #255
 227 0006 8B43     		bic	r3, r1
 228              	.LVL5:
 438:Generated_Source\PSoC4/serial_UART.c ****     matchReg |= ((uint32)  (address & serial_RX_MATCH_ADDR_MASK)); /* Set address  */
 229              		.loc 1 438 0
 230 0008 0840     		and	r0, r1
 231              	.LVL6:
 232 000a 1843     		orr	r0, r3
 233              	.LVL7:
 439:Generated_Source\PSoC4/serial_UART.c **** 
 440:Generated_Source\PSoC4/serial_UART.c ****     serial_RX_MATCH_REG = matchReg;
 234              		.loc 1 440 0
 235 000c 1060     		str	r0, [r2]
 441:Generated_Source\PSoC4/serial_UART.c **** }
 236              		.loc 1 441 0
 237              		@ sp needed
 238 000e 7047     		bx	lr
 239              	.L12:
 240              		.align	2
 241              	.L11:
 242 0010 10030740 		.word	1074201360
 243              		.cfi_endproc
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 13


 244              	.LFE3:
 245              		.size	serial_UartSetRxAddress, .-serial_UartSetRxAddress
 246              		.section	.text.serial_UartSetRxAddressMask,"ax",%progbits
 247              		.align	2
 248              		.global	serial_UartSetRxAddressMask
 249              		.code	16
 250              		.thumb_func
 251              		.type	serial_UartSetRxAddressMask, %function
 252              	serial_UartSetRxAddressMask:
 253              	.LFB4:
 442:Generated_Source\PSoC4/serial_UART.c **** 
 443:Generated_Source\PSoC4/serial_UART.c **** 
 444:Generated_Source\PSoC4/serial_UART.c **** /*******************************************************************************
 445:Generated_Source\PSoC4/serial_UART.c **** * Function Name: serial_UartSetRxAddressMask
 446:Generated_Source\PSoC4/serial_UART.c **** ****************************************************************************//**
 447:Generated_Source\PSoC4/serial_UART.c **** *
 448:Generated_Source\PSoC4/serial_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 449:Generated_Source\PSoC4/serial_UART.c **** *
 450:Generated_Source\PSoC4/serial_UART.c **** *  \param addressMask: Address mask.
 451:Generated_Source\PSoC4/serial_UART.c **** *   - Bit value 0 – excludes bit from address comparison.
 452:Generated_Source\PSoC4/serial_UART.c **** *   - Bit value 1 – the bit needs to match with the corresponding bit
 453:Generated_Source\PSoC4/serial_UART.c **** *     of the address.
 454:Generated_Source\PSoC4/serial_UART.c **** *
 455:Generated_Source\PSoC4/serial_UART.c **** *******************************************************************************/
 456:Generated_Source\PSoC4/serial_UART.c **** void serial_UartSetRxAddressMask(uint32 addressMask)
 457:Generated_Source\PSoC4/serial_UART.c **** {
 254              		.loc 1 457 0
 255              		.cfi_startproc
 256              	.LVL8:
 458:Generated_Source\PSoC4/serial_UART.c ****     uint32 matchReg;
 459:Generated_Source\PSoC4/serial_UART.c **** 
 460:Generated_Source\PSoC4/serial_UART.c ****     matchReg = serial_RX_MATCH_REG;
 257              		.loc 1 460 0
 258 0000 034A     		ldr	r2, .L14
 259 0002 1168     		ldr	r1, [r2]
 260              	.LVL9:
 461:Generated_Source\PSoC4/serial_UART.c **** 
 462:Generated_Source\PSoC4/serial_UART.c ****     matchReg &= ((uint32) ~serial_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 261              		.loc 1 462 0
 262 0004 034B     		ldr	r3, .L14+4
 263 0006 0B40     		and	r3, r1
 264              	.LVL10:
 463:Generated_Source\PSoC4/serial_UART.c ****     matchReg |= ((uint32) (addressMask << serial_RX_MATCH_MASK_POS));
 265              		.loc 1 463 0
 266 0008 0004     		lsl	r0, r0, #16
 267              	.LVL11:
 268 000a 1843     		orr	r0, r3
 269              	.LVL12:
 464:Generated_Source\PSoC4/serial_UART.c **** 
 465:Generated_Source\PSoC4/serial_UART.c ****     serial_RX_MATCH_REG = matchReg;
 270              		.loc 1 465 0
 271 000c 1060     		str	r0, [r2]
 466:Generated_Source\PSoC4/serial_UART.c **** }
 272              		.loc 1 466 0
 273              		@ sp needed
 274 000e 7047     		bx	lr
 275              	.L15:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 14


 276              		.align	2
 277              	.L14:
 278 0010 10030740 		.word	1074201360
 279 0014 FFFF00FF 		.word	-16711681
 280              		.cfi_endproc
 281              	.LFE4:
 282              		.size	serial_UartSetRxAddressMask, .-serial_UartSetRxAddressMask
 283              		.section	.text.serial_UartGetChar,"ax",%progbits
 284              		.align	2
 285              		.global	serial_UartGetChar
 286              		.code	16
 287              		.thumb_func
 288              		.type	serial_UartGetChar, %function
 289              	serial_UartGetChar:
 290              	.LFB5:
 467:Generated_Source\PSoC4/serial_UART.c **** 
 468:Generated_Source\PSoC4/serial_UART.c **** 
 469:Generated_Source\PSoC4/serial_UART.c **** #if(serial_UART_RX_DIRECTION)
 470:Generated_Source\PSoC4/serial_UART.c ****     /*******************************************************************************
 471:Generated_Source\PSoC4/serial_UART.c ****     * Function Name: serial_UartGetChar
 472:Generated_Source\PSoC4/serial_UART.c ****     ****************************************************************************//**
 473:Generated_Source\PSoC4/serial_UART.c ****     *
 474:Generated_Source\PSoC4/serial_UART.c ****     *  Retrieves next data element from receive buffer.
 475:Generated_Source\PSoC4/serial_UART.c ****     *  This function is designed for ASCII characters and returns a char where
 476:Generated_Source\PSoC4/serial_UART.c ****     *  1 to 255 are valid characters and 0 indicates an error occurred or no data
 477:Generated_Source\PSoC4/serial_UART.c ****     *  is present.
 478:Generated_Source\PSoC4/serial_UART.c ****     *  - RX software buffer is disabled: Returns data element retrieved from RX
 479:Generated_Source\PSoC4/serial_UART.c ****     *    FIFO.
 480:Generated_Source\PSoC4/serial_UART.c ****     *  - RX software buffer is enabled: Returns data element from the software
 481:Generated_Source\PSoC4/serial_UART.c ****     *    receive buffer.
 482:Generated_Source\PSoC4/serial_UART.c ****     *
 483:Generated_Source\PSoC4/serial_UART.c ****     *  \return
 484:Generated_Source\PSoC4/serial_UART.c ****     *   Next data element from the receive buffer. ASCII character values from
 485:Generated_Source\PSoC4/serial_UART.c ****     *   1 to 255 are valid. A returned zero signifies an error condition or no
 486:Generated_Source\PSoC4/serial_UART.c ****     *   data available.
 487:Generated_Source\PSoC4/serial_UART.c ****     *
 488:Generated_Source\PSoC4/serial_UART.c ****     *  \sideeffect
 489:Generated_Source\PSoC4/serial_UART.c ****     *   The errors bits may not correspond with reading characters due to
 490:Generated_Source\PSoC4/serial_UART.c ****     *   RX FIFO and software buffer usage.
 491:Generated_Source\PSoC4/serial_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 492:Generated_Source\PSoC4/serial_UART.c ****     *   is not treated as an error condition.
 493:Generated_Source\PSoC4/serial_UART.c ****     *   Check serial_rxBufferOverflow to capture that error condition.
 494:Generated_Source\PSoC4/serial_UART.c ****     *
 495:Generated_Source\PSoC4/serial_UART.c ****     *******************************************************************************/
 496:Generated_Source\PSoC4/serial_UART.c ****     uint32 serial_UartGetChar(void)
 497:Generated_Source\PSoC4/serial_UART.c ****     {
 291              		.loc 1 497 0
 292              		.cfi_startproc
 293 0000 08B5     		push	{r3, lr}
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 3, -8
 296              		.cfi_offset 14, -4
 297              	.LVL13:
 498:Generated_Source\PSoC4/serial_UART.c ****         uint32 rxData = 0u;
 499:Generated_Source\PSoC4/serial_UART.c **** 
 500:Generated_Source\PSoC4/serial_UART.c ****         /* Reads data only if there is data to read */
 501:Generated_Source\PSoC4/serial_UART.c ****         if (0u != serial_SpiUartGetRxBufferSize())
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 15


 298              		.loc 1 501 0
 299 0002 FFF7FEFF 		bl	serial_SpiUartGetRxBufferSize
 300              	.LVL14:
 301 0006 0028     		cmp	r0, #0
 302 0008 02D0     		beq	.L19
 502:Generated_Source\PSoC4/serial_UART.c ****         {
 503:Generated_Source\PSoC4/serial_UART.c ****             rxData = serial_SpiUartReadRxData();
 303              		.loc 1 503 0
 304 000a FFF7FEFF 		bl	serial_SpiUartReadRxData
 305              	.LVL15:
 306 000e 00E0     		b	.L17
 307              	.LVL16:
 308              	.L19:
 498:Generated_Source\PSoC4/serial_UART.c ****         uint32 rxData = 0u;
 309              		.loc 1 498 0
 310 0010 0020     		mov	r0, #0
 311              	.LVL17:
 312              	.L17:
 504:Generated_Source\PSoC4/serial_UART.c ****         }
 505:Generated_Source\PSoC4/serial_UART.c **** 
 506:Generated_Source\PSoC4/serial_UART.c ****         if (serial_CHECK_INTR_RX(serial_INTR_RX_ERR))
 313              		.loc 1 506 0
 314 0012 054B     		ldr	r3, .L20
 315 0014 1A68     		ldr	r2, [r3]
 316 0016 D823     		mov	r3, #216
 317 0018 9B00     		lsl	r3, r3, #2
 318 001a 1A42     		tst	r2, r3
 319 001c 03D0     		beq	.L18
 320              	.LVL18:
 507:Generated_Source\PSoC4/serial_UART.c ****         {
 508:Generated_Source\PSoC4/serial_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 509:Generated_Source\PSoC4/serial_UART.c ****             serial_ClearRxInterruptSource(serial_INTR_RX_ERR);
 321              		.loc 1 509 0
 322 001e 1A1C     		mov	r2, r3
 323 0020 014B     		ldr	r3, .L20
 324 0022 1A60     		str	r2, [r3]
 508:Generated_Source\PSoC4/serial_UART.c ****             serial_ClearRxInterruptSource(serial_INTR_RX_ERR);
 325              		.loc 1 508 0
 326 0024 0020     		mov	r0, #0
 327              	.LVL19:
 328              	.L18:
 510:Generated_Source\PSoC4/serial_UART.c ****         }
 511:Generated_Source\PSoC4/serial_UART.c **** 
 512:Generated_Source\PSoC4/serial_UART.c ****         return (rxData);
 513:Generated_Source\PSoC4/serial_UART.c ****     }
 329              		.loc 1 513 0
 330              		@ sp needed
 331 0026 08BD     		pop	{r3, pc}
 332              	.L21:
 333              		.align	2
 334              	.L20:
 335 0028 C00F0740 		.word	1074204608
 336              		.cfi_endproc
 337              	.LFE5:
 338              		.size	serial_UartGetChar, .-serial_UartGetChar
 339              		.section	.text.serial_UartGetByte,"ax",%progbits
 340              		.align	2
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 16


 341              		.global	serial_UartGetByte
 342              		.code	16
 343              		.thumb_func
 344              		.type	serial_UartGetByte, %function
 345              	serial_UartGetByte:
 346              	.LFB6:
 514:Generated_Source\PSoC4/serial_UART.c **** 
 515:Generated_Source\PSoC4/serial_UART.c **** 
 516:Generated_Source\PSoC4/serial_UART.c ****     /*******************************************************************************
 517:Generated_Source\PSoC4/serial_UART.c ****     * Function Name: serial_UartGetByte
 518:Generated_Source\PSoC4/serial_UART.c ****     ****************************************************************************//**
 519:Generated_Source\PSoC4/serial_UART.c ****     *
 520:Generated_Source\PSoC4/serial_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 521:Generated_Source\PSoC4/serial_UART.c ****     *  received byte and error condition.
 522:Generated_Source\PSoC4/serial_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 523:Generated_Source\PSoC4/serial_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 524:Generated_Source\PSoC4/serial_UART.c ****     *     empty.
 525:Generated_Source\PSoC4/serial_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 526:Generated_Source\PSoC4/serial_UART.c ****     *     software receive buffer.
 527:Generated_Source\PSoC4/serial_UART.c ****     *
 528:Generated_Source\PSoC4/serial_UART.c ****     *  \return
 529:Generated_Source\PSoC4/serial_UART.c ****     *   Bits 7-0 contain the next data element from the receive buffer and
 530:Generated_Source\PSoC4/serial_UART.c ****     *   other bits contain the error condition.
 531:Generated_Source\PSoC4/serial_UART.c ****     *   - serial_UART_RX_OVERFLOW - Attempt to write to a full
 532:Generated_Source\PSoC4/serial_UART.c ****     *     receiver FIFO.
 533:Generated_Source\PSoC4/serial_UART.c ****     *   - serial_UART_RX_UNDERFLOW	Attempt to read from an empty
 534:Generated_Source\PSoC4/serial_UART.c ****     *     receiver FIFO.
 535:Generated_Source\PSoC4/serial_UART.c ****     *   - serial_UART_RX_FRAME_ERROR - UART framing error detected.
 536:Generated_Source\PSoC4/serial_UART.c ****     *   - serial_UART_RX_PARITY_ERROR - UART parity error detected.
 537:Generated_Source\PSoC4/serial_UART.c ****     *
 538:Generated_Source\PSoC4/serial_UART.c ****     *  \sideeffect
 539:Generated_Source\PSoC4/serial_UART.c ****     *   The errors bits may not correspond with reading characters due to
 540:Generated_Source\PSoC4/serial_UART.c ****     *   RX FIFO and software buffer usage.
 541:Generated_Source\PSoC4/serial_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 542:Generated_Source\PSoC4/serial_UART.c ****     *   is not treated as an error condition.
 543:Generated_Source\PSoC4/serial_UART.c ****     *   Check serial_rxBufferOverflow to capture that error condition.
 544:Generated_Source\PSoC4/serial_UART.c ****     *
 545:Generated_Source\PSoC4/serial_UART.c ****     *******************************************************************************/
 546:Generated_Source\PSoC4/serial_UART.c ****     uint32 serial_UartGetByte(void)
 547:Generated_Source\PSoC4/serial_UART.c ****     {
 347              		.loc 1 547 0
 348              		.cfi_startproc
 349 0000 08B5     		push	{r3, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 3, -8
 352              		.cfi_offset 14, -4
 548:Generated_Source\PSoC4/serial_UART.c ****         uint32 rxData;
 549:Generated_Source\PSoC4/serial_UART.c ****         uint32 tmpStatus;
 550:Generated_Source\PSoC4/serial_UART.c **** 
 551:Generated_Source\PSoC4/serial_UART.c ****         #if (serial_CHECK_RX_SW_BUFFER)
 552:Generated_Source\PSoC4/serial_UART.c ****         {
 553:Generated_Source\PSoC4/serial_UART.c ****             serial_DisableInt();
 554:Generated_Source\PSoC4/serial_UART.c ****         }
 555:Generated_Source\PSoC4/serial_UART.c ****         #endif
 556:Generated_Source\PSoC4/serial_UART.c **** 
 557:Generated_Source\PSoC4/serial_UART.c ****         if (0u != serial_SpiUartGetRxBufferSize())
 353              		.loc 1 557 0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 17


 354 0002 FFF7FEFF 		bl	serial_SpiUartGetRxBufferSize
 355              	.LVL20:
 356 0006 0028     		cmp	r0, #0
 357 0008 02D0     		beq	.L23
 558:Generated_Source\PSoC4/serial_UART.c ****         {
 559:Generated_Source\PSoC4/serial_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 560:Generated_Source\PSoC4/serial_UART.c ****             * buffer.
 561:Generated_Source\PSoC4/serial_UART.c ****             */
 562:Generated_Source\PSoC4/serial_UART.c ****             #if (serial_CHECK_RX_SW_BUFFER)
 563:Generated_Source\PSoC4/serial_UART.c ****             {
 564:Generated_Source\PSoC4/serial_UART.c ****                 serial_EnableInt();
 565:Generated_Source\PSoC4/serial_UART.c ****             }
 566:Generated_Source\PSoC4/serial_UART.c ****             #endif
 567:Generated_Source\PSoC4/serial_UART.c **** 
 568:Generated_Source\PSoC4/serial_UART.c ****             /* Get received byte */
 569:Generated_Source\PSoC4/serial_UART.c ****             rxData = serial_SpiUartReadRxData();
 358              		.loc 1 569 0
 359 000a FFF7FEFF 		bl	serial_SpiUartReadRxData
 360              	.LVL21:
 361 000e 01E0     		b	.L24
 362              	.LVL22:
 363              	.L23:
 570:Generated_Source\PSoC4/serial_UART.c ****         }
 571:Generated_Source\PSoC4/serial_UART.c ****         else
 572:Generated_Source\PSoC4/serial_UART.c ****         {
 573:Generated_Source\PSoC4/serial_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the
 574:Generated_Source\PSoC4/serial_UART.c ****             * case of empty. Otherwise the first received byte will be read.
 575:Generated_Source\PSoC4/serial_UART.c ****             */
 576:Generated_Source\PSoC4/serial_UART.c ****             rxData = serial_RX_FIFO_RD_REG;
 364              		.loc 1 576 0
 365 0010 054B     		ldr	r3, .L25
 366 0012 1868     		ldr	r0, [r3]
 367              	.LVL23:
 368              	.L24:
 577:Generated_Source\PSoC4/serial_UART.c **** 
 578:Generated_Source\PSoC4/serial_UART.c **** 
 579:Generated_Source\PSoC4/serial_UART.c ****             /* Enables interrupt to receive more bytes. */
 580:Generated_Source\PSoC4/serial_UART.c ****             #if (serial_CHECK_RX_SW_BUFFER)
 581:Generated_Source\PSoC4/serial_UART.c ****             {
 582:Generated_Source\PSoC4/serial_UART.c **** 
 583:Generated_Source\PSoC4/serial_UART.c ****                 /* The byte has been read from RX FIFO. Clear RX interrupt to
 584:Generated_Source\PSoC4/serial_UART.c ****                 * not involve interrupt handler when RX FIFO is empty.
 585:Generated_Source\PSoC4/serial_UART.c ****                 */
 586:Generated_Source\PSoC4/serial_UART.c ****                 serial_ClearRxInterruptSource(serial_INTR_RX_NOT_EMPTY);
 587:Generated_Source\PSoC4/serial_UART.c **** 
 588:Generated_Source\PSoC4/serial_UART.c ****                 serial_EnableInt();
 589:Generated_Source\PSoC4/serial_UART.c ****             }
 590:Generated_Source\PSoC4/serial_UART.c ****             #endif
 591:Generated_Source\PSoC4/serial_UART.c ****         }
 592:Generated_Source\PSoC4/serial_UART.c **** 
 593:Generated_Source\PSoC4/serial_UART.c ****         /* Get and clear RX error mask */
 594:Generated_Source\PSoC4/serial_UART.c ****         tmpStatus = (serial_GetRxInterruptSource() & serial_INTR_RX_ERR);
 369              		.loc 1 594 0
 370 0014 054A     		ldr	r2, .L25+4
 371 0016 1368     		ldr	r3, [r2]
 372 0018 D821     		mov	r1, #216
 373 001a 8900     		lsl	r1, r1, #2
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 18


 374 001c 0B40     		and	r3, r1
 375              	.LVL24:
 595:Generated_Source\PSoC4/serial_UART.c ****         serial_ClearRxInterruptSource(serial_INTR_RX_ERR);
 376              		.loc 1 595 0
 377 001e 1160     		str	r1, [r2]
 596:Generated_Source\PSoC4/serial_UART.c **** 
 597:Generated_Source\PSoC4/serial_UART.c ****         /* Puts together data and error status:
 598:Generated_Source\PSoC4/serial_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 599:Generated_Source\PSoC4/serial_UART.c ****         */
 600:Generated_Source\PSoC4/serial_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 378              		.loc 1 600 0
 379 0020 1B02     		lsl	r3, r3, #8
 380              	.LVL25:
 381 0022 1843     		orr	r0, r3
 382              	.LVL26:
 601:Generated_Source\PSoC4/serial_UART.c **** 
 602:Generated_Source\PSoC4/serial_UART.c ****         return (rxData);
 603:Generated_Source\PSoC4/serial_UART.c ****     }
 383              		.loc 1 603 0
 384              		@ sp needed
 385 0024 08BD     		pop	{r3, pc}
 386              	.L26:
 387 0026 C046     		.align	2
 388              	.L25:
 389 0028 40030740 		.word	1074201408
 390 002c C00F0740 		.word	1074204608
 391              		.cfi_endproc
 392              	.LFE6:
 393              		.size	serial_UartGetByte, .-serial_UartGetByte
 394              		.section	.text.serial_UartPutString,"ax",%progbits
 395              		.align	2
 396              		.global	serial_UartPutString
 397              		.code	16
 398              		.thumb_func
 399              		.type	serial_UartPutString, %function
 400              	serial_UartPutString:
 401              	.LFB7:
 604:Generated_Source\PSoC4/serial_UART.c **** 
 605:Generated_Source\PSoC4/serial_UART.c **** 
 606:Generated_Source\PSoC4/serial_UART.c ****     #if !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1)
 607:Generated_Source\PSoC4/serial_UART.c ****         /*******************************************************************************
 608:Generated_Source\PSoC4/serial_UART.c ****         * Function Name: serial_UartSetRtsPolarity
 609:Generated_Source\PSoC4/serial_UART.c ****         ****************************************************************************//**
 610:Generated_Source\PSoC4/serial_UART.c ****         *
 611:Generated_Source\PSoC4/serial_UART.c ****         *  Sets active polarity of RTS output signal.
 612:Generated_Source\PSoC4/serial_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 613:Generated_Source\PSoC4/serial_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 614:Generated_Source\PSoC4/serial_UART.c ****         *
 615:Generated_Source\PSoC4/serial_UART.c ****         *  \param polarity: Active polarity of RTS output signal.
 616:Generated_Source\PSoC4/serial_UART.c ****         *   - serial_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 617:Generated_Source\PSoC4/serial_UART.c ****         *   - serial_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 618:Generated_Source\PSoC4/serial_UART.c ****         *
 619:Generated_Source\PSoC4/serial_UART.c ****         *******************************************************************************/
 620:Generated_Source\PSoC4/serial_UART.c ****         void serial_UartSetRtsPolarity(uint32 polarity)
 621:Generated_Source\PSoC4/serial_UART.c ****         {
 622:Generated_Source\PSoC4/serial_UART.c ****             if(0u != polarity)
 623:Generated_Source\PSoC4/serial_UART.c ****             {
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 19


 624:Generated_Source\PSoC4/serial_UART.c ****                 serial_UART_FLOW_CTRL_REG |= (uint32)  serial_UART_FLOW_CTRL_RTS_POLARITY;
 625:Generated_Source\PSoC4/serial_UART.c ****             }
 626:Generated_Source\PSoC4/serial_UART.c ****             else
 627:Generated_Source\PSoC4/serial_UART.c ****             {
 628:Generated_Source\PSoC4/serial_UART.c ****                 serial_UART_FLOW_CTRL_REG &= (uint32) ~serial_UART_FLOW_CTRL_RTS_POLARITY;
 629:Generated_Source\PSoC4/serial_UART.c ****             }
 630:Generated_Source\PSoC4/serial_UART.c ****         }
 631:Generated_Source\PSoC4/serial_UART.c **** 
 632:Generated_Source\PSoC4/serial_UART.c **** 
 633:Generated_Source\PSoC4/serial_UART.c ****         /*******************************************************************************
 634:Generated_Source\PSoC4/serial_UART.c ****         * Function Name: serial_UartSetRtsFifoLevel
 635:Generated_Source\PSoC4/serial_UART.c ****         ****************************************************************************//**
 636:Generated_Source\PSoC4/serial_UART.c ****         *
 637:Generated_Source\PSoC4/serial_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 638:Generated_Source\PSoC4/serial_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 639:Generated_Source\PSoC4/serial_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 640:Generated_Source\PSoC4/serial_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 641:Generated_Source\PSoC4/serial_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/serial_UART.c ****         *
 643:Generated_Source\PSoC4/serial_UART.c ****         *  \param level: Level in the RX FIFO for RTS signal activation.
 644:Generated_Source\PSoC4/serial_UART.c ****         *   The range of valid level values is between 0 and RX FIFO depth - 1.
 645:Generated_Source\PSoC4/serial_UART.c ****         *   Setting level value to 0 disables RTS signal activation.
 646:Generated_Source\PSoC4/serial_UART.c ****         *
 647:Generated_Source\PSoC4/serial_UART.c ****         *******************************************************************************/
 648:Generated_Source\PSoC4/serial_UART.c ****         void serial_UartSetRtsFifoLevel(uint32 level)
 649:Generated_Source\PSoC4/serial_UART.c ****         {
 650:Generated_Source\PSoC4/serial_UART.c ****             uint32 uartFlowCtrl;
 651:Generated_Source\PSoC4/serial_UART.c **** 
 652:Generated_Source\PSoC4/serial_UART.c ****             uartFlowCtrl = serial_UART_FLOW_CTRL_REG;
 653:Generated_Source\PSoC4/serial_UART.c **** 
 654:Generated_Source\PSoC4/serial_UART.c ****             uartFlowCtrl &= ((uint32) ~serial_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level ma
 655:Generated_Source\PSoC4/serial_UART.c ****             uartFlowCtrl |= ((uint32) (serial_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 656:Generated_Source\PSoC4/serial_UART.c **** 
 657:Generated_Source\PSoC4/serial_UART.c ****             serial_UART_FLOW_CTRL_REG = uartFlowCtrl;
 658:Generated_Source\PSoC4/serial_UART.c ****         }
 659:Generated_Source\PSoC4/serial_UART.c ****     #endif /* !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1) */
 660:Generated_Source\PSoC4/serial_UART.c **** 
 661:Generated_Source\PSoC4/serial_UART.c **** #endif /* (serial_UART_RX_DIRECTION) */
 662:Generated_Source\PSoC4/serial_UART.c **** 
 663:Generated_Source\PSoC4/serial_UART.c **** 
 664:Generated_Source\PSoC4/serial_UART.c **** #if(serial_UART_TX_DIRECTION)
 665:Generated_Source\PSoC4/serial_UART.c ****     /*******************************************************************************
 666:Generated_Source\PSoC4/serial_UART.c ****     * Function Name: serial_UartPutString
 667:Generated_Source\PSoC4/serial_UART.c ****     ****************************************************************************//**
 668:Generated_Source\PSoC4/serial_UART.c ****     *
 669:Generated_Source\PSoC4/serial_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 670:Generated_Source\PSoC4/serial_UART.c ****     *  next available bus time.
 671:Generated_Source\PSoC4/serial_UART.c ****     *  This function is blocking and waits until there is a space available to put
 672:Generated_Source\PSoC4/serial_UART.c ****     *  requested data in transmit buffer.
 673:Generated_Source\PSoC4/serial_UART.c ****     *
 674:Generated_Source\PSoC4/serial_UART.c ****     *  \param string: pointer to the null terminated string array to be placed in the
 675:Generated_Source\PSoC4/serial_UART.c ****     *   transmit buffer.
 676:Generated_Source\PSoC4/serial_UART.c ****     *
 677:Generated_Source\PSoC4/serial_UART.c ****     *******************************************************************************/
 678:Generated_Source\PSoC4/serial_UART.c ****     void serial_UartPutString(const char8 string[])
 679:Generated_Source\PSoC4/serial_UART.c ****     {
 402              		.loc 1 679 0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 20


 403              		.cfi_startproc
 404              	.LVL27:
 405 0000 38B5     		push	{r3, r4, r5, lr}
 406              		.cfi_def_cfa_offset 16
 407              		.cfi_offset 3, -16
 408              		.cfi_offset 4, -12
 409              		.cfi_offset 5, -8
 410              		.cfi_offset 14, -4
 411 0002 051C     		mov	r5, r0
 412              	.LVL28:
 680:Generated_Source\PSoC4/serial_UART.c ****         uint32 bufIndex;
 681:Generated_Source\PSoC4/serial_UART.c **** 
 682:Generated_Source\PSoC4/serial_UART.c ****         bufIndex = 0u;
 413              		.loc 1 682 0
 414 0004 0024     		mov	r4, #0
 683:Generated_Source\PSoC4/serial_UART.c **** 
 684:Generated_Source\PSoC4/serial_UART.c ****         /* Blocks the control flow until all data has been sent */
 685:Generated_Source\PSoC4/serial_UART.c ****         while(string[bufIndex] != ((char8) 0))
 415              		.loc 1 685 0
 416 0006 02E0     		b	.L28
 417              	.LVL29:
 418              	.L29:
 686:Generated_Source\PSoC4/serial_UART.c ****         {
 687:Generated_Source\PSoC4/serial_UART.c ****             serial_UartPutChar((uint32) string[bufIndex]);
 419              		.loc 1 687 0
 420 0008 FFF7FEFF 		bl	serial_SpiUartWriteTxData
 421              	.LVL30:
 688:Generated_Source\PSoC4/serial_UART.c ****             bufIndex++;
 422              		.loc 1 688 0
 423 000c 0134     		add	r4, r4, #1
 424              	.LVL31:
 425              	.L28:
 685:Generated_Source\PSoC4/serial_UART.c ****         {
 426              		.loc 1 685 0
 427 000e 285D     		ldrb	r0, [r5, r4]
 428 0010 0028     		cmp	r0, #0
 429 0012 F9D1     		bne	.L29
 689:Generated_Source\PSoC4/serial_UART.c ****         }
 690:Generated_Source\PSoC4/serial_UART.c ****     }
 430              		.loc 1 690 0
 431              		@ sp needed
 432              	.LVL32:
 433              	.LVL33:
 434 0014 38BD     		pop	{r3, r4, r5, pc}
 435              		.cfi_endproc
 436              	.LFE7:
 437              		.size	serial_UartPutString, .-serial_UartPutString
 438 0016 C046     		.section	.text.serial_UartPutCRLF,"ax",%progbits
 439              		.align	2
 440              		.global	serial_UartPutCRLF
 441              		.code	16
 442              		.thumb_func
 443              		.type	serial_UartPutCRLF, %function
 444              	serial_UartPutCRLF:
 445              	.LFB8:
 691:Generated_Source\PSoC4/serial_UART.c **** 
 692:Generated_Source\PSoC4/serial_UART.c **** 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 21


 693:Generated_Source\PSoC4/serial_UART.c ****     /*******************************************************************************
 694:Generated_Source\PSoC4/serial_UART.c ****     * Function Name: serial_UartPutCRLF
 695:Generated_Source\PSoC4/serial_UART.c ****     ****************************************************************************//**
 696:Generated_Source\PSoC4/serial_UART.c ****     *
 697:Generated_Source\PSoC4/serial_UART.c ****     *  Places byte of data followed by a carriage return (0x0D) and line feed
 698:Generated_Source\PSoC4/serial_UART.c ****     *  (0x0A) in the transmit buffer.
 699:Generated_Source\PSoC4/serial_UART.c ****     *  This function is blocking and waits until there is a space available to put
 700:Generated_Source\PSoC4/serial_UART.c ****     *  all requested data in transmit buffer.
 701:Generated_Source\PSoC4/serial_UART.c ****     *
 702:Generated_Source\PSoC4/serial_UART.c ****     *  \param txDataByte: the data to be transmitted.
 703:Generated_Source\PSoC4/serial_UART.c ****     *
 704:Generated_Source\PSoC4/serial_UART.c ****     *******************************************************************************/
 705:Generated_Source\PSoC4/serial_UART.c ****     void serial_UartPutCRLF(uint32 txDataByte)
 706:Generated_Source\PSoC4/serial_UART.c ****     {
 446              		.loc 1 706 0
 447              		.cfi_startproc
 448              	.LVL34:
 449 0000 08B5     		push	{r3, lr}
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 3, -8
 452              		.cfi_offset 14, -4
 707:Generated_Source\PSoC4/serial_UART.c ****         serial_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
 453              		.loc 1 707 0
 454 0002 FFF7FEFF 		bl	serial_SpiUartWriteTxData
 455              	.LVL35:
 708:Generated_Source\PSoC4/serial_UART.c ****         serial_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 456              		.loc 1 708 0
 457 0006 0D20     		mov	r0, #13
 458 0008 FFF7FEFF 		bl	serial_SpiUartWriteTxData
 459              	.LVL36:
 709:Generated_Source\PSoC4/serial_UART.c ****         serial_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 460              		.loc 1 709 0
 461 000c 0A20     		mov	r0, #10
 462 000e FFF7FEFF 		bl	serial_SpiUartWriteTxData
 463              	.LVL37:
 710:Generated_Source\PSoC4/serial_UART.c ****     }
 464              		.loc 1 710 0
 465              		@ sp needed
 466 0012 08BD     		pop	{r3, pc}
 467              		.cfi_endproc
 468              	.LFE8:
 469              		.size	serial_UartPutCRLF, .-serial_UartPutCRLF
 470              		.text
 471              	.Letext0:
 472              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 473              		.file 3 "Generated_Source\\PSoC4\\serial_PVT.h"
 474              		.file 4 "Generated_Source\\PSoC4\\serial_SPI_UART_PVT.h"
 475              		.file 5 "Generated_Source\\PSoC4/CyLib.h"
 476              		.file 6 "Generated_Source\\PSoC4\\serial_SPI_UART.h"
 477              		.section	.debug_info,"",%progbits
 478              	.Ldebug_info0:
 479 0000 75030000 		.4byte	0x375
 480 0004 0400     		.2byte	0x4
 481 0006 00000000 		.4byte	.Ldebug_abbrev0
 482 000a 04       		.byte	0x4
 483 000b 01       		.uleb128 0x1
 484 000c 6A020000 		.4byte	.LASF43
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 22


 485 0010 01       		.byte	0x1
 486 0011 45020000 		.4byte	.LASF44
 487 0015 45000000 		.4byte	.LASF45
 488 0019 00000000 		.4byte	.Ldebug_ranges0+0
 489 001d 00000000 		.4byte	0
 490 0021 00000000 		.4byte	.Ldebug_line0
 491 0025 02       		.uleb128 0x2
 492 0026 01       		.byte	0x1
 493 0027 06       		.byte	0x6
 494 0028 4F030000 		.4byte	.LASF0
 495 002c 02       		.uleb128 0x2
 496 002d 01       		.byte	0x1
 497 002e 08       		.byte	0x8
 498 002f D9000000 		.4byte	.LASF1
 499 0033 02       		.uleb128 0x2
 500 0034 02       		.byte	0x2
 501 0035 05       		.byte	0x5
 502 0036 05030000 		.4byte	.LASF2
 503 003a 02       		.uleb128 0x2
 504 003b 02       		.byte	0x2
 505 003c 07       		.byte	0x7
 506 003d 5B030000 		.4byte	.LASF3
 507 0041 02       		.uleb128 0x2
 508 0042 04       		.byte	0x4
 509 0043 05       		.byte	0x5
 510 0044 33030000 		.4byte	.LASF4
 511 0048 02       		.uleb128 0x2
 512 0049 04       		.byte	0x4
 513 004a 07       		.byte	0x7
 514 004b ED000000 		.4byte	.LASF5
 515 004f 02       		.uleb128 0x2
 516 0050 08       		.byte	0x8
 517 0051 05       		.byte	0x5
 518 0052 B8000000 		.4byte	.LASF6
 519 0056 02       		.uleb128 0x2
 520 0057 08       		.byte	0x8
 521 0058 07       		.byte	0x7
 522 0059 AA010000 		.4byte	.LASF7
 523 005d 03       		.uleb128 0x3
 524 005e 04       		.byte	0x4
 525 005f 05       		.byte	0x5
 526 0060 696E7400 		.ascii	"int\000"
 527 0064 02       		.uleb128 0x2
 528 0065 04       		.byte	0x4
 529 0066 07       		.byte	0x7
 530 0067 95010000 		.4byte	.LASF8
 531 006b 04       		.uleb128 0x4
 532 006c FF000000 		.4byte	.LASF9
 533 0070 02       		.byte	0x2
 534 0071 B901     		.2byte	0x1b9
 535 0073 2C000000 		.4byte	0x2c
 536 0077 04       		.uleb128 0x4
 537 0078 87010000 		.4byte	.LASF10
 538 007c 02       		.byte	0x2
 539 007d BA01     		.2byte	0x1ba
 540 007f 3A000000 		.4byte	0x3a
 541 0083 04       		.uleb128 0x4
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 23


 542 0084 8E010000 		.4byte	.LASF11
 543 0088 02       		.byte	0x2
 544 0089 BB01     		.2byte	0x1bb
 545 008b 48000000 		.4byte	0x48
 546 008f 02       		.uleb128 0x2
 547 0090 04       		.byte	0x4
 548 0091 04       		.byte	0x4
 549 0092 B2000000 		.4byte	.LASF12
 550 0096 02       		.uleb128 0x2
 551 0097 08       		.byte	0x8
 552 0098 04       		.byte	0x4
 553 0099 53010000 		.4byte	.LASF13
 554 009d 04       		.uleb128 0x4
 555 009e E7000000 		.4byte	.LASF14
 556 00a2 02       		.byte	0x2
 557 00a3 CA01     		.2byte	0x1ca
 558 00a5 A9000000 		.4byte	0xa9
 559 00a9 02       		.uleb128 0x2
 560 00aa 01       		.byte	0x1
 561 00ab 08       		.byte	0x8
 562 00ac 40020000 		.4byte	.LASF15
 563 00b0 04       		.uleb128 0x4
 564 00b1 12000000 		.4byte	.LASF16
 565 00b5 02       		.byte	0x2
 566 00b6 6502     		.2byte	0x265
 567 00b8 BC000000 		.4byte	0xbc
 568 00bc 05       		.uleb128 0x5
 569 00bd 83000000 		.4byte	0x83
 570 00c1 04       		.uleb128 0x4
 571 00c2 F6010000 		.4byte	.LASF17
 572 00c6 02       		.byte	0x2
 573 00c7 7502     		.2byte	0x275
 574 00c9 CD000000 		.4byte	0xcd
 575 00cd 06       		.uleb128 0x6
 576 00ce 04       		.byte	0x4
 577 00cf D3000000 		.4byte	0xd3
 578 00d3 07       		.uleb128 0x7
 579 00d4 02       		.uleb128 0x2
 580 00d5 04       		.byte	0x4
 581 00d6 07       		.byte	0x7
 582 00d7 19020000 		.4byte	.LASF18
 583 00db 08       		.uleb128 0x8
 584 00dc CA010000 		.4byte	.LASF21
 585 00e0 01       		.byte	0x1
 586 00e1 F5       		.byte	0xf5
 587 00e2 00000000 		.4byte	.LFB0
 588 00e6 C4000000 		.4byte	.LFE0-.LFB0
 589 00ea 01       		.uleb128 0x1
 590 00eb 9C       		.byte	0x9c
 591 00ec 2B010000 		.4byte	0x12b
 592 00f0 09       		.uleb128 0x9
 593 00f1 36000000 		.4byte	.LVL0
 594 00f5 11030000 		.4byte	0x311
 595 00f9 03010000 		.4byte	0x103
 596 00fd 0A       		.uleb128 0xa
 597 00fe 01       		.uleb128 0x1
 598 00ff 50       		.byte	0x50
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 24


 599 0100 01       		.uleb128 0x1
 600 0101 3B       		.byte	0x3b
 601 0102 00       		.byte	0
 602 0103 09       		.uleb128 0x9
 603 0104 3E000000 		.4byte	.LVL1
 604 0108 22030000 		.4byte	0x322
 605 010c 1B010000 		.4byte	0x11b
 606 0110 0A       		.uleb128 0xa
 607 0111 01       		.uleb128 0x1
 608 0112 51       		.byte	0x51
 609 0113 01       		.uleb128 0x1
 610 0114 33       		.byte	0x33
 611 0115 0A       		.uleb128 0xa
 612 0116 01       		.uleb128 0x1
 613 0117 50       		.byte	0x50
 614 0118 01       		.uleb128 0x1
 615 0119 3B       		.byte	0x3b
 616 011a 00       		.byte	0
 617 011b 0B       		.uleb128 0xb
 618 011c 46000000 		.4byte	.LVL2
 619 0120 38030000 		.4byte	0x338
 620 0124 0A       		.uleb128 0xa
 621 0125 01       		.uleb128 0x1
 622 0126 50       		.byte	0x50
 623 0127 01       		.uleb128 0x1
 624 0128 3B       		.byte	0x3b
 625 0129 00       		.byte	0
 626 012a 00       		.byte	0
 627 012b 0C       		.uleb128 0xc
 628 012c 03020000 		.4byte	.LASF19
 629 0130 01       		.byte	0x1
 630 0131 3B01     		.2byte	0x13b
 631 0133 00000000 		.4byte	.LFB1
 632 0137 2C000000 		.4byte	.LFE1-.LFB1
 633 013b 01       		.uleb128 0x1
 634 013c 9C       		.byte	0x9c
 635 013d 0C       		.uleb128 0xc
 636 013e 6E030000 		.4byte	.LASF20
 637 0142 01       		.byte	0x1
 638 0143 6F01     		.2byte	0x16f
 639 0145 00000000 		.4byte	.LFB2
 640 0149 2C000000 		.4byte	.LFE2-.LFB2
 641 014d 01       		.uleb128 0x1
 642 014e 9C       		.byte	0x9c
 643 014f 0D       		.uleb128 0xd
 644 0150 05010000 		.4byte	.LASF22
 645 0154 01       		.byte	0x1
 646 0155 AF01     		.2byte	0x1af
 647 0157 00000000 		.4byte	.LFB3
 648 015b 14000000 		.4byte	.LFE3-.LFB3
 649 015f 01       		.uleb128 0x1
 650 0160 9C       		.byte	0x9c
 651 0161 86010000 		.4byte	0x186
 652 0165 0E       		.uleb128 0xe
 653 0166 A2010000 		.4byte	.LASF24
 654 016a 01       		.byte	0x1
 655 016b AF01     		.2byte	0x1af
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 25


 656 016d 83000000 		.4byte	0x83
 657 0171 00000000 		.4byte	.LLST0
 658 0175 0F       		.uleb128 0xf
 659 0176 46030000 		.4byte	.LASF26
 660 017a 01       		.byte	0x1
 661 017b B101     		.2byte	0x1b1
 662 017d 83000000 		.4byte	0x83
 663 0181 21000000 		.4byte	.LLST1
 664 0185 00       		.byte	0
 665 0186 0D       		.uleb128 0xd
 666 0187 DA010000 		.4byte	.LASF23
 667 018b 01       		.byte	0x1
 668 018c C801     		.2byte	0x1c8
 669 018e 00000000 		.4byte	.LFB4
 670 0192 18000000 		.4byte	.LFE4-.LFB4
 671 0196 01       		.uleb128 0x1
 672 0197 9C       		.byte	0x9c
 673 0198 BD010000 		.4byte	0x1bd
 674 019c 0E       		.uleb128 0xe
 675 019d 7E030000 		.4byte	.LASF25
 676 01a1 01       		.byte	0x1
 677 01a2 C801     		.2byte	0x1c8
 678 01a4 83000000 		.4byte	0x83
 679 01a8 3F000000 		.4byte	.LLST2
 680 01ac 0F       		.uleb128 0xf
 681 01ad 46030000 		.4byte	.LASF26
 682 01b1 01       		.byte	0x1
 683 01b2 CA01     		.2byte	0x1ca
 684 01b4 83000000 		.4byte	0x83
 685 01b8 60000000 		.4byte	.LLST3
 686 01bc 00       		.byte	0
 687 01bd 10       		.uleb128 0x10
 688 01be 22020000 		.4byte	.LASF28
 689 01c2 01       		.byte	0x1
 690 01c3 F001     		.2byte	0x1f0
 691 01c5 83000000 		.4byte	0x83
 692 01c9 00000000 		.4byte	.LFB5
 693 01cd 2C000000 		.4byte	.LFE5-.LFB5
 694 01d1 01       		.uleb128 0x1
 695 01d2 9C       		.byte	0x9c
 696 01d3 FA010000 		.4byte	0x1fa
 697 01d7 0F       		.uleb128 0xf
 698 01d8 1D010000 		.4byte	.LASF27
 699 01dc 01       		.byte	0x1
 700 01dd F201     		.2byte	0x1f2
 701 01df 83000000 		.4byte	0x83
 702 01e3 89000000 		.4byte	.LLST4
 703 01e7 11       		.uleb128 0x11
 704 01e8 06000000 		.4byte	.LVL14
 705 01ec 52030000 		.4byte	0x352
 706 01f0 11       		.uleb128 0x11
 707 01f1 0E000000 		.4byte	.LVL15
 708 01f5 5E030000 		.4byte	0x35e
 709 01f9 00       		.byte	0
 710 01fa 10       		.uleb128 0x10
 711 01fb C6000000 		.4byte	.LASF29
 712 01ff 01       		.byte	0x1
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 26


 713 0200 2202     		.2byte	0x222
 714 0202 83000000 		.4byte	0x83
 715 0206 00000000 		.4byte	.LFB6
 716 020a 30000000 		.4byte	.LFE6-.LFB6
 717 020e 01       		.uleb128 0x1
 718 020f 9C       		.byte	0x9c
 719 0210 47020000 		.4byte	0x247
 720 0214 0F       		.uleb128 0xf
 721 0215 1D010000 		.4byte	.LASF27
 722 0219 01       		.byte	0x1
 723 021a 2402     		.2byte	0x224
 724 021c 83000000 		.4byte	0x83
 725 0220 D6000000 		.4byte	.LLST5
 726 0224 0F       		.uleb128 0xf
 727 0225 3C030000 		.4byte	.LASF30
 728 0229 01       		.byte	0x1
 729 022a 2502     		.2byte	0x225
 730 022c 83000000 		.4byte	0x83
 731 0230 F4000000 		.4byte	.LLST6
 732 0234 11       		.uleb128 0x11
 733 0235 06000000 		.4byte	.LVL20
 734 0239 52030000 		.4byte	0x352
 735 023d 11       		.uleb128 0x11
 736 023e 0E000000 		.4byte	.LVL21
 737 0242 5E030000 		.4byte	0x35e
 738 0246 00       		.byte	0
 739 0247 0D       		.uleb128 0xd
 740 0248 3E010000 		.4byte	.LASF31
 741 024c 01       		.byte	0x1
 742 024d A602     		.2byte	0x2a6
 743 024f 00000000 		.4byte	.LFB7
 744 0253 16000000 		.4byte	.LFE7-.LFB7
 745 0257 01       		.uleb128 0x1
 746 0258 9C       		.byte	0x9c
 747 0259 87020000 		.4byte	0x287
 748 025d 0E       		.uleb128 0xe
 749 025e AB000000 		.4byte	.LASF32
 750 0262 01       		.byte	0x1
 751 0263 A602     		.2byte	0x2a6
 752 0265 87020000 		.4byte	0x287
 753 0269 07010000 		.4byte	.LLST7
 754 026d 0F       		.uleb128 0xf
 755 026e C1010000 		.4byte	.LASF33
 756 0272 01       		.byte	0x1
 757 0273 A802     		.2byte	0x2a8
 758 0275 83000000 		.4byte	0x83
 759 0279 33010000 		.4byte	.LLST8
 760 027d 11       		.uleb128 0x11
 761 027e 0C000000 		.4byte	.LVL30
 762 0282 6A030000 		.4byte	0x36a
 763 0286 00       		.byte	0
 764 0287 06       		.uleb128 0x6
 765 0288 04       		.byte	0x4
 766 0289 8D020000 		.4byte	0x28d
 767 028d 12       		.uleb128 0x12
 768 028e 9D000000 		.4byte	0x9d
 769 0292 0D       		.uleb128 0xd
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 27


 770 0293 20030000 		.4byte	.LASF34
 771 0297 01       		.byte	0x1
 772 0298 C102     		.2byte	0x2c1
 773 029a 00000000 		.4byte	.LFB8
 774 029e 14000000 		.4byte	.LFE8-.LFB8
 775 02a2 01       		.uleb128 0x1
 776 02a3 9C       		.byte	0x9c
 777 02a4 F0020000 		.4byte	0x2f0
 778 02a8 0E       		.uleb128 0xe
 779 02a9 35020000 		.4byte	.LASF35
 780 02ad 01       		.byte	0x1
 781 02ae C102     		.2byte	0x2c1
 782 02b0 83000000 		.4byte	0x83
 783 02b4 52010000 		.4byte	.LLST9
 784 02b8 09       		.uleb128 0x9
 785 02b9 06000000 		.4byte	.LVL35
 786 02bd 6A030000 		.4byte	0x36a
 787 02c1 CD020000 		.4byte	0x2cd
 788 02c5 0A       		.uleb128 0xa
 789 02c6 01       		.uleb128 0x1
 790 02c7 50       		.byte	0x50
 791 02c8 03       		.uleb128 0x3
 792 02c9 F3       		.byte	0xf3
 793 02ca 01       		.uleb128 0x1
 794 02cb 50       		.byte	0x50
 795 02cc 00       		.byte	0
 796 02cd 09       		.uleb128 0x9
 797 02ce 0C000000 		.4byte	.LVL36
 798 02d2 6A030000 		.4byte	0x36a
 799 02d6 E0020000 		.4byte	0x2e0
 800 02da 0A       		.uleb128 0xa
 801 02db 01       		.uleb128 0x1
 802 02dc 50       		.byte	0x50
 803 02dd 01       		.uleb128 0x1
 804 02de 3D       		.byte	0x3d
 805 02df 00       		.byte	0
 806 02e0 0B       		.uleb128 0xb
 807 02e1 12000000 		.4byte	.LVL37
 808 02e5 6A030000 		.4byte	0x36a
 809 02e9 0A       		.uleb128 0xa
 810 02ea 01       		.uleb128 0x1
 811 02eb 50       		.byte	0x50
 812 02ec 01       		.uleb128 0x1
 813 02ed 3A       		.byte	0x3a
 814 02ee 00       		.byte	0
 815 02ef 00       		.byte	0
 816 02f0 13       		.uleb128 0x13
 817 02f1 00000000 		.4byte	.LASF36
 818 02f5 03       		.byte	0x3
 819 02f6 5B       		.byte	0x5b
 820 02f7 77000000 		.4byte	0x77
 821 02fb 13       		.uleb128 0x13
 822 02fc 97000000 		.4byte	.LASF37
 823 0300 04       		.byte	0x4
 824 0301 2F       		.byte	0x2f
 825 0302 BC000000 		.4byte	0xbc
 826 0306 13       		.uleb128 0x13
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 28


 827 0307 5A010000 		.4byte	.LASF38
 828 030b 04       		.byte	0x4
 829 030c 30       		.byte	0x30
 830 030d BC000000 		.4byte	0xbc
 831 0311 14       		.uleb128 0x14
 832 0312 F8020000 		.4byte	.LASF39
 833 0316 05       		.byte	0x5
 834 0317 C5       		.byte	0xc5
 835 0318 22030000 		.4byte	0x322
 836 031c 15       		.uleb128 0x15
 837 031d 6B000000 		.4byte	0x6b
 838 0321 00       		.byte	0
 839 0322 14       		.uleb128 0x14
 840 0323 0F030000 		.4byte	.LASF40
 841 0327 05       		.byte	0x5
 842 0328 C0       		.byte	0xc0
 843 0329 38030000 		.4byte	0x338
 844 032d 15       		.uleb128 0x15
 845 032e 6B000000 		.4byte	0x6b
 846 0332 15       		.uleb128 0x15
 847 0333 6B000000 		.4byte	0x6b
 848 0337 00       		.byte	0
 849 0338 16       		.uleb128 0x16
 850 0339 36000000 		.4byte	.LASF46
 851 033d 05       		.byte	0x5
 852 033e BD       		.byte	0xbd
 853 033f C1000000 		.4byte	0xc1
 854 0343 52030000 		.4byte	0x352
 855 0347 15       		.uleb128 0x15
 856 0348 6B000000 		.4byte	0x6b
 857 034c 15       		.uleb128 0x15
 858 034d C1000000 		.4byte	0xc1
 859 0351 00       		.byte	0
 860 0352 17       		.uleb128 0x17
 861 0353 18000000 		.4byte	.LASF41
 862 0357 06       		.byte	0x6
 863 0358 3403     		.2byte	0x334
 864 035a 83000000 		.4byte	0x83
 865 035e 17       		.uleb128 0x17
 866 035f 6E010000 		.4byte	.LASF42
 867 0363 06       		.byte	0x6
 868 0364 3303     		.2byte	0x333
 869 0366 83000000 		.4byte	0x83
 870 036a 18       		.uleb128 0x18
 871 036b 24010000 		.4byte	.LASF47
 872 036f 06       		.byte	0x6
 873 0370 3A03     		.2byte	0x33a
 874 0372 15       		.uleb128 0x15
 875 0373 83000000 		.4byte	0x83
 876 0377 00       		.byte	0
 877 0378 00       		.byte	0
 878              		.section	.debug_abbrev,"",%progbits
 879              	.Ldebug_abbrev0:
 880 0000 01       		.uleb128 0x1
 881 0001 11       		.uleb128 0x11
 882 0002 01       		.byte	0x1
 883 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 29


 884 0004 0E       		.uleb128 0xe
 885 0005 13       		.uleb128 0x13
 886 0006 0B       		.uleb128 0xb
 887 0007 03       		.uleb128 0x3
 888 0008 0E       		.uleb128 0xe
 889 0009 1B       		.uleb128 0x1b
 890 000a 0E       		.uleb128 0xe
 891 000b 55       		.uleb128 0x55
 892 000c 17       		.uleb128 0x17
 893 000d 11       		.uleb128 0x11
 894 000e 01       		.uleb128 0x1
 895 000f 10       		.uleb128 0x10
 896 0010 17       		.uleb128 0x17
 897 0011 00       		.byte	0
 898 0012 00       		.byte	0
 899 0013 02       		.uleb128 0x2
 900 0014 24       		.uleb128 0x24
 901 0015 00       		.byte	0
 902 0016 0B       		.uleb128 0xb
 903 0017 0B       		.uleb128 0xb
 904 0018 3E       		.uleb128 0x3e
 905 0019 0B       		.uleb128 0xb
 906 001a 03       		.uleb128 0x3
 907 001b 0E       		.uleb128 0xe
 908 001c 00       		.byte	0
 909 001d 00       		.byte	0
 910 001e 03       		.uleb128 0x3
 911 001f 24       		.uleb128 0x24
 912 0020 00       		.byte	0
 913 0021 0B       		.uleb128 0xb
 914 0022 0B       		.uleb128 0xb
 915 0023 3E       		.uleb128 0x3e
 916 0024 0B       		.uleb128 0xb
 917 0025 03       		.uleb128 0x3
 918 0026 08       		.uleb128 0x8
 919 0027 00       		.byte	0
 920 0028 00       		.byte	0
 921 0029 04       		.uleb128 0x4
 922 002a 16       		.uleb128 0x16
 923 002b 00       		.byte	0
 924 002c 03       		.uleb128 0x3
 925 002d 0E       		.uleb128 0xe
 926 002e 3A       		.uleb128 0x3a
 927 002f 0B       		.uleb128 0xb
 928 0030 3B       		.uleb128 0x3b
 929 0031 05       		.uleb128 0x5
 930 0032 49       		.uleb128 0x49
 931 0033 13       		.uleb128 0x13
 932 0034 00       		.byte	0
 933 0035 00       		.byte	0
 934 0036 05       		.uleb128 0x5
 935 0037 35       		.uleb128 0x35
 936 0038 00       		.byte	0
 937 0039 49       		.uleb128 0x49
 938 003a 13       		.uleb128 0x13
 939 003b 00       		.byte	0
 940 003c 00       		.byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 30


 941 003d 06       		.uleb128 0x6
 942 003e 0F       		.uleb128 0xf
 943 003f 00       		.byte	0
 944 0040 0B       		.uleb128 0xb
 945 0041 0B       		.uleb128 0xb
 946 0042 49       		.uleb128 0x49
 947 0043 13       		.uleb128 0x13
 948 0044 00       		.byte	0
 949 0045 00       		.byte	0
 950 0046 07       		.uleb128 0x7
 951 0047 15       		.uleb128 0x15
 952 0048 00       		.byte	0
 953 0049 27       		.uleb128 0x27
 954 004a 19       		.uleb128 0x19
 955 004b 00       		.byte	0
 956 004c 00       		.byte	0
 957 004d 08       		.uleb128 0x8
 958 004e 2E       		.uleb128 0x2e
 959 004f 01       		.byte	0x1
 960 0050 3F       		.uleb128 0x3f
 961 0051 19       		.uleb128 0x19
 962 0052 03       		.uleb128 0x3
 963 0053 0E       		.uleb128 0xe
 964 0054 3A       		.uleb128 0x3a
 965 0055 0B       		.uleb128 0xb
 966 0056 3B       		.uleb128 0x3b
 967 0057 0B       		.uleb128 0xb
 968 0058 27       		.uleb128 0x27
 969 0059 19       		.uleb128 0x19
 970 005a 11       		.uleb128 0x11
 971 005b 01       		.uleb128 0x1
 972 005c 12       		.uleb128 0x12
 973 005d 06       		.uleb128 0x6
 974 005e 40       		.uleb128 0x40
 975 005f 18       		.uleb128 0x18
 976 0060 9742     		.uleb128 0x2117
 977 0062 19       		.uleb128 0x19
 978 0063 01       		.uleb128 0x1
 979 0064 13       		.uleb128 0x13
 980 0065 00       		.byte	0
 981 0066 00       		.byte	0
 982 0067 09       		.uleb128 0x9
 983 0068 898201   		.uleb128 0x4109
 984 006b 01       		.byte	0x1
 985 006c 11       		.uleb128 0x11
 986 006d 01       		.uleb128 0x1
 987 006e 31       		.uleb128 0x31
 988 006f 13       		.uleb128 0x13
 989 0070 01       		.uleb128 0x1
 990 0071 13       		.uleb128 0x13
 991 0072 00       		.byte	0
 992 0073 00       		.byte	0
 993 0074 0A       		.uleb128 0xa
 994 0075 8A8201   		.uleb128 0x410a
 995 0078 00       		.byte	0
 996 0079 02       		.uleb128 0x2
 997 007a 18       		.uleb128 0x18
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 31


 998 007b 9142     		.uleb128 0x2111
 999 007d 18       		.uleb128 0x18
 1000 007e 00       		.byte	0
 1001 007f 00       		.byte	0
 1002 0080 0B       		.uleb128 0xb
 1003 0081 898201   		.uleb128 0x4109
 1004 0084 01       		.byte	0x1
 1005 0085 11       		.uleb128 0x11
 1006 0086 01       		.uleb128 0x1
 1007 0087 31       		.uleb128 0x31
 1008 0088 13       		.uleb128 0x13
 1009 0089 00       		.byte	0
 1010 008a 00       		.byte	0
 1011 008b 0C       		.uleb128 0xc
 1012 008c 2E       		.uleb128 0x2e
 1013 008d 00       		.byte	0
 1014 008e 3F       		.uleb128 0x3f
 1015 008f 19       		.uleb128 0x19
 1016 0090 03       		.uleb128 0x3
 1017 0091 0E       		.uleb128 0xe
 1018 0092 3A       		.uleb128 0x3a
 1019 0093 0B       		.uleb128 0xb
 1020 0094 3B       		.uleb128 0x3b
 1021 0095 05       		.uleb128 0x5
 1022 0096 27       		.uleb128 0x27
 1023 0097 19       		.uleb128 0x19
 1024 0098 11       		.uleb128 0x11
 1025 0099 01       		.uleb128 0x1
 1026 009a 12       		.uleb128 0x12
 1027 009b 06       		.uleb128 0x6
 1028 009c 40       		.uleb128 0x40
 1029 009d 18       		.uleb128 0x18
 1030 009e 9742     		.uleb128 0x2117
 1031 00a0 19       		.uleb128 0x19
 1032 00a1 00       		.byte	0
 1033 00a2 00       		.byte	0
 1034 00a3 0D       		.uleb128 0xd
 1035 00a4 2E       		.uleb128 0x2e
 1036 00a5 01       		.byte	0x1
 1037 00a6 3F       		.uleb128 0x3f
 1038 00a7 19       		.uleb128 0x19
 1039 00a8 03       		.uleb128 0x3
 1040 00a9 0E       		.uleb128 0xe
 1041 00aa 3A       		.uleb128 0x3a
 1042 00ab 0B       		.uleb128 0xb
 1043 00ac 3B       		.uleb128 0x3b
 1044 00ad 05       		.uleb128 0x5
 1045 00ae 27       		.uleb128 0x27
 1046 00af 19       		.uleb128 0x19
 1047 00b0 11       		.uleb128 0x11
 1048 00b1 01       		.uleb128 0x1
 1049 00b2 12       		.uleb128 0x12
 1050 00b3 06       		.uleb128 0x6
 1051 00b4 40       		.uleb128 0x40
 1052 00b5 18       		.uleb128 0x18
 1053 00b6 9742     		.uleb128 0x2117
 1054 00b8 19       		.uleb128 0x19
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 32


 1055 00b9 01       		.uleb128 0x1
 1056 00ba 13       		.uleb128 0x13
 1057 00bb 00       		.byte	0
 1058 00bc 00       		.byte	0
 1059 00bd 0E       		.uleb128 0xe
 1060 00be 05       		.uleb128 0x5
 1061 00bf 00       		.byte	0
 1062 00c0 03       		.uleb128 0x3
 1063 00c1 0E       		.uleb128 0xe
 1064 00c2 3A       		.uleb128 0x3a
 1065 00c3 0B       		.uleb128 0xb
 1066 00c4 3B       		.uleb128 0x3b
 1067 00c5 05       		.uleb128 0x5
 1068 00c6 49       		.uleb128 0x49
 1069 00c7 13       		.uleb128 0x13
 1070 00c8 02       		.uleb128 0x2
 1071 00c9 17       		.uleb128 0x17
 1072 00ca 00       		.byte	0
 1073 00cb 00       		.byte	0
 1074 00cc 0F       		.uleb128 0xf
 1075 00cd 34       		.uleb128 0x34
 1076 00ce 00       		.byte	0
 1077 00cf 03       		.uleb128 0x3
 1078 00d0 0E       		.uleb128 0xe
 1079 00d1 3A       		.uleb128 0x3a
 1080 00d2 0B       		.uleb128 0xb
 1081 00d3 3B       		.uleb128 0x3b
 1082 00d4 05       		.uleb128 0x5
 1083 00d5 49       		.uleb128 0x49
 1084 00d6 13       		.uleb128 0x13
 1085 00d7 02       		.uleb128 0x2
 1086 00d8 17       		.uleb128 0x17
 1087 00d9 00       		.byte	0
 1088 00da 00       		.byte	0
 1089 00db 10       		.uleb128 0x10
 1090 00dc 2E       		.uleb128 0x2e
 1091 00dd 01       		.byte	0x1
 1092 00de 3F       		.uleb128 0x3f
 1093 00df 19       		.uleb128 0x19
 1094 00e0 03       		.uleb128 0x3
 1095 00e1 0E       		.uleb128 0xe
 1096 00e2 3A       		.uleb128 0x3a
 1097 00e3 0B       		.uleb128 0xb
 1098 00e4 3B       		.uleb128 0x3b
 1099 00e5 05       		.uleb128 0x5
 1100 00e6 27       		.uleb128 0x27
 1101 00e7 19       		.uleb128 0x19
 1102 00e8 49       		.uleb128 0x49
 1103 00e9 13       		.uleb128 0x13
 1104 00ea 11       		.uleb128 0x11
 1105 00eb 01       		.uleb128 0x1
 1106 00ec 12       		.uleb128 0x12
 1107 00ed 06       		.uleb128 0x6
 1108 00ee 40       		.uleb128 0x40
 1109 00ef 18       		.uleb128 0x18
 1110 00f0 9742     		.uleb128 0x2117
 1111 00f2 19       		.uleb128 0x19
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 33


 1112 00f3 01       		.uleb128 0x1
 1113 00f4 13       		.uleb128 0x13
 1114 00f5 00       		.byte	0
 1115 00f6 00       		.byte	0
 1116 00f7 11       		.uleb128 0x11
 1117 00f8 898201   		.uleb128 0x4109
 1118 00fb 00       		.byte	0
 1119 00fc 11       		.uleb128 0x11
 1120 00fd 01       		.uleb128 0x1
 1121 00fe 31       		.uleb128 0x31
 1122 00ff 13       		.uleb128 0x13
 1123 0100 00       		.byte	0
 1124 0101 00       		.byte	0
 1125 0102 12       		.uleb128 0x12
 1126 0103 26       		.uleb128 0x26
 1127 0104 00       		.byte	0
 1128 0105 49       		.uleb128 0x49
 1129 0106 13       		.uleb128 0x13
 1130 0107 00       		.byte	0
 1131 0108 00       		.byte	0
 1132 0109 13       		.uleb128 0x13
 1133 010a 34       		.uleb128 0x34
 1134 010b 00       		.byte	0
 1135 010c 03       		.uleb128 0x3
 1136 010d 0E       		.uleb128 0xe
 1137 010e 3A       		.uleb128 0x3a
 1138 010f 0B       		.uleb128 0xb
 1139 0110 3B       		.uleb128 0x3b
 1140 0111 0B       		.uleb128 0xb
 1141 0112 49       		.uleb128 0x49
 1142 0113 13       		.uleb128 0x13
 1143 0114 3F       		.uleb128 0x3f
 1144 0115 19       		.uleb128 0x19
 1145 0116 3C       		.uleb128 0x3c
 1146 0117 19       		.uleb128 0x19
 1147 0118 00       		.byte	0
 1148 0119 00       		.byte	0
 1149 011a 14       		.uleb128 0x14
 1150 011b 2E       		.uleb128 0x2e
 1151 011c 01       		.byte	0x1
 1152 011d 3F       		.uleb128 0x3f
 1153 011e 19       		.uleb128 0x19
 1154 011f 03       		.uleb128 0x3
 1155 0120 0E       		.uleb128 0xe
 1156 0121 3A       		.uleb128 0x3a
 1157 0122 0B       		.uleb128 0xb
 1158 0123 3B       		.uleb128 0x3b
 1159 0124 0B       		.uleb128 0xb
 1160 0125 27       		.uleb128 0x27
 1161 0126 19       		.uleb128 0x19
 1162 0127 3C       		.uleb128 0x3c
 1163 0128 19       		.uleb128 0x19
 1164 0129 01       		.uleb128 0x1
 1165 012a 13       		.uleb128 0x13
 1166 012b 00       		.byte	0
 1167 012c 00       		.byte	0
 1168 012d 15       		.uleb128 0x15
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 34


 1169 012e 05       		.uleb128 0x5
 1170 012f 00       		.byte	0
 1171 0130 49       		.uleb128 0x49
 1172 0131 13       		.uleb128 0x13
 1173 0132 00       		.byte	0
 1174 0133 00       		.byte	0
 1175 0134 16       		.uleb128 0x16
 1176 0135 2E       		.uleb128 0x2e
 1177 0136 01       		.byte	0x1
 1178 0137 3F       		.uleb128 0x3f
 1179 0138 19       		.uleb128 0x19
 1180 0139 03       		.uleb128 0x3
 1181 013a 0E       		.uleb128 0xe
 1182 013b 3A       		.uleb128 0x3a
 1183 013c 0B       		.uleb128 0xb
 1184 013d 3B       		.uleb128 0x3b
 1185 013e 0B       		.uleb128 0xb
 1186 013f 27       		.uleb128 0x27
 1187 0140 19       		.uleb128 0x19
 1188 0141 49       		.uleb128 0x49
 1189 0142 13       		.uleb128 0x13
 1190 0143 3C       		.uleb128 0x3c
 1191 0144 19       		.uleb128 0x19
 1192 0145 01       		.uleb128 0x1
 1193 0146 13       		.uleb128 0x13
 1194 0147 00       		.byte	0
 1195 0148 00       		.byte	0
 1196 0149 17       		.uleb128 0x17
 1197 014a 2E       		.uleb128 0x2e
 1198 014b 00       		.byte	0
 1199 014c 3F       		.uleb128 0x3f
 1200 014d 19       		.uleb128 0x19
 1201 014e 03       		.uleb128 0x3
 1202 014f 0E       		.uleb128 0xe
 1203 0150 3A       		.uleb128 0x3a
 1204 0151 0B       		.uleb128 0xb
 1205 0152 3B       		.uleb128 0x3b
 1206 0153 05       		.uleb128 0x5
 1207 0154 27       		.uleb128 0x27
 1208 0155 19       		.uleb128 0x19
 1209 0156 49       		.uleb128 0x49
 1210 0157 13       		.uleb128 0x13
 1211 0158 3C       		.uleb128 0x3c
 1212 0159 19       		.uleb128 0x19
 1213 015a 00       		.byte	0
 1214 015b 00       		.byte	0
 1215 015c 18       		.uleb128 0x18
 1216 015d 2E       		.uleb128 0x2e
 1217 015e 01       		.byte	0x1
 1218 015f 3F       		.uleb128 0x3f
 1219 0160 19       		.uleb128 0x19
 1220 0161 03       		.uleb128 0x3
 1221 0162 0E       		.uleb128 0xe
 1222 0163 3A       		.uleb128 0x3a
 1223 0164 0B       		.uleb128 0xb
 1224 0165 3B       		.uleb128 0x3b
 1225 0166 05       		.uleb128 0x5
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 35


 1226 0167 27       		.uleb128 0x27
 1227 0168 19       		.uleb128 0x19
 1228 0169 3C       		.uleb128 0x3c
 1229 016a 19       		.uleb128 0x19
 1230 016b 00       		.byte	0
 1231 016c 00       		.byte	0
 1232 016d 00       		.byte	0
 1233              		.section	.debug_loc,"",%progbits
 1234              	.Ldebug_loc0:
 1235              	.LLST0:
 1236 0000 00000000 		.4byte	.LVL3
 1237 0004 0A000000 		.4byte	.LVL6
 1238 0008 0100     		.2byte	0x1
 1239 000a 50       		.byte	0x50
 1240 000b 0A000000 		.4byte	.LVL6
 1241 000f 14000000 		.4byte	.LFE3
 1242 0013 0400     		.2byte	0x4
 1243 0015 F3       		.byte	0xf3
 1244 0016 01       		.uleb128 0x1
 1245 0017 50       		.byte	0x50
 1246 0018 9F       		.byte	0x9f
 1247 0019 00000000 		.4byte	0
 1248 001d 00000000 		.4byte	0
 1249              	.LLST1:
 1250 0021 04000000 		.4byte	.LVL4
 1251 0025 0C000000 		.4byte	.LVL7
 1252 0029 0100     		.2byte	0x1
 1253 002b 53       		.byte	0x53
 1254 002c 0C000000 		.4byte	.LVL7
 1255 0030 14000000 		.4byte	.LFE3
 1256 0034 0100     		.2byte	0x1
 1257 0036 50       		.byte	0x50
 1258 0037 00000000 		.4byte	0
 1259 003b 00000000 		.4byte	0
 1260              	.LLST2:
 1261 003f 00000000 		.4byte	.LVL8
 1262 0043 0A000000 		.4byte	.LVL11
 1263 0047 0100     		.2byte	0x1
 1264 0049 50       		.byte	0x50
 1265 004a 0A000000 		.4byte	.LVL11
 1266 004e 18000000 		.4byte	.LFE4
 1267 0052 0400     		.2byte	0x4
 1268 0054 F3       		.byte	0xf3
 1269 0055 01       		.uleb128 0x1
 1270 0056 50       		.byte	0x50
 1271 0057 9F       		.byte	0x9f
 1272 0058 00000000 		.4byte	0
 1273 005c 00000000 		.4byte	0
 1274              	.LLST3:
 1275 0060 04000000 		.4byte	.LVL9
 1276 0064 08000000 		.4byte	.LVL10
 1277 0068 0100     		.2byte	0x1
 1278 006a 51       		.byte	0x51
 1279 006b 08000000 		.4byte	.LVL10
 1280 006f 0C000000 		.4byte	.LVL12
 1281 0073 0100     		.2byte	0x1
 1282 0075 53       		.byte	0x53
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 36


 1283 0076 0C000000 		.4byte	.LVL12
 1284 007a 18000000 		.4byte	.LFE4
 1285 007e 0100     		.2byte	0x1
 1286 0080 50       		.byte	0x50
 1287 0081 00000000 		.4byte	0
 1288 0085 00000000 		.4byte	0
 1289              	.LLST4:
 1290 0089 02000000 		.4byte	.LVL13
 1291 008d 0E000000 		.4byte	.LVL15
 1292 0091 0200     		.2byte	0x2
 1293 0093 30       		.byte	0x30
 1294 0094 9F       		.byte	0x9f
 1295 0095 0E000000 		.4byte	.LVL15
 1296 0099 10000000 		.4byte	.LVL16
 1297 009d 0100     		.2byte	0x1
 1298 009f 50       		.byte	0x50
 1299 00a0 10000000 		.4byte	.LVL16
 1300 00a4 12000000 		.4byte	.LVL17
 1301 00a8 0200     		.2byte	0x2
 1302 00aa 30       		.byte	0x30
 1303 00ab 9F       		.byte	0x9f
 1304 00ac 12000000 		.4byte	.LVL17
 1305 00b0 1E000000 		.4byte	.LVL18
 1306 00b4 0100     		.2byte	0x1
 1307 00b6 50       		.byte	0x50
 1308 00b7 1E000000 		.4byte	.LVL18
 1309 00bb 26000000 		.4byte	.LVL19
 1310 00bf 0200     		.2byte	0x2
 1311 00c1 30       		.byte	0x30
 1312 00c2 9F       		.byte	0x9f
 1313 00c3 26000000 		.4byte	.LVL19
 1314 00c7 2C000000 		.4byte	.LFE5
 1315 00cb 0100     		.2byte	0x1
 1316 00cd 50       		.byte	0x50
 1317 00ce 00000000 		.4byte	0
 1318 00d2 00000000 		.4byte	0
 1319              	.LLST5:
 1320 00d6 0E000000 		.4byte	.LVL21
 1321 00da 10000000 		.4byte	.LVL22
 1322 00de 0100     		.2byte	0x1
 1323 00e0 50       		.byte	0x50
 1324 00e1 14000000 		.4byte	.LVL23
 1325 00e5 30000000 		.4byte	.LFE6
 1326 00e9 0100     		.2byte	0x1
 1327 00eb 50       		.byte	0x50
 1328 00ec 00000000 		.4byte	0
 1329 00f0 00000000 		.4byte	0
 1330              	.LLST6:
 1331 00f4 1E000000 		.4byte	.LVL24
 1332 00f8 22000000 		.4byte	.LVL25
 1333 00fc 0100     		.2byte	0x1
 1334 00fe 53       		.byte	0x53
 1335 00ff 00000000 		.4byte	0
 1336 0103 00000000 		.4byte	0
 1337              	.LLST7:
 1338 0107 00000000 		.4byte	.LVL27
 1339 010b 08000000 		.4byte	.LVL29
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 37


 1340 010f 0100     		.2byte	0x1
 1341 0111 50       		.byte	0x50
 1342 0112 08000000 		.4byte	.LVL29
 1343 0116 14000000 		.4byte	.LVL33
 1344 011a 0100     		.2byte	0x1
 1345 011c 55       		.byte	0x55
 1346 011d 14000000 		.4byte	.LVL33
 1347 0121 16000000 		.4byte	.LFE7
 1348 0125 0400     		.2byte	0x4
 1349 0127 F3       		.byte	0xf3
 1350 0128 01       		.uleb128 0x1
 1351 0129 50       		.byte	0x50
 1352 012a 9F       		.byte	0x9f
 1353 012b 00000000 		.4byte	0
 1354 012f 00000000 		.4byte	0
 1355              	.LLST8:
 1356 0133 04000000 		.4byte	.LVL28
 1357 0137 08000000 		.4byte	.LVL29
 1358 013b 0200     		.2byte	0x2
 1359 013d 30       		.byte	0x30
 1360 013e 9F       		.byte	0x9f
 1361 013f 08000000 		.4byte	.LVL29
 1362 0143 14000000 		.4byte	.LVL32
 1363 0147 0100     		.2byte	0x1
 1364 0149 54       		.byte	0x54
 1365 014a 00000000 		.4byte	0
 1366 014e 00000000 		.4byte	0
 1367              	.LLST9:
 1368 0152 00000000 		.4byte	.LVL34
 1369 0156 05000000 		.4byte	.LVL35-1
 1370 015a 0100     		.2byte	0x1
 1371 015c 50       		.byte	0x50
 1372 015d 05000000 		.4byte	.LVL35-1
 1373 0161 14000000 		.4byte	.LFE8
 1374 0165 0400     		.2byte	0x4
 1375 0167 F3       		.byte	0xf3
 1376 0168 01       		.uleb128 0x1
 1377 0169 50       		.byte	0x50
 1378 016a 9F       		.byte	0x9f
 1379 016b 00000000 		.4byte	0
 1380 016f 00000000 		.4byte	0
 1381              		.section	.debug_aranges,"",%progbits
 1382 0000 5C000000 		.4byte	0x5c
 1383 0004 0200     		.2byte	0x2
 1384 0006 00000000 		.4byte	.Ldebug_info0
 1385 000a 04       		.byte	0x4
 1386 000b 00       		.byte	0
 1387 000c 0000     		.2byte	0
 1388 000e 0000     		.2byte	0
 1389 0010 00000000 		.4byte	.LFB0
 1390 0014 C4000000 		.4byte	.LFE0-.LFB0
 1391 0018 00000000 		.4byte	.LFB1
 1392 001c 2C000000 		.4byte	.LFE1-.LFB1
 1393 0020 00000000 		.4byte	.LFB2
 1394 0024 2C000000 		.4byte	.LFE2-.LFB2
 1395 0028 00000000 		.4byte	.LFB3
 1396 002c 14000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 38


 1397 0030 00000000 		.4byte	.LFB4
 1398 0034 18000000 		.4byte	.LFE4-.LFB4
 1399 0038 00000000 		.4byte	.LFB5
 1400 003c 2C000000 		.4byte	.LFE5-.LFB5
 1401 0040 00000000 		.4byte	.LFB6
 1402 0044 30000000 		.4byte	.LFE6-.LFB6
 1403 0048 00000000 		.4byte	.LFB7
 1404 004c 16000000 		.4byte	.LFE7-.LFB7
 1405 0050 00000000 		.4byte	.LFB8
 1406 0054 14000000 		.4byte	.LFE8-.LFB8
 1407 0058 00000000 		.4byte	0
 1408 005c 00000000 		.4byte	0
 1409              		.section	.debug_ranges,"",%progbits
 1410              	.Ldebug_ranges0:
 1411 0000 00000000 		.4byte	.LFB0
 1412 0004 C4000000 		.4byte	.LFE0
 1413 0008 00000000 		.4byte	.LFB1
 1414 000c 2C000000 		.4byte	.LFE1
 1415 0010 00000000 		.4byte	.LFB2
 1416 0014 2C000000 		.4byte	.LFE2
 1417 0018 00000000 		.4byte	.LFB3
 1418 001c 14000000 		.4byte	.LFE3
 1419 0020 00000000 		.4byte	.LFB4
 1420 0024 18000000 		.4byte	.LFE4
 1421 0028 00000000 		.4byte	.LFB5
 1422 002c 2C000000 		.4byte	.LFE5
 1423 0030 00000000 		.4byte	.LFB6
 1424 0034 30000000 		.4byte	.LFE6
 1425 0038 00000000 		.4byte	.LFB7
 1426 003c 16000000 		.4byte	.LFE7
 1427 0040 00000000 		.4byte	.LFB8
 1428 0044 14000000 		.4byte	.LFE8
 1429 0048 00000000 		.4byte	0
 1430 004c 00000000 		.4byte	0
 1431              		.section	.debug_line,"",%progbits
 1432              	.Ldebug_line0:
 1433 0000 77010000 		.section	.debug_str,"MS",%progbits,1
 1433      02009100 
 1433      00000201 
 1433      FB0E0D00 
 1433      01010101 
 1434              	.LASF36:
 1435 0000 73657269 		.ascii	"serial_IntrTxMask\000"
 1435      616C5F49 
 1435      6E747254 
 1435      784D6173 
 1435      6B00
 1436              	.LASF16:
 1437 0012 72656733 		.ascii	"reg32\000"
 1437      3200
 1438              	.LASF41:
 1439 0018 73657269 		.ascii	"serial_SpiUartGetRxBufferSize\000"
 1439      616C5F53 
 1439      70695561 
 1439      72744765 
 1439      74527842 
 1440              	.LASF46:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 39


 1441 0036 4379496E 		.ascii	"CyIntSetVector\000"
 1441      74536574 
 1441      56656374 
 1441      6F7200
 1442              	.LASF45:
 1443 0045 433A5C55 		.ascii	"C:\\Users\\a85495\\Desktop\\PSoC-Quadcopter\\Sensor"
 1443      73657273 
 1443      5C613835 
 1443      3439355C 
 1443      4465736B 
 1444 0073 735C5365 		.ascii	"s\\Sensor Test\\Base Station_v2.cydsn\000"
 1444      6E736F72 
 1444      20546573 
 1444      745C4261 
 1444      73652053 
 1445              	.LASF37:
 1446 0097 73657269 		.ascii	"serial_txBufferHead\000"
 1446      616C5F74 
 1446      78427566 
 1446      66657248 
 1446      65616400 
 1447              	.LASF32:
 1448 00ab 73747269 		.ascii	"string\000"
 1448      6E6700
 1449              	.LASF12:
 1450 00b2 666C6F61 		.ascii	"float\000"
 1450      7400
 1451              	.LASF6:
 1452 00b8 6C6F6E67 		.ascii	"long long int\000"
 1452      206C6F6E 
 1452      6720696E 
 1452      7400
 1453              	.LASF29:
 1454 00c6 73657269 		.ascii	"serial_UartGetByte\000"
 1454      616C5F55 
 1454      61727447 
 1454      65744279 
 1454      746500
 1455              	.LASF1:
 1456 00d9 756E7369 		.ascii	"unsigned char\000"
 1456      676E6564 
 1456      20636861 
 1456      7200
 1457              	.LASF14:
 1458 00e7 63686172 		.ascii	"char8\000"
 1458      3800
 1459              	.LASF5:
 1460 00ed 6C6F6E67 		.ascii	"long unsigned int\000"
 1460      20756E73 
 1460      69676E65 
 1460      6420696E 
 1460      7400
 1461              	.LASF9:
 1462 00ff 75696E74 		.ascii	"uint8\000"
 1462      3800
 1463              	.LASF22:
 1464 0105 73657269 		.ascii	"serial_UartSetRxAddress\000"
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 40


 1464      616C5F55 
 1464      61727453 
 1464      65745278 
 1464      41646472 
 1465              	.LASF27:
 1466 011d 72784461 		.ascii	"rxData\000"
 1466      746100
 1467              	.LASF47:
 1468 0124 73657269 		.ascii	"serial_SpiUartWriteTxData\000"
 1468      616C5F53 
 1468      70695561 
 1468      72745772 
 1468      69746554 
 1469              	.LASF31:
 1470 013e 73657269 		.ascii	"serial_UartPutString\000"
 1470      616C5F55 
 1470      61727450 
 1470      75745374 
 1470      72696E67 
 1471              	.LASF13:
 1472 0153 646F7562 		.ascii	"double\000"
 1472      6C6500
 1473              	.LASF38:
 1474 015a 73657269 		.ascii	"serial_txBufferTail\000"
 1474      616C5F74 
 1474      78427566 
 1474      66657254 
 1474      61696C00 
 1475              	.LASF42:
 1476 016e 73657269 		.ascii	"serial_SpiUartReadRxData\000"
 1476      616C5F53 
 1476      70695561 
 1476      72745265 
 1476      61645278 
 1477              	.LASF10:
 1478 0187 75696E74 		.ascii	"uint16\000"
 1478      313600
 1479              	.LASF11:
 1480 018e 75696E74 		.ascii	"uint32\000"
 1480      333200
 1481              	.LASF8:
 1482 0195 756E7369 		.ascii	"unsigned int\000"
 1482      676E6564 
 1482      20696E74 
 1482      00
 1483              	.LASF24:
 1484 01a2 61646472 		.ascii	"address\000"
 1484      65737300 
 1485              	.LASF7:
 1486 01aa 6C6F6E67 		.ascii	"long long unsigned int\000"
 1486      206C6F6E 
 1486      6720756E 
 1486      7369676E 
 1486      65642069 
 1487              	.LASF33:
 1488 01c1 62756649 		.ascii	"bufIndex\000"
 1488      6E646578 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 41


 1488      00
 1489              	.LASF21:
 1490 01ca 73657269 		.ascii	"serial_UartInit\000"
 1490      616C5F55 
 1490      61727449 
 1490      6E697400 
 1491              	.LASF23:
 1492 01da 73657269 		.ascii	"serial_UartSetRxAddressMask\000"
 1492      616C5F55 
 1492      61727453 
 1492      65745278 
 1492      41646472 
 1493              	.LASF17:
 1494 01f6 63796973 		.ascii	"cyisraddress\000"
 1494      72616464 
 1494      72657373 
 1494      00
 1495              	.LASF19:
 1496 0203 73657269 		.ascii	"serial_UartPostEnable\000"
 1496      616C5F55 
 1496      61727450 
 1496      6F737445 
 1496      6E61626C 
 1497              	.LASF18:
 1498 0219 73697A65 		.ascii	"sizetype\000"
 1498      74797065 
 1498      00
 1499              	.LASF28:
 1500 0222 73657269 		.ascii	"serial_UartGetChar\000"
 1500      616C5F55 
 1500      61727447 
 1500      65744368 
 1500      617200
 1501              	.LASF35:
 1502 0235 74784461 		.ascii	"txDataByte\000"
 1502      74614279 
 1502      746500
 1503              	.LASF15:
 1504 0240 63686172 		.ascii	"char\000"
 1504      00
 1505              	.LASF44:
 1506 0245 47656E65 		.ascii	"Generated_Source\\PSoC4\\serial_UART.c\000"
 1506      72617465 
 1506      645F536F 
 1506      75726365 
 1506      5C50536F 
 1507              	.LASF43:
 1508 026a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1508      4320342E 
 1508      392E3320 
 1508      32303135 
 1508      30333033 
 1509 029d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1509      20726576 
 1509      6973696F 
 1509      6E203232 
 1509      31323230 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 42


 1510 02d0 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1510      66756E63 
 1510      74696F6E 
 1510      2D736563 
 1510      74696F6E 
 1511              	.LASF39:
 1512 02f8 4379496E 		.ascii	"CyIntDisable\000"
 1512      74446973 
 1512      61626C65 
 1512      00
 1513              	.LASF2:
 1514 0305 73686F72 		.ascii	"short int\000"
 1514      7420696E 
 1514      7400
 1515              	.LASF40:
 1516 030f 4379496E 		.ascii	"CyIntSetPriority\000"
 1516      74536574 
 1516      5072696F 
 1516      72697479 
 1516      00
 1517              	.LASF34:
 1518 0320 73657269 		.ascii	"serial_UartPutCRLF\000"
 1518      616C5F55 
 1518      61727450 
 1518      75744352 
 1518      4C4600
 1519              	.LASF4:
 1520 0333 6C6F6E67 		.ascii	"long int\000"
 1520      20696E74 
 1520      00
 1521              	.LASF30:
 1522 033c 746D7053 		.ascii	"tmpStatus\000"
 1522      74617475 
 1522      7300
 1523              	.LASF26:
 1524 0346 6D617463 		.ascii	"matchReg\000"
 1524      68526567 
 1524      00
 1525              	.LASF0:
 1526 034f 7369676E 		.ascii	"signed char\000"
 1526      65642063 
 1526      68617200 
 1527              	.LASF3:
 1528 035b 73686F72 		.ascii	"short unsigned int\000"
 1528      7420756E 
 1528      7369676E 
 1528      65642069 
 1528      6E7400
 1529              	.LASF20:
 1530 036e 73657269 		.ascii	"serial_UartStop\000"
 1530      616C5F55 
 1530      61727453 
 1530      746F7000 
 1531              	.LASF25:
 1532 037e 61646472 		.ascii	"addressMask\000"
 1532      6573734D 
 1532      61736B00 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccvSCqWN.s 			page 43


 1533              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
