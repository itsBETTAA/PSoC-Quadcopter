ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"serial_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.serial_UartInit,"ax",%progbits
  18              		.align	2
  19              		.global	serial_UartInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	serial_UartInit, %function
  23              	serial_UartInit:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\serial_UART.c"
   1:Generated_Source\PSoC4/serial_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/serial_UART.c **** * \file serial_UART.c
   3:Generated_Source\PSoC4/serial_UART.c **** * \version 3.20
   4:Generated_Source\PSoC4/serial_UART.c **** *
   5:Generated_Source\PSoC4/serial_UART.c **** * \brief
   6:Generated_Source\PSoC4/serial_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/serial_UART.c **** *  UART mode.
   8:Generated_Source\PSoC4/serial_UART.c **** *
   9:Generated_Source\PSoC4/serial_UART.c **** * Note:
  10:Generated_Source\PSoC4/serial_UART.c **** *
  11:Generated_Source\PSoC4/serial_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/serial_UART.c **** * \copyright
  13:Generated_Source\PSoC4/serial_UART.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/serial_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/serial_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/serial_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/serial_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/serial_UART.c **** 
  19:Generated_Source\PSoC4/serial_UART.c **** #include "serial_PVT.h"
  20:Generated_Source\PSoC4/serial_UART.c **** #include "serial_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/serial_UART.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/serial_UART.c **** 
  23:Generated_Source\PSoC4/serial_UART.c **** #if (serial_UART_WAKE_ENABLE_CONST && serial_UART_RX_WAKEUP_IRQ)
  24:Generated_Source\PSoC4/serial_UART.c ****     /**
  25:Generated_Source\PSoC4/serial_UART.c ****     * \addtogroup group_globals
  26:Generated_Source\PSoC4/serial_UART.c ****     * \{
  27:Generated_Source\PSoC4/serial_UART.c ****     */
  28:Generated_Source\PSoC4/serial_UART.c ****     /** This global variable determines whether to enable Skip Start
  29:Generated_Source\PSoC4/serial_UART.c ****     * functionality when serial_Sleep() function is called:
  30:Generated_Source\PSoC4/serial_UART.c ****     * 0 – disable, other values – enable. Default value is 1.
  31:Generated_Source\PSoC4/serial_UART.c ****     * It is only available when Enable wakeup from Deep Sleep Mode is enabled.
  32:Generated_Source\PSoC4/serial_UART.c ****     */
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 2


  33:Generated_Source\PSoC4/serial_UART.c ****     uint8 serial_skipStart = 1u;
  34:Generated_Source\PSoC4/serial_UART.c ****     /** \} globals */
  35:Generated_Source\PSoC4/serial_UART.c **** #endif /* (serial_UART_WAKE_ENABLE_CONST && serial_UART_RX_WAKEUP_IRQ) */
  36:Generated_Source\PSoC4/serial_UART.c **** 
  37:Generated_Source\PSoC4/serial_UART.c **** #if(serial_SCB_MODE_UNCONFIG_CONST_CFG)
  38:Generated_Source\PSoC4/serial_UART.c **** 
  39:Generated_Source\PSoC4/serial_UART.c ****     /***************************************
  40:Generated_Source\PSoC4/serial_UART.c ****     *  Configuration Structure Initialization
  41:Generated_Source\PSoC4/serial_UART.c ****     ***************************************/
  42:Generated_Source\PSoC4/serial_UART.c **** 
  43:Generated_Source\PSoC4/serial_UART.c ****     const serial_UART_INIT_STRUCT serial_configUart =
  44:Generated_Source\PSoC4/serial_UART.c ****     {
  45:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_SUB_MODE,
  46:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_DIRECTION,
  47:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_DATA_BITS_NUM,
  48:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_PARITY_TYPE,
  49:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_STOP_BITS_NUM,
  50:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_OVS_FACTOR,
  51:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_IRDA_LOW_POWER,
  52:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_MEDIAN_FILTER_ENABLE,
  53:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_RETRY_ON_NACK,
  54:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_IRDA_POLARITY,
  55:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_DROP_ON_PARITY_ERR,
  56:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_DROP_ON_FRAME_ERR,
  57:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_WAKE_ENABLE,
  58:Generated_Source\PSoC4/serial_UART.c ****         0u,
  59:Generated_Source\PSoC4/serial_UART.c ****         NULL,
  60:Generated_Source\PSoC4/serial_UART.c ****         0u,
  61:Generated_Source\PSoC4/serial_UART.c ****         NULL,
  62:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_MP_MODE_ENABLE,
  63:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_MP_ACCEPT_ADDRESS,
  64:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_MP_RX_ADDRESS,
  65:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_MP_RX_ADDRESS_MASK,
  66:Generated_Source\PSoC4/serial_UART.c ****         (uint32) serial_SCB_IRQ_INTERNAL,
  67:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_INTR_RX_MASK,
  68:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_RX_TRIGGER_LEVEL,
  69:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_INTR_TX_MASK,
  70:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_TX_TRIGGER_LEVEL,
  71:Generated_Source\PSoC4/serial_UART.c ****         (uint8) serial_UART_BYTE_MODE_ENABLE,
  72:Generated_Source\PSoC4/serial_UART.c ****         (uint8) serial_UART_CTS_ENABLE,
  73:Generated_Source\PSoC4/serial_UART.c ****         (uint8) serial_UART_CTS_POLARITY,
  74:Generated_Source\PSoC4/serial_UART.c ****         (uint8) serial_UART_RTS_POLARITY,
  75:Generated_Source\PSoC4/serial_UART.c ****         (uint8) serial_UART_RTS_FIFO_LEVEL
  76:Generated_Source\PSoC4/serial_UART.c ****     };
  77:Generated_Source\PSoC4/serial_UART.c **** 
  78:Generated_Source\PSoC4/serial_UART.c **** 
  79:Generated_Source\PSoC4/serial_UART.c ****     /*******************************************************************************
  80:Generated_Source\PSoC4/serial_UART.c ****     * Function Name: serial_UartInit
  81:Generated_Source\PSoC4/serial_UART.c ****     ****************************************************************************//**
  82:Generated_Source\PSoC4/serial_UART.c ****     *
  83:Generated_Source\PSoC4/serial_UART.c ****     *  Configures the serial for UART operation.
  84:Generated_Source\PSoC4/serial_UART.c ****     *
  85:Generated_Source\PSoC4/serial_UART.c ****     *  This function is intended specifically to be used when the serial
  86:Generated_Source\PSoC4/serial_UART.c ****     *  configuration is set to “Unconfigured serial” in the customizer.
  87:Generated_Source\PSoC4/serial_UART.c ****     *  After initializing the serial in UART mode using this function,
  88:Generated_Source\PSoC4/serial_UART.c ****     *  the component can be enabled using the serial_Start() or
  89:Generated_Source\PSoC4/serial_UART.c ****     * serial_Enable() function.
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 3


  90:Generated_Source\PSoC4/serial_UART.c ****     *  This function uses a pointer to a structure that provides the configuration
  91:Generated_Source\PSoC4/serial_UART.c ****     *  settings. This structure contains the same information that would otherwise
  92:Generated_Source\PSoC4/serial_UART.c ****     *  be provided by the customizer settings.
  93:Generated_Source\PSoC4/serial_UART.c ****     *
  94:Generated_Source\PSoC4/serial_UART.c ****     *  \param config: pointer to a structure that contains the following list of
  95:Generated_Source\PSoC4/serial_UART.c ****     *   fields. These fields match the selections available in the customizer.
  96:Generated_Source\PSoC4/serial_UART.c ****     *   Refer to the customizer for further description of the settings.
  97:Generated_Source\PSoC4/serial_UART.c ****     *
  98:Generated_Source\PSoC4/serial_UART.c ****     *******************************************************************************/
  99:Generated_Source\PSoC4/serial_UART.c ****     void serial_UartInit(const serial_UART_INIT_STRUCT *config)
 100:Generated_Source\PSoC4/serial_UART.c ****     {
 101:Generated_Source\PSoC4/serial_UART.c ****         uint32 pinsConfig;
 102:Generated_Source\PSoC4/serial_UART.c **** 
 103:Generated_Source\PSoC4/serial_UART.c ****         if (NULL == config)
 104:Generated_Source\PSoC4/serial_UART.c ****         {
 105:Generated_Source\PSoC4/serial_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
 106:Generated_Source\PSoC4/serial_UART.c ****         }
 107:Generated_Source\PSoC4/serial_UART.c ****         else
 108:Generated_Source\PSoC4/serial_UART.c ****         {
 109:Generated_Source\PSoC4/serial_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
 110:Generated_Source\PSoC4/serial_UART.c ****             pinsConfig  = config->direction;
 111:Generated_Source\PSoC4/serial_UART.c **** 
 112:Generated_Source\PSoC4/serial_UART.c ****         #if !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1)
 113:Generated_Source\PSoC4/serial_UART.c ****             /* Add RTS and CTS pins to configure */
 114:Generated_Source\PSoC4/serial_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (serial_UART_RTS_PIN_ENABLE) : (0u);
 115:Generated_Source\PSoC4/serial_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (serial_UART_CTS_PIN_ENABLE) : (0u);
 116:Generated_Source\PSoC4/serial_UART.c ****         #endif /* !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1) */
 117:Generated_Source\PSoC4/serial_UART.c **** 
 118:Generated_Source\PSoC4/serial_UART.c ****             /* Configure pins */
 119:Generated_Source\PSoC4/serial_UART.c ****             serial_SetPins(serial_SCB_MODE_UART, config->mode, pinsConfig);
 120:Generated_Source\PSoC4/serial_UART.c **** 
 121:Generated_Source\PSoC4/serial_UART.c ****             /* Store internal configuration */
 122:Generated_Source\PSoC4/serial_UART.c ****             serial_scbMode       = (uint8) serial_SCB_MODE_UART;
 123:Generated_Source\PSoC4/serial_UART.c ****             serial_scbEnableWake = (uint8) config->enableWake;
 124:Generated_Source\PSoC4/serial_UART.c ****             serial_scbEnableIntr = (uint8) config->enableInterrupt;
 125:Generated_Source\PSoC4/serial_UART.c **** 
 126:Generated_Source\PSoC4/serial_UART.c ****             /* Set RX direction internal variables */
 127:Generated_Source\PSoC4/serial_UART.c ****             serial_rxBuffer      =         config->rxBuffer;
 128:Generated_Source\PSoC4/serial_UART.c ****             serial_rxDataBits    = (uint8) config->dataBits;
 129:Generated_Source\PSoC4/serial_UART.c ****             serial_rxBufferSize  = (uint8) config->rxBufferSize;
 130:Generated_Source\PSoC4/serial_UART.c **** 
 131:Generated_Source\PSoC4/serial_UART.c ****             /* Set TX direction internal variables */
 132:Generated_Source\PSoC4/serial_UART.c ****             serial_txBuffer      =         config->txBuffer;
 133:Generated_Source\PSoC4/serial_UART.c ****             serial_txDataBits    = (uint8) config->dataBits;
 134:Generated_Source\PSoC4/serial_UART.c ****             serial_txBufferSize  = (uint8) config->txBufferSize;
 135:Generated_Source\PSoC4/serial_UART.c **** 
 136:Generated_Source\PSoC4/serial_UART.c ****             /* Configure UART interface */
 137:Generated_Source\PSoC4/serial_UART.c ****             if(serial_UART_MODE_IRDA == config->mode)
 138:Generated_Source\PSoC4/serial_UART.c ****             {
 139:Generated_Source\PSoC4/serial_UART.c ****                 /* OVS settings: IrDA */
 140:Generated_Source\PSoC4/serial_UART.c ****                 serial_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 141:Generated_Source\PSoC4/serial_UART.c ****                                                 (serial_UART_GET_CTRL_OVS_IRDA_LP(config->oversampl
 142:Generated_Source\PSoC4/serial_UART.c ****                                                 (serial_CTRL_OVS_IRDA_OVS16));
 143:Generated_Source\PSoC4/serial_UART.c ****             }
 144:Generated_Source\PSoC4/serial_UART.c ****             else
 145:Generated_Source\PSoC4/serial_UART.c ****             {
 146:Generated_Source\PSoC4/serial_UART.c ****                 /* OVS settings: UART and SmartCard */
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 4


 147:Generated_Source\PSoC4/serial_UART.c ****                 serial_CTRL_REG  = serial_GET_CTRL_OVS(config->oversample);
 148:Generated_Source\PSoC4/serial_UART.c ****             }
 149:Generated_Source\PSoC4/serial_UART.c **** 
 150:Generated_Source\PSoC4/serial_UART.c ****             serial_CTRL_REG     |= serial_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 151:Generated_Source\PSoC4/serial_UART.c ****                                              serial_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAdd
 152:Generated_Source\PSoC4/serial_UART.c ****                                              serial_CTRL_UART;
 153:Generated_Source\PSoC4/serial_UART.c **** 
 154:Generated_Source\PSoC4/serial_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 155:Generated_Source\PSoC4/serial_UART.c ****             serial_UART_CTRL_REG = serial_GET_UART_CTRL_MODE(config->mode);
 156:Generated_Source\PSoC4/serial_UART.c **** 
 157:Generated_Source\PSoC4/serial_UART.c ****             /* Configure RX direction */
 158:Generated_Source\PSoC4/serial_UART.c ****             serial_UART_RX_CTRL_REG = serial_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 159:Generated_Source\PSoC4/serial_UART.c ****                                         serial_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx) 
 160:Generated_Source\PSoC4/serial_UART.c ****                                         serial_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)   
 161:Generated_Source\PSoC4/serial_UART.c ****                                         serial_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPa
 162:Generated_Source\PSoC4/serial_UART.c ****                                         serial_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFra
 163:Generated_Source\PSoC4/serial_UART.c **** 
 164:Generated_Source\PSoC4/serial_UART.c ****             if(serial_UART_PARITY_NONE != config->parity)
 165:Generated_Source\PSoC4/serial_UART.c ****             {
 166:Generated_Source\PSoC4/serial_UART.c ****                serial_UART_RX_CTRL_REG |= serial_GET_UART_RX_CTRL_PARITY(config->parity) |
 167:Generated_Source\PSoC4/serial_UART.c ****                                                     serial_UART_RX_CTRL_PARITY_ENABLED;
 168:Generated_Source\PSoC4/serial_UART.c ****             }
 169:Generated_Source\PSoC4/serial_UART.c **** 
 170:Generated_Source\PSoC4/serial_UART.c ****             serial_RX_CTRL_REG      = serial_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 171:Generated_Source\PSoC4/serial_UART.c ****                                                 serial_GET_RX_CTRL_MEDIAN(config->enableMedianFilte
 172:Generated_Source\PSoC4/serial_UART.c ****                                                 serial_GET_UART_RX_CTRL_ENABLED(config->direction);
 173:Generated_Source\PSoC4/serial_UART.c **** 
 174:Generated_Source\PSoC4/serial_UART.c ****             serial_RX_FIFO_CTRL_REG = serial_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel)
 175:Generated_Source\PSoC4/serial_UART.c **** 
 176:Generated_Source\PSoC4/serial_UART.c ****             /* Configure MP address */
 177:Generated_Source\PSoC4/serial_UART.c ****             serial_RX_MATCH_REG     = serial_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 178:Generated_Source\PSoC4/serial_UART.c ****                                                 serial_GET_RX_MATCH_MASK(config->multiprocAddrMask)
 179:Generated_Source\PSoC4/serial_UART.c **** 
 180:Generated_Source\PSoC4/serial_UART.c ****             /* Configure RX direction */
 181:Generated_Source\PSoC4/serial_UART.c ****             serial_UART_TX_CTRL_REG = serial_GET_UART_TX_CTRL_MODE(config->stopBits) |
 182:Generated_Source\PSoC4/serial_UART.c ****                                                 serial_GET_UART_TX_CTRL_RETRY_NACK(config->enableRe
 183:Generated_Source\PSoC4/serial_UART.c **** 
 184:Generated_Source\PSoC4/serial_UART.c ****             if(serial_UART_PARITY_NONE != config->parity)
 185:Generated_Source\PSoC4/serial_UART.c ****             {
 186:Generated_Source\PSoC4/serial_UART.c ****                serial_UART_TX_CTRL_REG |= serial_GET_UART_TX_CTRL_PARITY(config->parity) |
 187:Generated_Source\PSoC4/serial_UART.c ****                                                     serial_UART_TX_CTRL_PARITY_ENABLED;
 188:Generated_Source\PSoC4/serial_UART.c ****             }
 189:Generated_Source\PSoC4/serial_UART.c **** 
 190:Generated_Source\PSoC4/serial_UART.c ****             serial_TX_CTRL_REG      = serial_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 191:Generated_Source\PSoC4/serial_UART.c ****                                                 serial_GET_UART_TX_CTRL_ENABLED(config->direction);
 192:Generated_Source\PSoC4/serial_UART.c **** 
 193:Generated_Source\PSoC4/serial_UART.c ****             serial_TX_FIFO_CTRL_REG = serial_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel)
 194:Generated_Source\PSoC4/serial_UART.c **** 
 195:Generated_Source\PSoC4/serial_UART.c ****         #if !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1)
 196:Generated_Source\PSoC4/serial_UART.c ****             serial_UART_FLOW_CTRL_REG = serial_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 197:Generated_Source\PSoC4/serial_UART.c ****                                             serial_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPola
 198:Generated_Source\PSoC4/serial_UART.c ****                                             serial_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPola
 199:Generated_Source\PSoC4/serial_UART.c ****                                             serial_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFi
 200:Generated_Source\PSoC4/serial_UART.c ****         #endif /* !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1) */
 201:Generated_Source\PSoC4/serial_UART.c **** 
 202:Generated_Source\PSoC4/serial_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 203:Generated_Source\PSoC4/serial_UART.c ****             CyIntDisable    (serial_ISR_NUMBER);
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 5


 204:Generated_Source\PSoC4/serial_UART.c ****             CyIntSetPriority(serial_ISR_NUMBER, serial_ISR_PRIORITY);
 205:Generated_Source\PSoC4/serial_UART.c ****             (void) CyIntSetVector(serial_ISR_NUMBER, &serial_SPI_UART_ISR);
 206:Generated_Source\PSoC4/serial_UART.c **** 
 207:Generated_Source\PSoC4/serial_UART.c ****             /* Configure WAKE interrupt */
 208:Generated_Source\PSoC4/serial_UART.c ****         #if(serial_UART_RX_WAKEUP_IRQ)
 209:Generated_Source\PSoC4/serial_UART.c ****             CyIntDisable    (serial_RX_WAKE_ISR_NUMBER);
 210:Generated_Source\PSoC4/serial_UART.c ****             CyIntSetPriority(serial_RX_WAKE_ISR_NUMBER, serial_RX_WAKE_ISR_PRIORITY);
 211:Generated_Source\PSoC4/serial_UART.c ****             (void) CyIntSetVector(serial_RX_WAKE_ISR_NUMBER, &serial_UART_WAKEUP_ISR);
 212:Generated_Source\PSoC4/serial_UART.c ****         #endif /* (serial_UART_RX_WAKEUP_IRQ) */
 213:Generated_Source\PSoC4/serial_UART.c **** 
 214:Generated_Source\PSoC4/serial_UART.c ****             /* Configure interrupt sources */
 215:Generated_Source\PSoC4/serial_UART.c ****             serial_INTR_I2C_EC_MASK_REG = serial_NO_INTR_SOURCES;
 216:Generated_Source\PSoC4/serial_UART.c ****             serial_INTR_SPI_EC_MASK_REG = serial_NO_INTR_SOURCES;
 217:Generated_Source\PSoC4/serial_UART.c ****             serial_INTR_SLAVE_MASK_REG  = serial_NO_INTR_SOURCES;
 218:Generated_Source\PSoC4/serial_UART.c ****             serial_INTR_MASTER_MASK_REG = serial_NO_INTR_SOURCES;
 219:Generated_Source\PSoC4/serial_UART.c ****             serial_INTR_RX_MASK_REG     = config->rxInterruptMask;
 220:Generated_Source\PSoC4/serial_UART.c ****             serial_INTR_TX_MASK_REG     = config->txInterruptMask;
 221:Generated_Source\PSoC4/serial_UART.c ****         
 222:Generated_Source\PSoC4/serial_UART.c ****             /* Configure TX interrupt sources to restore. */
 223:Generated_Source\PSoC4/serial_UART.c ****             serial_IntrTxMask = LO16(serial_INTR_TX_MASK_REG);
 224:Generated_Source\PSoC4/serial_UART.c **** 
 225:Generated_Source\PSoC4/serial_UART.c ****             /* Clear RX buffer indexes */
 226:Generated_Source\PSoC4/serial_UART.c ****             serial_rxBufferHead     = 0u;
 227:Generated_Source\PSoC4/serial_UART.c ****             serial_rxBufferTail     = 0u;
 228:Generated_Source\PSoC4/serial_UART.c ****             serial_rxBufferOverflow = 0u;
 229:Generated_Source\PSoC4/serial_UART.c **** 
 230:Generated_Source\PSoC4/serial_UART.c ****             /* Clear TX buffer indexes */
 231:Generated_Source\PSoC4/serial_UART.c ****             serial_txBufferHead = 0u;
 232:Generated_Source\PSoC4/serial_UART.c ****             serial_txBufferTail = 0u;
 233:Generated_Source\PSoC4/serial_UART.c ****         }
 234:Generated_Source\PSoC4/serial_UART.c ****     }
 235:Generated_Source\PSoC4/serial_UART.c **** 
 236:Generated_Source\PSoC4/serial_UART.c **** #else
 237:Generated_Source\PSoC4/serial_UART.c **** 
 238:Generated_Source\PSoC4/serial_UART.c ****     /*******************************************************************************
 239:Generated_Source\PSoC4/serial_UART.c ****     * Function Name: serial_UartInit
 240:Generated_Source\PSoC4/serial_UART.c ****     ****************************************************************************//**
 241:Generated_Source\PSoC4/serial_UART.c ****     *
 242:Generated_Source\PSoC4/serial_UART.c ****     *  Configures the SCB for the UART operation.
 243:Generated_Source\PSoC4/serial_UART.c ****     *
 244:Generated_Source\PSoC4/serial_UART.c ****     *******************************************************************************/
 245:Generated_Source\PSoC4/serial_UART.c ****     void serial_UartInit(void)
 246:Generated_Source\PSoC4/serial_UART.c ****     {
  26              		.loc 1 246 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 4, -8
  31              		.cfi_offset 14, -4
 247:Generated_Source\PSoC4/serial_UART.c ****         /* Configure UART interface */
 248:Generated_Source\PSoC4/serial_UART.c ****         serial_CTRL_REG = serial_UART_DEFAULT_CTRL;
  32              		.loc 1 248 0
  33 0002 1B4A     		ldr	r2, .L2
  34 0004 1B4B     		ldr	r3, .L2+4
  35 0006 1A60     		str	r2, [r3]
 249:Generated_Source\PSoC4/serial_UART.c **** 
 250:Generated_Source\PSoC4/serial_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 6


 251:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_CTRL_REG = serial_UART_DEFAULT_UART_CTRL;
  36              		.loc 1 251 0
  37 0008 0024     		mov	r4, #0
  38 000a 1B4B     		ldr	r3, .L2+8
  39 000c 1C60     		str	r4, [r3]
 252:Generated_Source\PSoC4/serial_UART.c **** 
 253:Generated_Source\PSoC4/serial_UART.c ****         /* Configure RX direction */
 254:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_RX_CTRL_REG = serial_UART_DEFAULT_UART_RX_CTRL;
  40              		.loc 1 254 0
  41 000e 0123     		mov	r3, #1
  42 0010 1A4A     		ldr	r2, .L2+12
  43 0012 1360     		str	r3, [r2]
 255:Generated_Source\PSoC4/serial_UART.c ****         serial_RX_CTRL_REG      = serial_UART_DEFAULT_RX_CTRL;
  44              		.loc 1 255 0
  45 0014 0722     		mov	r2, #7
  46 0016 1A49     		ldr	r1, .L2+16
  47 0018 0A60     		str	r2, [r1]
 256:Generated_Source\PSoC4/serial_UART.c ****         serial_RX_FIFO_CTRL_REG = serial_UART_DEFAULT_RX_FIFO_CTRL;
  48              		.loc 1 256 0
  49 001a 1A49     		ldr	r1, .L2+20
  50 001c 0A60     		str	r2, [r1]
 257:Generated_Source\PSoC4/serial_UART.c ****         serial_RX_MATCH_REG     = serial_UART_DEFAULT_RX_MATCH_REG;
  51              		.loc 1 257 0
  52 001e 1A4A     		ldr	r2, .L2+24
  53 0020 1460     		str	r4, [r2]
 258:Generated_Source\PSoC4/serial_UART.c **** 
 259:Generated_Source\PSoC4/serial_UART.c ****         /* Configure TX direction */
 260:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_TX_CTRL_REG = serial_UART_DEFAULT_UART_TX_CTRL;
  54              		.loc 1 260 0
  55 0022 1A4A     		ldr	r2, .L2+28
  56 0024 1360     		str	r3, [r2]
 261:Generated_Source\PSoC4/serial_UART.c ****         serial_TX_CTRL_REG      = serial_UART_DEFAULT_TX_CTRL;
  57              		.loc 1 261 0
  58 0026 1A4A     		ldr	r2, .L2+32
  59 0028 1A4B     		ldr	r3, .L2+36
  60 002a 1A60     		str	r2, [r3]
 262:Generated_Source\PSoC4/serial_UART.c ****         serial_TX_FIFO_CTRL_REG = serial_UART_DEFAULT_TX_FIFO_CTRL;
  61              		.loc 1 262 0
  62 002c 1A4B     		ldr	r3, .L2+40
  63 002e 1C60     		str	r4, [r3]
 263:Generated_Source\PSoC4/serial_UART.c **** 
 264:Generated_Source\PSoC4/serial_UART.c ****     #if !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1)
 265:Generated_Source\PSoC4/serial_UART.c ****         serial_UART_FLOW_CTRL_REG = serial_UART_DEFAULT_FLOW_CTRL;
 266:Generated_Source\PSoC4/serial_UART.c ****     #endif /* !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1) */
 267:Generated_Source\PSoC4/serial_UART.c **** 
 268:Generated_Source\PSoC4/serial_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 269:Generated_Source\PSoC4/serial_UART.c ****     #if(serial_SCB_IRQ_INTERNAL)
 270:Generated_Source\PSoC4/serial_UART.c ****         CyIntDisable    (serial_ISR_NUMBER);
  64              		.loc 1 270 0
  65 0030 0A20     		mov	r0, #10
  66 0032 FFF7FEFF 		bl	CyIntDisable
  67              	.LVL0:
 271:Generated_Source\PSoC4/serial_UART.c ****         CyIntSetPriority(serial_ISR_NUMBER, serial_ISR_PRIORITY);
  68              		.loc 1 271 0
  69 0036 0A20     		mov	r0, #10
  70 0038 0321     		mov	r1, #3
  71 003a FFF7FEFF 		bl	CyIntSetPriority
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 7


  72              	.LVL1:
 272:Generated_Source\PSoC4/serial_UART.c ****         (void) CyIntSetVector(serial_ISR_NUMBER, &serial_SPI_UART_ISR);
  73              		.loc 1 272 0
  74 003e 0A20     		mov	r0, #10
  75 0040 1649     		ldr	r1, .L2+44
  76 0042 FFF7FEFF 		bl	CyIntSetVector
  77              	.LVL2:
 273:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_SCB_IRQ_INTERNAL) */
 274:Generated_Source\PSoC4/serial_UART.c **** 
 275:Generated_Source\PSoC4/serial_UART.c ****         /* Configure WAKE interrupt */
 276:Generated_Source\PSoC4/serial_UART.c ****     #if(serial_UART_RX_WAKEUP_IRQ)
 277:Generated_Source\PSoC4/serial_UART.c ****         CyIntDisable    (serial_RX_WAKE_ISR_NUMBER);
 278:Generated_Source\PSoC4/serial_UART.c ****         CyIntSetPriority(serial_RX_WAKE_ISR_NUMBER, serial_RX_WAKE_ISR_PRIORITY);
 279:Generated_Source\PSoC4/serial_UART.c ****         (void) CyIntSetVector(serial_RX_WAKE_ISR_NUMBER, &serial_UART_WAKEUP_ISR);
 280:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_UART_RX_WAKEUP_IRQ) */
 281:Generated_Source\PSoC4/serial_UART.c **** 
 282:Generated_Source\PSoC4/serial_UART.c ****         /* Configure interrupt sources */
 283:Generated_Source\PSoC4/serial_UART.c ****         serial_INTR_I2C_EC_MASK_REG = serial_UART_DEFAULT_INTR_I2C_EC_MASK;
  78              		.loc 1 283 0
  79 0046 164B     		ldr	r3, .L2+48
  80 0048 1C60     		str	r4, [r3]
 284:Generated_Source\PSoC4/serial_UART.c ****         serial_INTR_SPI_EC_MASK_REG = serial_UART_DEFAULT_INTR_SPI_EC_MASK;
  81              		.loc 1 284 0
  82 004a 164B     		ldr	r3, .L2+52
  83 004c 1C60     		str	r4, [r3]
 285:Generated_Source\PSoC4/serial_UART.c ****         serial_INTR_SLAVE_MASK_REG  = serial_UART_DEFAULT_INTR_SLAVE_MASK;
  84              		.loc 1 285 0
  85 004e 164B     		ldr	r3, .L2+56
  86 0050 1C60     		str	r4, [r3]
 286:Generated_Source\PSoC4/serial_UART.c ****         serial_INTR_MASTER_MASK_REG = serial_UART_DEFAULT_INTR_MASTER_MASK;
  87              		.loc 1 286 0
  88 0052 164B     		ldr	r3, .L2+60
  89 0054 1C60     		str	r4, [r3]
 287:Generated_Source\PSoC4/serial_UART.c ****         serial_INTR_RX_MASK_REG     = serial_UART_DEFAULT_INTR_RX_MASK;
  90              		.loc 1 287 0
  91 0056 164B     		ldr	r3, .L2+64
  92 0058 1C60     		str	r4, [r3]
 288:Generated_Source\PSoC4/serial_UART.c ****         serial_INTR_TX_MASK_REG     = serial_UART_DEFAULT_INTR_TX_MASK;
  93              		.loc 1 288 0
  94 005a 164B     		ldr	r3, .L2+68
  95 005c 1C60     		str	r4, [r3]
 289:Generated_Source\PSoC4/serial_UART.c ****     
 290:Generated_Source\PSoC4/serial_UART.c ****         /* Configure TX interrupt sources to restore. */
 291:Generated_Source\PSoC4/serial_UART.c ****         serial_IntrTxMask = LO16(serial_INTR_TX_MASK_REG);
  96              		.loc 1 291 0
  97 005e 1A68     		ldr	r2, [r3]
  98 0060 154B     		ldr	r3, .L2+72
  99 0062 1A80     		strh	r2, [r3]
 292:Generated_Source\PSoC4/serial_UART.c **** 
 293:Generated_Source\PSoC4/serial_UART.c ****     #if(serial_INTERNAL_RX_SW_BUFFER_CONST)
 294:Generated_Source\PSoC4/serial_UART.c ****         serial_rxBufferHead     = 0u;
 295:Generated_Source\PSoC4/serial_UART.c ****         serial_rxBufferTail     = 0u;
 296:Generated_Source\PSoC4/serial_UART.c ****         serial_rxBufferOverflow = 0u;
 297:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_INTERNAL_RX_SW_BUFFER_CONST) */
 298:Generated_Source\PSoC4/serial_UART.c **** 
 299:Generated_Source\PSoC4/serial_UART.c ****     #if(serial_INTERNAL_TX_SW_BUFFER_CONST)
 300:Generated_Source\PSoC4/serial_UART.c ****         serial_txBufferHead = 0u;
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 8


 100              		.loc 1 300 0
 101 0064 154B     		ldr	r3, .L2+76
 102 0066 1C60     		str	r4, [r3]
 301:Generated_Source\PSoC4/serial_UART.c ****         serial_txBufferTail = 0u;
 103              		.loc 1 301 0
 104 0068 154B     		ldr	r3, .L2+80
 105 006a 1C60     		str	r4, [r3]
 302:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_INTERNAL_TX_SW_BUFFER_CONST) */
 303:Generated_Source\PSoC4/serial_UART.c ****     }
 106              		.loc 1 303 0
 107              		@ sp needed
 108 006c 10BD     		pop	{r4, pc}
 109              	.L3:
 110 006e C046     		.align	2
 111              	.L2:
 112 0070 0B000002 		.word	33554443
 113 0074 00000640 		.word	1074135040
 114 0078 40000640 		.word	1074135104
 115 007c 48000640 		.word	1074135112
 116 0080 00030640 		.word	1074135808
 117 0084 04030640 		.word	1074135812
 118 0088 10030640 		.word	1074135824
 119 008c 44000640 		.word	1074135108
 120 0090 07000080 		.word	-2147483641
 121 0094 00020640 		.word	1074135552
 122 0098 04020640 		.word	1074135556
 123 009c 00000000 		.word	serial_SPI_UART_ISR
 124 00a0 880E0640 		.word	1074138760
 125 00a4 C80E0640 		.word	1074138824
 126 00a8 480F0640 		.word	1074138952
 127 00ac 080F0640 		.word	1074138888
 128 00b0 C80F0640 		.word	1074139080
 129 00b4 880F0640 		.word	1074139016
 130 00b8 00000000 		.word	serial_IntrTxMask
 131 00bc 00000000 		.word	serial_txBufferHead
 132 00c0 00000000 		.word	serial_txBufferTail
 133              		.cfi_endproc
 134              	.LFE0:
 135              		.size	serial_UartInit, .-serial_UartInit
 136              		.section	.text.serial_UartPostEnable,"ax",%progbits
 137              		.align	2
 138              		.global	serial_UartPostEnable
 139              		.code	16
 140              		.thumb_func
 141              		.type	serial_UartPostEnable, %function
 142              	serial_UartPostEnable:
 143              	.LFB1:
 304:Generated_Source\PSoC4/serial_UART.c **** #endif /* (serial_SCB_MODE_UNCONFIG_CONST_CFG) */
 305:Generated_Source\PSoC4/serial_UART.c **** 
 306:Generated_Source\PSoC4/serial_UART.c **** 
 307:Generated_Source\PSoC4/serial_UART.c **** /*******************************************************************************
 308:Generated_Source\PSoC4/serial_UART.c **** * Function Name: serial_UartPostEnable
 309:Generated_Source\PSoC4/serial_UART.c **** ****************************************************************************//**
 310:Generated_Source\PSoC4/serial_UART.c **** *
 311:Generated_Source\PSoC4/serial_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be
 312:Generated_Source\PSoC4/serial_UART.c **** *  controlled by the SCB UART.
 313:Generated_Source\PSoC4/serial_UART.c **** *
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 9


 314:Generated_Source\PSoC4/serial_UART.c **** *******************************************************************************/
 315:Generated_Source\PSoC4/serial_UART.c **** void serial_UartPostEnable(void)
 316:Generated_Source\PSoC4/serial_UART.c **** {
 144              		.loc 1 316 0
 145              		.cfi_startproc
 317:Generated_Source\PSoC4/serial_UART.c **** #if (serial_SCB_MODE_UNCONFIG_CONST_CFG)
 318:Generated_Source\PSoC4/serial_UART.c ****     #if (serial_TX_SDA_MISO_PIN)
 319:Generated_Source\PSoC4/serial_UART.c ****         if (serial_CHECK_TX_SDA_MISO_PIN_USED)
 320:Generated_Source\PSoC4/serial_UART.c ****         {
 321:Generated_Source\PSoC4/serial_UART.c ****             /* Set SCB UART to drive the output pin */
 322:Generated_Source\PSoC4/serial_UART.c ****             serial_SET_HSIOM_SEL(serial_TX_SDA_MISO_HSIOM_REG, serial_TX_SDA_MISO_HSIOM_MASK,
 323:Generated_Source\PSoC4/serial_UART.c ****                                            serial_TX_SDA_MISO_HSIOM_POS, serial_TX_SDA_MISO_HSIOM_S
 324:Generated_Source\PSoC4/serial_UART.c ****         }
 325:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_TX_SDA_MISO_PIN_PIN) */
 326:Generated_Source\PSoC4/serial_UART.c **** 
 327:Generated_Source\PSoC4/serial_UART.c ****     #if !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1)
 328:Generated_Source\PSoC4/serial_UART.c ****         #if (serial_SS0_PIN)
 329:Generated_Source\PSoC4/serial_UART.c ****             if (serial_CHECK_SS0_PIN_USED)
 330:Generated_Source\PSoC4/serial_UART.c ****             {
 331:Generated_Source\PSoC4/serial_UART.c ****                 /* Set SCB UART to drive the output pin */
 332:Generated_Source\PSoC4/serial_UART.c ****                 serial_SET_HSIOM_SEL(serial_SS0_HSIOM_REG, serial_SS0_HSIOM_MASK,
 333:Generated_Source\PSoC4/serial_UART.c ****                                                serial_SS0_HSIOM_POS, serial_SS0_HSIOM_SEL_UART);
 334:Generated_Source\PSoC4/serial_UART.c ****             }
 335:Generated_Source\PSoC4/serial_UART.c ****         #endif /* (serial_SS0_PIN) */
 336:Generated_Source\PSoC4/serial_UART.c ****     #endif /* !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1) */
 337:Generated_Source\PSoC4/serial_UART.c **** 
 338:Generated_Source\PSoC4/serial_UART.c **** #else
 339:Generated_Source\PSoC4/serial_UART.c ****     #if (serial_UART_TX_PIN)
 340:Generated_Source\PSoC4/serial_UART.c ****          /* Set SCB UART to drive the output pin */
 341:Generated_Source\PSoC4/serial_UART.c ****         serial_SET_HSIOM_SEL(serial_TX_HSIOM_REG, serial_TX_HSIOM_MASK,
 146              		.loc 1 341 0
 147 0000 0549     		ldr	r1, .L5
 148 0002 0B68     		ldr	r3, [r1]
 149 0004 F022     		mov	r2, #240
 150 0006 9343     		bic	r3, r2
 151 0008 603A     		sub	r2, r2, #96
 152 000a 1343     		orr	r3, r2
 153 000c 0B60     		str	r3, [r1]
 342:Generated_Source\PSoC4/serial_UART.c ****                                        serial_TX_HSIOM_POS, serial_TX_HSIOM_SEL_UART);
 343:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_UART_TX_PIN) */
 344:Generated_Source\PSoC4/serial_UART.c **** 
 345:Generated_Source\PSoC4/serial_UART.c ****     #if (serial_UART_RTS_PIN)
 346:Generated_Source\PSoC4/serial_UART.c ****         /* Set SCB UART to drive the output pin */
 347:Generated_Source\PSoC4/serial_UART.c ****         serial_SET_HSIOM_SEL(serial_RTS_HSIOM_REG, serial_RTS_HSIOM_MASK,
 348:Generated_Source\PSoC4/serial_UART.c ****                                        serial_RTS_HSIOM_POS, serial_RTS_HSIOM_SEL_UART);
 349:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_UART_RTS_PIN) */
 350:Generated_Source\PSoC4/serial_UART.c **** #endif /* (serial_SCB_MODE_UNCONFIG_CONST_CFG) */
 351:Generated_Source\PSoC4/serial_UART.c **** 
 352:Generated_Source\PSoC4/serial_UART.c ****     /* Restore TX interrupt sources. */
 353:Generated_Source\PSoC4/serial_UART.c ****     serial_SetTxInterruptMode(serial_IntrTxMask);
 154              		.loc 1 353 0
 155 000e 034B     		ldr	r3, .L5+4
 156 0010 1A88     		ldrh	r2, [r3]
 157 0012 034B     		ldr	r3, .L5+8
 158 0014 1A60     		str	r2, [r3]
 354:Generated_Source\PSoC4/serial_UART.c **** }
 159              		.loc 1 354 0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 10


 160              		@ sp needed
 161 0016 7047     		bx	lr
 162              	.L6:
 163              		.align	2
 164              	.L5:
 165 0018 10000140 		.word	1073807376
 166 001c 00000000 		.word	serial_IntrTxMask
 167 0020 880F0640 		.word	1074139016
 168              		.cfi_endproc
 169              	.LFE1:
 170              		.size	serial_UartPostEnable, .-serial_UartPostEnable
 171              		.section	.text.serial_UartStop,"ax",%progbits
 172              		.align	2
 173              		.global	serial_UartStop
 174              		.code	16
 175              		.thumb_func
 176              		.type	serial_UartStop, %function
 177              	serial_UartStop:
 178              	.LFB2:
 355:Generated_Source\PSoC4/serial_UART.c **** 
 356:Generated_Source\PSoC4/serial_UART.c **** 
 357:Generated_Source\PSoC4/serial_UART.c **** /*******************************************************************************
 358:Generated_Source\PSoC4/serial_UART.c **** * Function Name: serial_UartStop
 359:Generated_Source\PSoC4/serial_UART.c **** ****************************************************************************//**
 360:Generated_Source\PSoC4/serial_UART.c **** *
 361:Generated_Source\PSoC4/serial_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 362:Generated_Source\PSoC4/serial_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
 363:Generated_Source\PSoC4/serial_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature
 364:Generated_Source\PSoC4/serial_UART.c **** *  to not cause it to trigger after the component is enabled.
 365:Generated_Source\PSoC4/serial_UART.c **** *
 366:Generated_Source\PSoC4/serial_UART.c **** *******************************************************************************/
 367:Generated_Source\PSoC4/serial_UART.c **** void serial_UartStop(void)
 368:Generated_Source\PSoC4/serial_UART.c **** {
 179              		.loc 1 368 0
 180              		.cfi_startproc
 369:Generated_Source\PSoC4/serial_UART.c **** #if(serial_SCB_MODE_UNCONFIG_CONST_CFG)
 370:Generated_Source\PSoC4/serial_UART.c ****     #if (serial_TX_SDA_MISO_PIN)
 371:Generated_Source\PSoC4/serial_UART.c ****         if (serial_CHECK_TX_SDA_MISO_PIN_USED)
 372:Generated_Source\PSoC4/serial_UART.c ****         {
 373:Generated_Source\PSoC4/serial_UART.c ****             /* Set GPIO to drive output pin */
 374:Generated_Source\PSoC4/serial_UART.c ****             serial_SET_HSIOM_SEL(serial_TX_SDA_MISO_HSIOM_REG, serial_TX_SDA_MISO_HSIOM_MASK,
 375:Generated_Source\PSoC4/serial_UART.c ****                                            serial_TX_SDA_MISO_HSIOM_POS, serial_TX_SDA_MISO_HSIOM_S
 376:Generated_Source\PSoC4/serial_UART.c ****         }
 377:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_TX_SDA_MISO_PIN_PIN) */
 378:Generated_Source\PSoC4/serial_UART.c **** 
 379:Generated_Source\PSoC4/serial_UART.c ****     #if !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1)
 380:Generated_Source\PSoC4/serial_UART.c ****         #if (serial_SS0_PIN)
 381:Generated_Source\PSoC4/serial_UART.c ****             if (serial_CHECK_SS0_PIN_USED)
 382:Generated_Source\PSoC4/serial_UART.c ****             {
 383:Generated_Source\PSoC4/serial_UART.c ****                 /* Set output pin state after block is disabled */
 384:Generated_Source\PSoC4/serial_UART.c ****                 serial_spi_ss0_Write(serial_GET_UART_RTS_INACTIVE);
 385:Generated_Source\PSoC4/serial_UART.c **** 
 386:Generated_Source\PSoC4/serial_UART.c ****                 /* Set GPIO to drive output pin */
 387:Generated_Source\PSoC4/serial_UART.c ****                 serial_SET_HSIOM_SEL(serial_SS0_HSIOM_REG, serial_SS0_HSIOM_MASK,
 388:Generated_Source\PSoC4/serial_UART.c ****                                                serial_SS0_HSIOM_POS, serial_SS0_HSIOM_SEL_GPIO);
 389:Generated_Source\PSoC4/serial_UART.c ****             }
 390:Generated_Source\PSoC4/serial_UART.c ****         #endif /* (serial_SS0_PIN) */
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 11


 391:Generated_Source\PSoC4/serial_UART.c ****     #endif /* !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1) */
 392:Generated_Source\PSoC4/serial_UART.c **** 
 393:Generated_Source\PSoC4/serial_UART.c **** #else
 394:Generated_Source\PSoC4/serial_UART.c ****     #if (serial_UART_TX_PIN)
 395:Generated_Source\PSoC4/serial_UART.c ****         /* Set GPIO to drive output pin */
 396:Generated_Source\PSoC4/serial_UART.c ****         serial_SET_HSIOM_SEL(serial_TX_HSIOM_REG, serial_TX_HSIOM_MASK,
 181              		.loc 1 396 0
 182 0000 064A     		ldr	r2, .L8
 183 0002 1368     		ldr	r3, [r2]
 184 0004 F021     		mov	r1, #240
 185 0006 8B43     		bic	r3, r1
 186 0008 1360     		str	r3, [r2]
 397:Generated_Source\PSoC4/serial_UART.c ****                                        serial_TX_HSIOM_POS, serial_TX_HSIOM_SEL_GPIO);
 398:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_UART_TX_PIN) */
 399:Generated_Source\PSoC4/serial_UART.c **** 
 400:Generated_Source\PSoC4/serial_UART.c ****     #if (serial_UART_RTS_PIN)
 401:Generated_Source\PSoC4/serial_UART.c ****         /* Set output pin state after block is disabled */
 402:Generated_Source\PSoC4/serial_UART.c ****         serial_rts_Write(serial_GET_UART_RTS_INACTIVE);
 403:Generated_Source\PSoC4/serial_UART.c **** 
 404:Generated_Source\PSoC4/serial_UART.c ****         /* Set GPIO to drive output pin */
 405:Generated_Source\PSoC4/serial_UART.c ****         serial_SET_HSIOM_SEL(serial_RTS_HSIOM_REG, serial_RTS_HSIOM_MASK,
 406:Generated_Source\PSoC4/serial_UART.c ****                                        serial_RTS_HSIOM_POS, serial_RTS_HSIOM_SEL_GPIO);
 407:Generated_Source\PSoC4/serial_UART.c ****     #endif /* (serial_UART_RTS_PIN) */
 408:Generated_Source\PSoC4/serial_UART.c **** 
 409:Generated_Source\PSoC4/serial_UART.c **** #endif /* (serial_SCB_MODE_UNCONFIG_CONST_CFG) */
 410:Generated_Source\PSoC4/serial_UART.c **** 
 411:Generated_Source\PSoC4/serial_UART.c **** #if (serial_UART_WAKE_ENABLE_CONST)
 412:Generated_Source\PSoC4/serial_UART.c ****     /* Disable skip start feature used for wakeup */
 413:Generated_Source\PSoC4/serial_UART.c ****     serial_UART_RX_CTRL_REG &= (uint32) ~serial_UART_RX_CTRL_SKIP_START;
 414:Generated_Source\PSoC4/serial_UART.c **** #endif /* (serial_UART_WAKE_ENABLE_CONST) */
 415:Generated_Source\PSoC4/serial_UART.c **** 
 416:Generated_Source\PSoC4/serial_UART.c ****     /* Store TX interrupt sources (exclude level triggered). */
 417:Generated_Source\PSoC4/serial_UART.c ****     serial_IntrTxMask = LO16(serial_GetTxInterruptMode() & serial_INTR_UART_TX_RESTORE);
 187              		.loc 1 417 0
 188 000a 054B     		ldr	r3, .L8+4
 189 000c 1A68     		ldr	r2, [r3]
 190 000e E423     		mov	r3, #228
 191 0010 DB00     		lsl	r3, r3, #3
 192 0012 1340     		and	r3, r2
 193 0014 034A     		ldr	r2, .L8+8
 194 0016 1380     		strh	r3, [r2]
 418:Generated_Source\PSoC4/serial_UART.c **** }
 195              		.loc 1 418 0
 196              		@ sp needed
 197 0018 7047     		bx	lr
 198              	.L9:
 199 001a C046     		.align	2
 200              	.L8:
 201 001c 10000140 		.word	1073807376
 202 0020 880F0640 		.word	1074139016
 203 0024 00000000 		.word	serial_IntrTxMask
 204              		.cfi_endproc
 205              	.LFE2:
 206              		.size	serial_UartStop, .-serial_UartStop
 207              		.section	.text.serial_UartSetRxAddress,"ax",%progbits
 208              		.align	2
 209              		.global	serial_UartSetRxAddress
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 12


 210              		.code	16
 211              		.thumb_func
 212              		.type	serial_UartSetRxAddress, %function
 213              	serial_UartSetRxAddress:
 214              	.LFB3:
 419:Generated_Source\PSoC4/serial_UART.c **** 
 420:Generated_Source\PSoC4/serial_UART.c **** 
 421:Generated_Source\PSoC4/serial_UART.c **** /*******************************************************************************
 422:Generated_Source\PSoC4/serial_UART.c **** * Function Name: serial_UartSetRxAddress
 423:Generated_Source\PSoC4/serial_UART.c **** ****************************************************************************//**
 424:Generated_Source\PSoC4/serial_UART.c **** *
 425:Generated_Source\PSoC4/serial_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 426:Generated_Source\PSoC4/serial_UART.c **** *  Multiprocessor mode.
 427:Generated_Source\PSoC4/serial_UART.c **** *
 428:Generated_Source\PSoC4/serial_UART.c **** *  \param address: Address for hardware address detection.
 429:Generated_Source\PSoC4/serial_UART.c **** *
 430:Generated_Source\PSoC4/serial_UART.c **** *******************************************************************************/
 431:Generated_Source\PSoC4/serial_UART.c **** void serial_UartSetRxAddress(uint32 address)
 432:Generated_Source\PSoC4/serial_UART.c **** {
 215              		.loc 1 432 0
 216              		.cfi_startproc
 217              	.LVL3:
 433:Generated_Source\PSoC4/serial_UART.c ****      uint32 matchReg;
 434:Generated_Source\PSoC4/serial_UART.c **** 
 435:Generated_Source\PSoC4/serial_UART.c ****     matchReg = serial_RX_MATCH_REG;
 218              		.loc 1 435 0
 219 0000 034A     		ldr	r2, .L11
 220 0002 1368     		ldr	r3, [r2]
 221              	.LVL4:
 436:Generated_Source\PSoC4/serial_UART.c **** 
 437:Generated_Source\PSoC4/serial_UART.c ****     matchReg &= ((uint32) ~serial_RX_MATCH_ADDR_MASK); /* Clear address bits */
 222              		.loc 1 437 0
 223 0004 FF21     		mov	r1, #255
 224 0006 8B43     		bic	r3, r1
 225              	.LVL5:
 438:Generated_Source\PSoC4/serial_UART.c ****     matchReg |= ((uint32)  (address & serial_RX_MATCH_ADDR_MASK)); /* Set address  */
 226              		.loc 1 438 0
 227 0008 0840     		and	r0, r1
 228              	.LVL6:
 229 000a 1843     		orr	r0, r3
 230              	.LVL7:
 439:Generated_Source\PSoC4/serial_UART.c **** 
 440:Generated_Source\PSoC4/serial_UART.c ****     serial_RX_MATCH_REG = matchReg;
 231              		.loc 1 440 0
 232 000c 1060     		str	r0, [r2]
 441:Generated_Source\PSoC4/serial_UART.c **** }
 233              		.loc 1 441 0
 234              		@ sp needed
 235 000e 7047     		bx	lr
 236              	.L12:
 237              		.align	2
 238              	.L11:
 239 0010 10030640 		.word	1074135824
 240              		.cfi_endproc
 241              	.LFE3:
 242              		.size	serial_UartSetRxAddress, .-serial_UartSetRxAddress
 243              		.section	.text.serial_UartSetRxAddressMask,"ax",%progbits
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 13


 244              		.align	2
 245              		.global	serial_UartSetRxAddressMask
 246              		.code	16
 247              		.thumb_func
 248              		.type	serial_UartSetRxAddressMask, %function
 249              	serial_UartSetRxAddressMask:
 250              	.LFB4:
 442:Generated_Source\PSoC4/serial_UART.c **** 
 443:Generated_Source\PSoC4/serial_UART.c **** 
 444:Generated_Source\PSoC4/serial_UART.c **** /*******************************************************************************
 445:Generated_Source\PSoC4/serial_UART.c **** * Function Name: serial_UartSetRxAddressMask
 446:Generated_Source\PSoC4/serial_UART.c **** ****************************************************************************//**
 447:Generated_Source\PSoC4/serial_UART.c **** *
 448:Generated_Source\PSoC4/serial_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 449:Generated_Source\PSoC4/serial_UART.c **** *
 450:Generated_Source\PSoC4/serial_UART.c **** *  \param addressMask: Address mask.
 451:Generated_Source\PSoC4/serial_UART.c **** *   - Bit value 0 – excludes bit from address comparison.
 452:Generated_Source\PSoC4/serial_UART.c **** *   - Bit value 1 – the bit needs to match with the corresponding bit
 453:Generated_Source\PSoC4/serial_UART.c **** *     of the address.
 454:Generated_Source\PSoC4/serial_UART.c **** *
 455:Generated_Source\PSoC4/serial_UART.c **** *******************************************************************************/
 456:Generated_Source\PSoC4/serial_UART.c **** void serial_UartSetRxAddressMask(uint32 addressMask)
 457:Generated_Source\PSoC4/serial_UART.c **** {
 251              		.loc 1 457 0
 252              		.cfi_startproc
 253              	.LVL8:
 458:Generated_Source\PSoC4/serial_UART.c ****     uint32 matchReg;
 459:Generated_Source\PSoC4/serial_UART.c **** 
 460:Generated_Source\PSoC4/serial_UART.c ****     matchReg = serial_RX_MATCH_REG;
 254              		.loc 1 460 0
 255 0000 034A     		ldr	r2, .L14
 256 0002 1168     		ldr	r1, [r2]
 257              	.LVL9:
 461:Generated_Source\PSoC4/serial_UART.c **** 
 462:Generated_Source\PSoC4/serial_UART.c ****     matchReg &= ((uint32) ~serial_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 258              		.loc 1 462 0
 259 0004 034B     		ldr	r3, .L14+4
 260 0006 0B40     		and	r3, r1
 261              	.LVL10:
 463:Generated_Source\PSoC4/serial_UART.c ****     matchReg |= ((uint32) (addressMask << serial_RX_MATCH_MASK_POS));
 262              		.loc 1 463 0
 263 0008 0004     		lsl	r0, r0, #16
 264              	.LVL11:
 265 000a 1843     		orr	r0, r3
 266              	.LVL12:
 464:Generated_Source\PSoC4/serial_UART.c **** 
 465:Generated_Source\PSoC4/serial_UART.c ****     serial_RX_MATCH_REG = matchReg;
 267              		.loc 1 465 0
 268 000c 1060     		str	r0, [r2]
 466:Generated_Source\PSoC4/serial_UART.c **** }
 269              		.loc 1 466 0
 270              		@ sp needed
 271 000e 7047     		bx	lr
 272              	.L15:
 273              		.align	2
 274              	.L14:
 275 0010 10030640 		.word	1074135824
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 14


 276 0014 FFFF00FF 		.word	-16711681
 277              		.cfi_endproc
 278              	.LFE4:
 279              		.size	serial_UartSetRxAddressMask, .-serial_UartSetRxAddressMask
 280              		.section	.text.serial_UartPutString,"ax",%progbits
 281              		.align	2
 282              		.global	serial_UartPutString
 283              		.code	16
 284              		.thumb_func
 285              		.type	serial_UartPutString, %function
 286              	serial_UartPutString:
 287              	.LFB5:
 467:Generated_Source\PSoC4/serial_UART.c **** 
 468:Generated_Source\PSoC4/serial_UART.c **** 
 469:Generated_Source\PSoC4/serial_UART.c **** #if(serial_UART_RX_DIRECTION)
 470:Generated_Source\PSoC4/serial_UART.c ****     /*******************************************************************************
 471:Generated_Source\PSoC4/serial_UART.c ****     * Function Name: serial_UartGetChar
 472:Generated_Source\PSoC4/serial_UART.c ****     ****************************************************************************//**
 473:Generated_Source\PSoC4/serial_UART.c ****     *
 474:Generated_Source\PSoC4/serial_UART.c ****     *  Retrieves next data element from receive buffer.
 475:Generated_Source\PSoC4/serial_UART.c ****     *  This function is designed for ASCII characters and returns a char where
 476:Generated_Source\PSoC4/serial_UART.c ****     *  1 to 255 are valid characters and 0 indicates an error occurred or no data
 477:Generated_Source\PSoC4/serial_UART.c ****     *  is present.
 478:Generated_Source\PSoC4/serial_UART.c ****     *  - RX software buffer is disabled: Returns data element retrieved from RX
 479:Generated_Source\PSoC4/serial_UART.c ****     *    FIFO.
 480:Generated_Source\PSoC4/serial_UART.c ****     *  - RX software buffer is enabled: Returns data element from the software
 481:Generated_Source\PSoC4/serial_UART.c ****     *    receive buffer.
 482:Generated_Source\PSoC4/serial_UART.c ****     *
 483:Generated_Source\PSoC4/serial_UART.c ****     *  \return
 484:Generated_Source\PSoC4/serial_UART.c ****     *   Next data element from the receive buffer. ASCII character values from
 485:Generated_Source\PSoC4/serial_UART.c ****     *   1 to 255 are valid. A returned zero signifies an error condition or no
 486:Generated_Source\PSoC4/serial_UART.c ****     *   data available.
 487:Generated_Source\PSoC4/serial_UART.c ****     *
 488:Generated_Source\PSoC4/serial_UART.c ****     *  \sideeffect
 489:Generated_Source\PSoC4/serial_UART.c ****     *   The errors bits may not correspond with reading characters due to
 490:Generated_Source\PSoC4/serial_UART.c ****     *   RX FIFO and software buffer usage.
 491:Generated_Source\PSoC4/serial_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 492:Generated_Source\PSoC4/serial_UART.c ****     *   is not treated as an error condition.
 493:Generated_Source\PSoC4/serial_UART.c ****     *   Check serial_rxBufferOverflow to capture that error condition.
 494:Generated_Source\PSoC4/serial_UART.c ****     *
 495:Generated_Source\PSoC4/serial_UART.c ****     *******************************************************************************/
 496:Generated_Source\PSoC4/serial_UART.c ****     uint32 serial_UartGetChar(void)
 497:Generated_Source\PSoC4/serial_UART.c ****     {
 498:Generated_Source\PSoC4/serial_UART.c ****         uint32 rxData = 0u;
 499:Generated_Source\PSoC4/serial_UART.c **** 
 500:Generated_Source\PSoC4/serial_UART.c ****         /* Reads data only if there is data to read */
 501:Generated_Source\PSoC4/serial_UART.c ****         if (0u != serial_SpiUartGetRxBufferSize())
 502:Generated_Source\PSoC4/serial_UART.c ****         {
 503:Generated_Source\PSoC4/serial_UART.c ****             rxData = serial_SpiUartReadRxData();
 504:Generated_Source\PSoC4/serial_UART.c ****         }
 505:Generated_Source\PSoC4/serial_UART.c **** 
 506:Generated_Source\PSoC4/serial_UART.c ****         if (serial_CHECK_INTR_RX(serial_INTR_RX_ERR))
 507:Generated_Source\PSoC4/serial_UART.c ****         {
 508:Generated_Source\PSoC4/serial_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 509:Generated_Source\PSoC4/serial_UART.c ****             serial_ClearRxInterruptSource(serial_INTR_RX_ERR);
 510:Generated_Source\PSoC4/serial_UART.c ****         }
 511:Generated_Source\PSoC4/serial_UART.c **** 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 15


 512:Generated_Source\PSoC4/serial_UART.c ****         return (rxData);
 513:Generated_Source\PSoC4/serial_UART.c ****     }
 514:Generated_Source\PSoC4/serial_UART.c **** 
 515:Generated_Source\PSoC4/serial_UART.c **** 
 516:Generated_Source\PSoC4/serial_UART.c ****     /*******************************************************************************
 517:Generated_Source\PSoC4/serial_UART.c ****     * Function Name: serial_UartGetByte
 518:Generated_Source\PSoC4/serial_UART.c ****     ****************************************************************************//**
 519:Generated_Source\PSoC4/serial_UART.c ****     *
 520:Generated_Source\PSoC4/serial_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 521:Generated_Source\PSoC4/serial_UART.c ****     *  received byte and error condition.
 522:Generated_Source\PSoC4/serial_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 523:Generated_Source\PSoC4/serial_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 524:Generated_Source\PSoC4/serial_UART.c ****     *     empty.
 525:Generated_Source\PSoC4/serial_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 526:Generated_Source\PSoC4/serial_UART.c ****     *     software receive buffer.
 527:Generated_Source\PSoC4/serial_UART.c ****     *
 528:Generated_Source\PSoC4/serial_UART.c ****     *  \return
 529:Generated_Source\PSoC4/serial_UART.c ****     *   Bits 7-0 contain the next data element from the receive buffer and
 530:Generated_Source\PSoC4/serial_UART.c ****     *   other bits contain the error condition.
 531:Generated_Source\PSoC4/serial_UART.c ****     *   - serial_UART_RX_OVERFLOW - Attempt to write to a full
 532:Generated_Source\PSoC4/serial_UART.c ****     *     receiver FIFO.
 533:Generated_Source\PSoC4/serial_UART.c ****     *   - serial_UART_RX_UNDERFLOW	Attempt to read from an empty
 534:Generated_Source\PSoC4/serial_UART.c ****     *     receiver FIFO.
 535:Generated_Source\PSoC4/serial_UART.c ****     *   - serial_UART_RX_FRAME_ERROR - UART framing error detected.
 536:Generated_Source\PSoC4/serial_UART.c ****     *   - serial_UART_RX_PARITY_ERROR - UART parity error detected.
 537:Generated_Source\PSoC4/serial_UART.c ****     *
 538:Generated_Source\PSoC4/serial_UART.c ****     *  \sideeffect
 539:Generated_Source\PSoC4/serial_UART.c ****     *   The errors bits may not correspond with reading characters due to
 540:Generated_Source\PSoC4/serial_UART.c ****     *   RX FIFO and software buffer usage.
 541:Generated_Source\PSoC4/serial_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 542:Generated_Source\PSoC4/serial_UART.c ****     *   is not treated as an error condition.
 543:Generated_Source\PSoC4/serial_UART.c ****     *   Check serial_rxBufferOverflow to capture that error condition.
 544:Generated_Source\PSoC4/serial_UART.c ****     *
 545:Generated_Source\PSoC4/serial_UART.c ****     *******************************************************************************/
 546:Generated_Source\PSoC4/serial_UART.c ****     uint32 serial_UartGetByte(void)
 547:Generated_Source\PSoC4/serial_UART.c ****     {
 548:Generated_Source\PSoC4/serial_UART.c ****         uint32 rxData;
 549:Generated_Source\PSoC4/serial_UART.c ****         uint32 tmpStatus;
 550:Generated_Source\PSoC4/serial_UART.c **** 
 551:Generated_Source\PSoC4/serial_UART.c ****         #if (serial_CHECK_RX_SW_BUFFER)
 552:Generated_Source\PSoC4/serial_UART.c ****         {
 553:Generated_Source\PSoC4/serial_UART.c ****             serial_DisableInt();
 554:Generated_Source\PSoC4/serial_UART.c ****         }
 555:Generated_Source\PSoC4/serial_UART.c ****         #endif
 556:Generated_Source\PSoC4/serial_UART.c **** 
 557:Generated_Source\PSoC4/serial_UART.c ****         if (0u != serial_SpiUartGetRxBufferSize())
 558:Generated_Source\PSoC4/serial_UART.c ****         {
 559:Generated_Source\PSoC4/serial_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 560:Generated_Source\PSoC4/serial_UART.c ****             * buffer.
 561:Generated_Source\PSoC4/serial_UART.c ****             */
 562:Generated_Source\PSoC4/serial_UART.c ****             #if (serial_CHECK_RX_SW_BUFFER)
 563:Generated_Source\PSoC4/serial_UART.c ****             {
 564:Generated_Source\PSoC4/serial_UART.c ****                 serial_EnableInt();
 565:Generated_Source\PSoC4/serial_UART.c ****             }
 566:Generated_Source\PSoC4/serial_UART.c ****             #endif
 567:Generated_Source\PSoC4/serial_UART.c **** 
 568:Generated_Source\PSoC4/serial_UART.c ****             /* Get received byte */
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 16


 569:Generated_Source\PSoC4/serial_UART.c ****             rxData = serial_SpiUartReadRxData();
 570:Generated_Source\PSoC4/serial_UART.c ****         }
 571:Generated_Source\PSoC4/serial_UART.c ****         else
 572:Generated_Source\PSoC4/serial_UART.c ****         {
 573:Generated_Source\PSoC4/serial_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the
 574:Generated_Source\PSoC4/serial_UART.c ****             * case of empty. Otherwise the first received byte will be read.
 575:Generated_Source\PSoC4/serial_UART.c ****             */
 576:Generated_Source\PSoC4/serial_UART.c ****             rxData = serial_RX_FIFO_RD_REG;
 577:Generated_Source\PSoC4/serial_UART.c **** 
 578:Generated_Source\PSoC4/serial_UART.c **** 
 579:Generated_Source\PSoC4/serial_UART.c ****             /* Enables interrupt to receive more bytes. */
 580:Generated_Source\PSoC4/serial_UART.c ****             #if (serial_CHECK_RX_SW_BUFFER)
 581:Generated_Source\PSoC4/serial_UART.c ****             {
 582:Generated_Source\PSoC4/serial_UART.c **** 
 583:Generated_Source\PSoC4/serial_UART.c ****                 /* The byte has been read from RX FIFO. Clear RX interrupt to
 584:Generated_Source\PSoC4/serial_UART.c ****                 * not involve interrupt handler when RX FIFO is empty.
 585:Generated_Source\PSoC4/serial_UART.c ****                 */
 586:Generated_Source\PSoC4/serial_UART.c ****                 serial_ClearRxInterruptSource(serial_INTR_RX_NOT_EMPTY);
 587:Generated_Source\PSoC4/serial_UART.c **** 
 588:Generated_Source\PSoC4/serial_UART.c ****                 serial_EnableInt();
 589:Generated_Source\PSoC4/serial_UART.c ****             }
 590:Generated_Source\PSoC4/serial_UART.c ****             #endif
 591:Generated_Source\PSoC4/serial_UART.c ****         }
 592:Generated_Source\PSoC4/serial_UART.c **** 
 593:Generated_Source\PSoC4/serial_UART.c ****         /* Get and clear RX error mask */
 594:Generated_Source\PSoC4/serial_UART.c ****         tmpStatus = (serial_GetRxInterruptSource() & serial_INTR_RX_ERR);
 595:Generated_Source\PSoC4/serial_UART.c ****         serial_ClearRxInterruptSource(serial_INTR_RX_ERR);
 596:Generated_Source\PSoC4/serial_UART.c **** 
 597:Generated_Source\PSoC4/serial_UART.c ****         /* Puts together data and error status:
 598:Generated_Source\PSoC4/serial_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 599:Generated_Source\PSoC4/serial_UART.c ****         */
 600:Generated_Source\PSoC4/serial_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 601:Generated_Source\PSoC4/serial_UART.c **** 
 602:Generated_Source\PSoC4/serial_UART.c ****         return (rxData);
 603:Generated_Source\PSoC4/serial_UART.c ****     }
 604:Generated_Source\PSoC4/serial_UART.c **** 
 605:Generated_Source\PSoC4/serial_UART.c **** 
 606:Generated_Source\PSoC4/serial_UART.c ****     #if !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1)
 607:Generated_Source\PSoC4/serial_UART.c ****         /*******************************************************************************
 608:Generated_Source\PSoC4/serial_UART.c ****         * Function Name: serial_UartSetRtsPolarity
 609:Generated_Source\PSoC4/serial_UART.c ****         ****************************************************************************//**
 610:Generated_Source\PSoC4/serial_UART.c ****         *
 611:Generated_Source\PSoC4/serial_UART.c ****         *  Sets active polarity of RTS output signal.
 612:Generated_Source\PSoC4/serial_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 613:Generated_Source\PSoC4/serial_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 614:Generated_Source\PSoC4/serial_UART.c ****         *
 615:Generated_Source\PSoC4/serial_UART.c ****         *  \param polarity: Active polarity of RTS output signal.
 616:Generated_Source\PSoC4/serial_UART.c ****         *   - serial_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 617:Generated_Source\PSoC4/serial_UART.c ****         *   - serial_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 618:Generated_Source\PSoC4/serial_UART.c ****         *
 619:Generated_Source\PSoC4/serial_UART.c ****         *******************************************************************************/
 620:Generated_Source\PSoC4/serial_UART.c ****         void serial_UartSetRtsPolarity(uint32 polarity)
 621:Generated_Source\PSoC4/serial_UART.c ****         {
 622:Generated_Source\PSoC4/serial_UART.c ****             if(0u != polarity)
 623:Generated_Source\PSoC4/serial_UART.c ****             {
 624:Generated_Source\PSoC4/serial_UART.c ****                 serial_UART_FLOW_CTRL_REG |= (uint32)  serial_UART_FLOW_CTRL_RTS_POLARITY;
 625:Generated_Source\PSoC4/serial_UART.c ****             }
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 17


 626:Generated_Source\PSoC4/serial_UART.c ****             else
 627:Generated_Source\PSoC4/serial_UART.c ****             {
 628:Generated_Source\PSoC4/serial_UART.c ****                 serial_UART_FLOW_CTRL_REG &= (uint32) ~serial_UART_FLOW_CTRL_RTS_POLARITY;
 629:Generated_Source\PSoC4/serial_UART.c ****             }
 630:Generated_Source\PSoC4/serial_UART.c ****         }
 631:Generated_Source\PSoC4/serial_UART.c **** 
 632:Generated_Source\PSoC4/serial_UART.c **** 
 633:Generated_Source\PSoC4/serial_UART.c ****         /*******************************************************************************
 634:Generated_Source\PSoC4/serial_UART.c ****         * Function Name: serial_UartSetRtsFifoLevel
 635:Generated_Source\PSoC4/serial_UART.c ****         ****************************************************************************//**
 636:Generated_Source\PSoC4/serial_UART.c ****         *
 637:Generated_Source\PSoC4/serial_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 638:Generated_Source\PSoC4/serial_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 639:Generated_Source\PSoC4/serial_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 640:Generated_Source\PSoC4/serial_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 641:Generated_Source\PSoC4/serial_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/serial_UART.c ****         *
 643:Generated_Source\PSoC4/serial_UART.c ****         *  \param level: Level in the RX FIFO for RTS signal activation.
 644:Generated_Source\PSoC4/serial_UART.c ****         *   The range of valid level values is between 0 and RX FIFO depth - 1.
 645:Generated_Source\PSoC4/serial_UART.c ****         *   Setting level value to 0 disables RTS signal activation.
 646:Generated_Source\PSoC4/serial_UART.c ****         *
 647:Generated_Source\PSoC4/serial_UART.c ****         *******************************************************************************/
 648:Generated_Source\PSoC4/serial_UART.c ****         void serial_UartSetRtsFifoLevel(uint32 level)
 649:Generated_Source\PSoC4/serial_UART.c ****         {
 650:Generated_Source\PSoC4/serial_UART.c ****             uint32 uartFlowCtrl;
 651:Generated_Source\PSoC4/serial_UART.c **** 
 652:Generated_Source\PSoC4/serial_UART.c ****             uartFlowCtrl = serial_UART_FLOW_CTRL_REG;
 653:Generated_Source\PSoC4/serial_UART.c **** 
 654:Generated_Source\PSoC4/serial_UART.c ****             uartFlowCtrl &= ((uint32) ~serial_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level ma
 655:Generated_Source\PSoC4/serial_UART.c ****             uartFlowCtrl |= ((uint32) (serial_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 656:Generated_Source\PSoC4/serial_UART.c **** 
 657:Generated_Source\PSoC4/serial_UART.c ****             serial_UART_FLOW_CTRL_REG = uartFlowCtrl;
 658:Generated_Source\PSoC4/serial_UART.c ****         }
 659:Generated_Source\PSoC4/serial_UART.c ****     #endif /* !(serial_CY_SCBIP_V0 || serial_CY_SCBIP_V1) */
 660:Generated_Source\PSoC4/serial_UART.c **** 
 661:Generated_Source\PSoC4/serial_UART.c **** #endif /* (serial_UART_RX_DIRECTION) */
 662:Generated_Source\PSoC4/serial_UART.c **** 
 663:Generated_Source\PSoC4/serial_UART.c **** 
 664:Generated_Source\PSoC4/serial_UART.c **** #if(serial_UART_TX_DIRECTION)
 665:Generated_Source\PSoC4/serial_UART.c ****     /*******************************************************************************
 666:Generated_Source\PSoC4/serial_UART.c ****     * Function Name: serial_UartPutString
 667:Generated_Source\PSoC4/serial_UART.c ****     ****************************************************************************//**
 668:Generated_Source\PSoC4/serial_UART.c ****     *
 669:Generated_Source\PSoC4/serial_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 670:Generated_Source\PSoC4/serial_UART.c ****     *  next available bus time.
 671:Generated_Source\PSoC4/serial_UART.c ****     *  This function is blocking and waits until there is a space available to put
 672:Generated_Source\PSoC4/serial_UART.c ****     *  requested data in transmit buffer.
 673:Generated_Source\PSoC4/serial_UART.c ****     *
 674:Generated_Source\PSoC4/serial_UART.c ****     *  \param string: pointer to the null terminated string array to be placed in the
 675:Generated_Source\PSoC4/serial_UART.c ****     *   transmit buffer.
 676:Generated_Source\PSoC4/serial_UART.c ****     *
 677:Generated_Source\PSoC4/serial_UART.c ****     *******************************************************************************/
 678:Generated_Source\PSoC4/serial_UART.c ****     void serial_UartPutString(const char8 string[])
 679:Generated_Source\PSoC4/serial_UART.c ****     {
 288              		.loc 1 679 0
 289              		.cfi_startproc
 290              	.LVL13:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 18


 291 0000 38B5     		push	{r3, r4, r5, lr}
 292              		.cfi_def_cfa_offset 16
 293              		.cfi_offset 3, -16
 294              		.cfi_offset 4, -12
 295              		.cfi_offset 5, -8
 296              		.cfi_offset 14, -4
 297 0002 051C     		mov	r5, r0
 298              	.LVL14:
 680:Generated_Source\PSoC4/serial_UART.c ****         uint32 bufIndex;
 681:Generated_Source\PSoC4/serial_UART.c **** 
 682:Generated_Source\PSoC4/serial_UART.c ****         bufIndex = 0u;
 299              		.loc 1 682 0
 300 0004 0024     		mov	r4, #0
 683:Generated_Source\PSoC4/serial_UART.c **** 
 684:Generated_Source\PSoC4/serial_UART.c ****         /* Blocks the control flow until all data has been sent */
 685:Generated_Source\PSoC4/serial_UART.c ****         while(string[bufIndex] != ((char8) 0))
 301              		.loc 1 685 0
 302 0006 02E0     		b	.L17
 303              	.LVL15:
 304              	.L18:
 686:Generated_Source\PSoC4/serial_UART.c ****         {
 687:Generated_Source\PSoC4/serial_UART.c ****             serial_UartPutChar((uint32) string[bufIndex]);
 305              		.loc 1 687 0
 306 0008 FFF7FEFF 		bl	serial_SpiUartWriteTxData
 307              	.LVL16:
 688:Generated_Source\PSoC4/serial_UART.c ****             bufIndex++;
 308              		.loc 1 688 0
 309 000c 0134     		add	r4, r4, #1
 310              	.LVL17:
 311              	.L17:
 685:Generated_Source\PSoC4/serial_UART.c ****         {
 312              		.loc 1 685 0
 313 000e 285D     		ldrb	r0, [r5, r4]
 314 0010 0028     		cmp	r0, #0
 315 0012 F9D1     		bne	.L18
 689:Generated_Source\PSoC4/serial_UART.c ****         }
 690:Generated_Source\PSoC4/serial_UART.c ****     }
 316              		.loc 1 690 0
 317              		@ sp needed
 318              	.LVL18:
 319              	.LVL19:
 320 0014 38BD     		pop	{r3, r4, r5, pc}
 321              		.cfi_endproc
 322              	.LFE5:
 323              		.size	serial_UartPutString, .-serial_UartPutString
 324 0016 C046     		.section	.text.serial_UartPutCRLF,"ax",%progbits
 325              		.align	2
 326              		.global	serial_UartPutCRLF
 327              		.code	16
 328              		.thumb_func
 329              		.type	serial_UartPutCRLF, %function
 330              	serial_UartPutCRLF:
 331              	.LFB6:
 691:Generated_Source\PSoC4/serial_UART.c **** 
 692:Generated_Source\PSoC4/serial_UART.c **** 
 693:Generated_Source\PSoC4/serial_UART.c ****     /*******************************************************************************
 694:Generated_Source\PSoC4/serial_UART.c ****     * Function Name: serial_UartPutCRLF
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 19


 695:Generated_Source\PSoC4/serial_UART.c ****     ****************************************************************************//**
 696:Generated_Source\PSoC4/serial_UART.c ****     *
 697:Generated_Source\PSoC4/serial_UART.c ****     *  Places byte of data followed by a carriage return (0x0D) and line feed
 698:Generated_Source\PSoC4/serial_UART.c ****     *  (0x0A) in the transmit buffer.
 699:Generated_Source\PSoC4/serial_UART.c ****     *  This function is blocking and waits until there is a space available to put
 700:Generated_Source\PSoC4/serial_UART.c ****     *  all requested data in transmit buffer.
 701:Generated_Source\PSoC4/serial_UART.c ****     *
 702:Generated_Source\PSoC4/serial_UART.c ****     *  \param txDataByte: the data to be transmitted.
 703:Generated_Source\PSoC4/serial_UART.c ****     *
 704:Generated_Source\PSoC4/serial_UART.c ****     *******************************************************************************/
 705:Generated_Source\PSoC4/serial_UART.c ****     void serial_UartPutCRLF(uint32 txDataByte)
 706:Generated_Source\PSoC4/serial_UART.c ****     {
 332              		.loc 1 706 0
 333              		.cfi_startproc
 334              	.LVL20:
 335 0000 08B5     		push	{r3, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 3, -8
 338              		.cfi_offset 14, -4
 707:Generated_Source\PSoC4/serial_UART.c ****         serial_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
 339              		.loc 1 707 0
 340 0002 FFF7FEFF 		bl	serial_SpiUartWriteTxData
 341              	.LVL21:
 708:Generated_Source\PSoC4/serial_UART.c ****         serial_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 342              		.loc 1 708 0
 343 0006 0D20     		mov	r0, #13
 344 0008 FFF7FEFF 		bl	serial_SpiUartWriteTxData
 345              	.LVL22:
 709:Generated_Source\PSoC4/serial_UART.c ****         serial_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 346              		.loc 1 709 0
 347 000c 0A20     		mov	r0, #10
 348 000e FFF7FEFF 		bl	serial_SpiUartWriteTxData
 349              	.LVL23:
 710:Generated_Source\PSoC4/serial_UART.c ****     }
 350              		.loc 1 710 0
 351              		@ sp needed
 352 0012 08BD     		pop	{r3, pc}
 353              		.cfi_endproc
 354              	.LFE6:
 355              		.size	serial_UartPutCRLF, .-serial_UartPutCRLF
 356              		.text
 357              	.Letext0:
 358              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 359              		.file 3 "Generated_Source\\PSoC4\\serial_PVT.h"
 360              		.file 4 "Generated_Source\\PSoC4\\serial_SPI_UART_PVT.h"
 361              		.file 5 "Generated_Source\\PSoC4/CyLib.h"
 362              		.file 6 "Generated_Source\\PSoC4\\serial_SPI_UART.h"
 363              		.section	.debug_info,"",%progbits
 364              	.Ldebug_info0:
 365 0000 D3020000 		.4byte	0x2d3
 366 0004 0400     		.2byte	0x4
 367 0006 00000000 		.4byte	.Ldebug_abbrev0
 368 000a 04       		.byte	0x4
 369 000b 01       		.uleb128 0x1
 370 000c B4010000 		.4byte	.LASF37
 371 0010 01       		.byte	0x1
 372 0011 8F010000 		.4byte	.LASF38
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 20


 373 0015 8F020000 		.4byte	.LASF39
 374 0019 00000000 		.4byte	.Ldebug_ranges0+0
 375 001d 00000000 		.4byte	0
 376 0021 00000000 		.4byte	.Ldebug_line0
 377 0025 02       		.uleb128 0x2
 378 0026 01       		.byte	0x1
 379 0027 06       		.byte	0x6
 380 0028 DE020000 		.4byte	.LASF0
 381 002c 02       		.uleb128 0x2
 382 002d 01       		.byte	0x1
 383 002e 08       		.byte	0x8
 384 002f 56000000 		.4byte	.LASF1
 385 0033 02       		.uleb128 0x2
 386 0034 02       		.byte	0x2
 387 0035 05       		.byte	0x5
 388 0036 4F020000 		.4byte	.LASF2
 389 003a 02       		.uleb128 0x2
 390 003b 02       		.byte	0x2
 391 003c 07       		.byte	0x7
 392 003d EA020000 		.4byte	.LASF3
 393 0041 02       		.uleb128 0x2
 394 0042 04       		.byte	0x4
 395 0043 05       		.byte	0x5
 396 0044 7D020000 		.4byte	.LASF4
 397 0048 02       		.uleb128 0x2
 398 0049 04       		.byte	0x4
 399 004a 07       		.byte	0x7
 400 004b 6A000000 		.4byte	.LASF5
 401 004f 02       		.uleb128 0x2
 402 0050 08       		.byte	0x8
 403 0051 05       		.byte	0x5
 404 0052 48000000 		.4byte	.LASF6
 405 0056 02       		.uleb128 0x2
 406 0057 08       		.byte	0x8
 407 0058 07       		.byte	0x7
 408 0059 07010000 		.4byte	.LASF7
 409 005d 03       		.uleb128 0x3
 410 005e 04       		.byte	0x4
 411 005f 05       		.byte	0x5
 412 0060 696E7400 		.ascii	"int\000"
 413 0064 02       		.uleb128 0x2
 414 0065 04       		.byte	0x4
 415 0066 07       		.byte	0x7
 416 0067 F2000000 		.4byte	.LASF8
 417 006b 04       		.uleb128 0x4
 418 006c 7C000000 		.4byte	.LASF9
 419 0070 02       		.byte	0x2
 420 0071 B901     		.2byte	0x1b9
 421 0073 2C000000 		.4byte	0x2c
 422 0077 04       		.uleb128 0x4
 423 0078 E4000000 		.4byte	.LASF10
 424 007c 02       		.byte	0x2
 425 007d BA01     		.2byte	0x1ba
 426 007f 3A000000 		.4byte	0x3a
 427 0083 04       		.uleb128 0x4
 428 0084 EB000000 		.4byte	.LASF11
 429 0088 02       		.byte	0x2
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 21


 430 0089 BB01     		.2byte	0x1bb
 431 008b 48000000 		.4byte	0x48
 432 008f 02       		.uleb128 0x2
 433 0090 04       		.byte	0x4
 434 0091 04       		.byte	0x4
 435 0092 42000000 		.4byte	.LASF12
 436 0096 02       		.uleb128 0x2
 437 0097 08       		.byte	0x8
 438 0098 04       		.byte	0x4
 439 0099 C9000000 		.4byte	.LASF13
 440 009d 04       		.uleb128 0x4
 441 009e 64000000 		.4byte	.LASF14
 442 00a2 02       		.byte	0x2
 443 00a3 CA01     		.2byte	0x1ca
 444 00a5 A9000000 		.4byte	0xa9
 445 00a9 02       		.uleb128 0x2
 446 00aa 01       		.byte	0x1
 447 00ab 08       		.byte	0x8
 448 00ac 8A010000 		.4byte	.LASF15
 449 00b0 04       		.uleb128 0x4
 450 00b1 12000000 		.4byte	.LASF16
 451 00b5 02       		.byte	0x2
 452 00b6 6502     		.2byte	0x265
 453 00b8 BC000000 		.4byte	0xbc
 454 00bc 05       		.uleb128 0x5
 455 00bd 83000000 		.4byte	0x83
 456 00c1 04       		.uleb128 0x4
 457 00c2 53010000 		.4byte	.LASF17
 458 00c6 02       		.byte	0x2
 459 00c7 7502     		.2byte	0x275
 460 00c9 CD000000 		.4byte	0xcd
 461 00cd 06       		.uleb128 0x6
 462 00ce 04       		.byte	0x4
 463 00cf D3000000 		.4byte	0xd3
 464 00d3 07       		.uleb128 0x7
 465 00d4 02       		.uleb128 0x2
 466 00d5 04       		.byte	0x4
 467 00d6 07       		.byte	0x7
 468 00d7 76010000 		.4byte	.LASF18
 469 00db 08       		.uleb128 0x8
 470 00dc 27010000 		.4byte	.LASF21
 471 00e0 01       		.byte	0x1
 472 00e1 F5       		.byte	0xf5
 473 00e2 00000000 		.4byte	.LFB0
 474 00e6 C4000000 		.4byte	.LFE0-.LFB0
 475 00ea 01       		.uleb128 0x1
 476 00eb 9C       		.byte	0x9c
 477 00ec 2B010000 		.4byte	0x12b
 478 00f0 09       		.uleb128 0x9
 479 00f1 36000000 		.4byte	.LVL0
 480 00f5 87020000 		.4byte	0x287
 481 00f9 03010000 		.4byte	0x103
 482 00fd 0A       		.uleb128 0xa
 483 00fe 01       		.uleb128 0x1
 484 00ff 50       		.byte	0x50
 485 0100 01       		.uleb128 0x1
 486 0101 3A       		.byte	0x3a
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 22


 487 0102 00       		.byte	0
 488 0103 09       		.uleb128 0x9
 489 0104 3E000000 		.4byte	.LVL1
 490 0108 98020000 		.4byte	0x298
 491 010c 1B010000 		.4byte	0x11b
 492 0110 0A       		.uleb128 0xa
 493 0111 01       		.uleb128 0x1
 494 0112 51       		.byte	0x51
 495 0113 01       		.uleb128 0x1
 496 0114 33       		.byte	0x33
 497 0115 0A       		.uleb128 0xa
 498 0116 01       		.uleb128 0x1
 499 0117 50       		.byte	0x50
 500 0118 01       		.uleb128 0x1
 501 0119 3A       		.byte	0x3a
 502 011a 00       		.byte	0
 503 011b 0B       		.uleb128 0xb
 504 011c 46000000 		.4byte	.LVL2
 505 0120 AE020000 		.4byte	0x2ae
 506 0124 0A       		.uleb128 0xa
 507 0125 01       		.uleb128 0x1
 508 0126 50       		.byte	0x50
 509 0127 01       		.uleb128 0x1
 510 0128 3A       		.byte	0x3a
 511 0129 00       		.byte	0
 512 012a 00       		.byte	0
 513 012b 0C       		.uleb128 0xc
 514 012c 60010000 		.4byte	.LASF19
 515 0130 01       		.byte	0x1
 516 0131 3B01     		.2byte	0x13b
 517 0133 00000000 		.4byte	.LFB1
 518 0137 24000000 		.4byte	.LFE1-.LFB1
 519 013b 01       		.uleb128 0x1
 520 013c 9C       		.byte	0x9c
 521 013d 0C       		.uleb128 0xc
 522 013e FD020000 		.4byte	.LASF20
 523 0142 01       		.byte	0x1
 524 0143 6F01     		.2byte	0x16f
 525 0145 00000000 		.4byte	.LFB2
 526 0149 28000000 		.4byte	.LFE2-.LFB2
 527 014d 01       		.uleb128 0x1
 528 014e 9C       		.byte	0x9c
 529 014f 0D       		.uleb128 0xd
 530 0150 82000000 		.4byte	.LASF22
 531 0154 01       		.byte	0x1
 532 0155 AF01     		.2byte	0x1af
 533 0157 00000000 		.4byte	.LFB3
 534 015b 14000000 		.4byte	.LFE3-.LFB3
 535 015f 01       		.uleb128 0x1
 536 0160 9C       		.byte	0x9c
 537 0161 86010000 		.4byte	0x186
 538 0165 0E       		.uleb128 0xe
 539 0166 FF000000 		.4byte	.LASF24
 540 016a 01       		.byte	0x1
 541 016b AF01     		.2byte	0x1af
 542 016d 83000000 		.4byte	0x83
 543 0171 00000000 		.4byte	.LLST0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 23


 544 0175 0F       		.uleb128 0xf
 545 0176 86020000 		.4byte	.LASF26
 546 017a 01       		.byte	0x1
 547 017b B101     		.2byte	0x1b1
 548 017d 83000000 		.4byte	0x83
 549 0181 21000000 		.4byte	.LLST1
 550 0185 00       		.byte	0
 551 0186 0D       		.uleb128 0xd
 552 0187 37010000 		.4byte	.LASF23
 553 018b 01       		.byte	0x1
 554 018c C801     		.2byte	0x1c8
 555 018e 00000000 		.4byte	.LFB4
 556 0192 18000000 		.4byte	.LFE4-.LFB4
 557 0196 01       		.uleb128 0x1
 558 0197 9C       		.byte	0x9c
 559 0198 BD010000 		.4byte	0x1bd
 560 019c 0E       		.uleb128 0xe
 561 019d 0D030000 		.4byte	.LASF25
 562 01a1 01       		.byte	0x1
 563 01a2 C801     		.2byte	0x1c8
 564 01a4 83000000 		.4byte	0x83
 565 01a8 3F000000 		.4byte	.LLST2
 566 01ac 0F       		.uleb128 0xf
 567 01ad 86020000 		.4byte	.LASF26
 568 01b1 01       		.byte	0x1
 569 01b2 CA01     		.2byte	0x1ca
 570 01b4 83000000 		.4byte	0x83
 571 01b8 60000000 		.4byte	.LLST3
 572 01bc 00       		.byte	0
 573 01bd 0D       		.uleb128 0xd
 574 01be B4000000 		.4byte	.LASF27
 575 01c2 01       		.byte	0x1
 576 01c3 A602     		.2byte	0x2a6
 577 01c5 00000000 		.4byte	.LFB5
 578 01c9 16000000 		.4byte	.LFE5-.LFB5
 579 01cd 01       		.uleb128 0x1
 580 01ce 9C       		.byte	0x9c
 581 01cf FD010000 		.4byte	0x1fd
 582 01d3 0E       		.uleb128 0xe
 583 01d4 3B000000 		.4byte	.LASF28
 584 01d8 01       		.byte	0x1
 585 01d9 A602     		.2byte	0x2a6
 586 01db FD010000 		.4byte	0x1fd
 587 01df 89000000 		.4byte	.LLST4
 588 01e3 0F       		.uleb128 0xf
 589 01e4 1E010000 		.4byte	.LASF29
 590 01e8 01       		.byte	0x1
 591 01e9 A802     		.2byte	0x2a8
 592 01eb 83000000 		.4byte	0x83
 593 01ef B5000000 		.4byte	.LLST5
 594 01f3 10       		.uleb128 0x10
 595 01f4 0C000000 		.4byte	.LVL16
 596 01f8 C8020000 		.4byte	0x2c8
 597 01fc 00       		.byte	0
 598 01fd 06       		.uleb128 0x6
 599 01fe 04       		.byte	0x4
 600 01ff 03020000 		.4byte	0x203
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 24


 601 0203 11       		.uleb128 0x11
 602 0204 9D000000 		.4byte	0x9d
 603 0208 0D       		.uleb128 0xd
 604 0209 6A020000 		.4byte	.LASF30
 605 020d 01       		.byte	0x1
 606 020e C102     		.2byte	0x2c1
 607 0210 00000000 		.4byte	.LFB6
 608 0214 14000000 		.4byte	.LFE6-.LFB6
 609 0218 01       		.uleb128 0x1
 610 0219 9C       		.byte	0x9c
 611 021a 66020000 		.4byte	0x266
 612 021e 0E       		.uleb128 0xe
 613 021f 7F010000 		.4byte	.LASF31
 614 0223 01       		.byte	0x1
 615 0224 C102     		.2byte	0x2c1
 616 0226 83000000 		.4byte	0x83
 617 022a D4000000 		.4byte	.LLST6
 618 022e 09       		.uleb128 0x9
 619 022f 06000000 		.4byte	.LVL21
 620 0233 C8020000 		.4byte	0x2c8
 621 0237 43020000 		.4byte	0x243
 622 023b 0A       		.uleb128 0xa
 623 023c 01       		.uleb128 0x1
 624 023d 50       		.byte	0x50
 625 023e 03       		.uleb128 0x3
 626 023f F3       		.byte	0xf3
 627 0240 01       		.uleb128 0x1
 628 0241 50       		.byte	0x50
 629 0242 00       		.byte	0
 630 0243 09       		.uleb128 0x9
 631 0244 0C000000 		.4byte	.LVL22
 632 0248 C8020000 		.4byte	0x2c8
 633 024c 56020000 		.4byte	0x256
 634 0250 0A       		.uleb128 0xa
 635 0251 01       		.uleb128 0x1
 636 0252 50       		.byte	0x50
 637 0253 01       		.uleb128 0x1
 638 0254 3D       		.byte	0x3d
 639 0255 00       		.byte	0
 640 0256 0B       		.uleb128 0xb
 641 0257 12000000 		.4byte	.LVL23
 642 025b C8020000 		.4byte	0x2c8
 643 025f 0A       		.uleb128 0xa
 644 0260 01       		.uleb128 0x1
 645 0261 50       		.byte	0x50
 646 0262 01       		.uleb128 0x1
 647 0263 3A       		.byte	0x3a
 648 0264 00       		.byte	0
 649 0265 00       		.byte	0
 650 0266 12       		.uleb128 0x12
 651 0267 00000000 		.4byte	.LASF32
 652 026b 03       		.byte	0x3
 653 026c 5B       		.byte	0x5b
 654 026d 77000000 		.4byte	0x77
 655 0271 12       		.uleb128 0x12
 656 0272 27000000 		.4byte	.LASF33
 657 0276 04       		.byte	0x4
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 25


 658 0277 2F       		.byte	0x2f
 659 0278 BC000000 		.4byte	0xbc
 660 027c 12       		.uleb128 0x12
 661 027d D0000000 		.4byte	.LASF34
 662 0281 04       		.byte	0x4
 663 0282 30       		.byte	0x30
 664 0283 BC000000 		.4byte	0xbc
 665 0287 13       		.uleb128 0x13
 666 0288 42020000 		.4byte	.LASF35
 667 028c 05       		.byte	0x5
 668 028d C5       		.byte	0xc5
 669 028e 98020000 		.4byte	0x298
 670 0292 14       		.uleb128 0x14
 671 0293 6B000000 		.4byte	0x6b
 672 0297 00       		.byte	0
 673 0298 13       		.uleb128 0x13
 674 0299 59020000 		.4byte	.LASF36
 675 029d 05       		.byte	0x5
 676 029e C0       		.byte	0xc0
 677 029f AE020000 		.4byte	0x2ae
 678 02a3 14       		.uleb128 0x14
 679 02a4 6B000000 		.4byte	0x6b
 680 02a8 14       		.uleb128 0x14
 681 02a9 6B000000 		.4byte	0x6b
 682 02ad 00       		.byte	0
 683 02ae 15       		.uleb128 0x15
 684 02af 18000000 		.4byte	.LASF40
 685 02b3 05       		.byte	0x5
 686 02b4 BD       		.byte	0xbd
 687 02b5 C1000000 		.4byte	0xc1
 688 02b9 C8020000 		.4byte	0x2c8
 689 02bd 14       		.uleb128 0x14
 690 02be 6B000000 		.4byte	0x6b
 691 02c2 14       		.uleb128 0x14
 692 02c3 C1000000 		.4byte	0xc1
 693 02c7 00       		.byte	0
 694 02c8 16       		.uleb128 0x16
 695 02c9 9A000000 		.4byte	.LASF41
 696 02cd 06       		.byte	0x6
 697 02ce 3A03     		.2byte	0x33a
 698 02d0 14       		.uleb128 0x14
 699 02d1 83000000 		.4byte	0x83
 700 02d5 00       		.byte	0
 701 02d6 00       		.byte	0
 702              		.section	.debug_abbrev,"",%progbits
 703              	.Ldebug_abbrev0:
 704 0000 01       		.uleb128 0x1
 705 0001 11       		.uleb128 0x11
 706 0002 01       		.byte	0x1
 707 0003 25       		.uleb128 0x25
 708 0004 0E       		.uleb128 0xe
 709 0005 13       		.uleb128 0x13
 710 0006 0B       		.uleb128 0xb
 711 0007 03       		.uleb128 0x3
 712 0008 0E       		.uleb128 0xe
 713 0009 1B       		.uleb128 0x1b
 714 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 26


 715 000b 55       		.uleb128 0x55
 716 000c 17       		.uleb128 0x17
 717 000d 11       		.uleb128 0x11
 718 000e 01       		.uleb128 0x1
 719 000f 10       		.uleb128 0x10
 720 0010 17       		.uleb128 0x17
 721 0011 00       		.byte	0
 722 0012 00       		.byte	0
 723 0013 02       		.uleb128 0x2
 724 0014 24       		.uleb128 0x24
 725 0015 00       		.byte	0
 726 0016 0B       		.uleb128 0xb
 727 0017 0B       		.uleb128 0xb
 728 0018 3E       		.uleb128 0x3e
 729 0019 0B       		.uleb128 0xb
 730 001a 03       		.uleb128 0x3
 731 001b 0E       		.uleb128 0xe
 732 001c 00       		.byte	0
 733 001d 00       		.byte	0
 734 001e 03       		.uleb128 0x3
 735 001f 24       		.uleb128 0x24
 736 0020 00       		.byte	0
 737 0021 0B       		.uleb128 0xb
 738 0022 0B       		.uleb128 0xb
 739 0023 3E       		.uleb128 0x3e
 740 0024 0B       		.uleb128 0xb
 741 0025 03       		.uleb128 0x3
 742 0026 08       		.uleb128 0x8
 743 0027 00       		.byte	0
 744 0028 00       		.byte	0
 745 0029 04       		.uleb128 0x4
 746 002a 16       		.uleb128 0x16
 747 002b 00       		.byte	0
 748 002c 03       		.uleb128 0x3
 749 002d 0E       		.uleb128 0xe
 750 002e 3A       		.uleb128 0x3a
 751 002f 0B       		.uleb128 0xb
 752 0030 3B       		.uleb128 0x3b
 753 0031 05       		.uleb128 0x5
 754 0032 49       		.uleb128 0x49
 755 0033 13       		.uleb128 0x13
 756 0034 00       		.byte	0
 757 0035 00       		.byte	0
 758 0036 05       		.uleb128 0x5
 759 0037 35       		.uleb128 0x35
 760 0038 00       		.byte	0
 761 0039 49       		.uleb128 0x49
 762 003a 13       		.uleb128 0x13
 763 003b 00       		.byte	0
 764 003c 00       		.byte	0
 765 003d 06       		.uleb128 0x6
 766 003e 0F       		.uleb128 0xf
 767 003f 00       		.byte	0
 768 0040 0B       		.uleb128 0xb
 769 0041 0B       		.uleb128 0xb
 770 0042 49       		.uleb128 0x49
 771 0043 13       		.uleb128 0x13
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 27


 772 0044 00       		.byte	0
 773 0045 00       		.byte	0
 774 0046 07       		.uleb128 0x7
 775 0047 15       		.uleb128 0x15
 776 0048 00       		.byte	0
 777 0049 27       		.uleb128 0x27
 778 004a 19       		.uleb128 0x19
 779 004b 00       		.byte	0
 780 004c 00       		.byte	0
 781 004d 08       		.uleb128 0x8
 782 004e 2E       		.uleb128 0x2e
 783 004f 01       		.byte	0x1
 784 0050 3F       		.uleb128 0x3f
 785 0051 19       		.uleb128 0x19
 786 0052 03       		.uleb128 0x3
 787 0053 0E       		.uleb128 0xe
 788 0054 3A       		.uleb128 0x3a
 789 0055 0B       		.uleb128 0xb
 790 0056 3B       		.uleb128 0x3b
 791 0057 0B       		.uleb128 0xb
 792 0058 27       		.uleb128 0x27
 793 0059 19       		.uleb128 0x19
 794 005a 11       		.uleb128 0x11
 795 005b 01       		.uleb128 0x1
 796 005c 12       		.uleb128 0x12
 797 005d 06       		.uleb128 0x6
 798 005e 40       		.uleb128 0x40
 799 005f 18       		.uleb128 0x18
 800 0060 9742     		.uleb128 0x2117
 801 0062 19       		.uleb128 0x19
 802 0063 01       		.uleb128 0x1
 803 0064 13       		.uleb128 0x13
 804 0065 00       		.byte	0
 805 0066 00       		.byte	0
 806 0067 09       		.uleb128 0x9
 807 0068 898201   		.uleb128 0x4109
 808 006b 01       		.byte	0x1
 809 006c 11       		.uleb128 0x11
 810 006d 01       		.uleb128 0x1
 811 006e 31       		.uleb128 0x31
 812 006f 13       		.uleb128 0x13
 813 0070 01       		.uleb128 0x1
 814 0071 13       		.uleb128 0x13
 815 0072 00       		.byte	0
 816 0073 00       		.byte	0
 817 0074 0A       		.uleb128 0xa
 818 0075 8A8201   		.uleb128 0x410a
 819 0078 00       		.byte	0
 820 0079 02       		.uleb128 0x2
 821 007a 18       		.uleb128 0x18
 822 007b 9142     		.uleb128 0x2111
 823 007d 18       		.uleb128 0x18
 824 007e 00       		.byte	0
 825 007f 00       		.byte	0
 826 0080 0B       		.uleb128 0xb
 827 0081 898201   		.uleb128 0x4109
 828 0084 01       		.byte	0x1
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 28


 829 0085 11       		.uleb128 0x11
 830 0086 01       		.uleb128 0x1
 831 0087 31       		.uleb128 0x31
 832 0088 13       		.uleb128 0x13
 833 0089 00       		.byte	0
 834 008a 00       		.byte	0
 835 008b 0C       		.uleb128 0xc
 836 008c 2E       		.uleb128 0x2e
 837 008d 00       		.byte	0
 838 008e 3F       		.uleb128 0x3f
 839 008f 19       		.uleb128 0x19
 840 0090 03       		.uleb128 0x3
 841 0091 0E       		.uleb128 0xe
 842 0092 3A       		.uleb128 0x3a
 843 0093 0B       		.uleb128 0xb
 844 0094 3B       		.uleb128 0x3b
 845 0095 05       		.uleb128 0x5
 846 0096 27       		.uleb128 0x27
 847 0097 19       		.uleb128 0x19
 848 0098 11       		.uleb128 0x11
 849 0099 01       		.uleb128 0x1
 850 009a 12       		.uleb128 0x12
 851 009b 06       		.uleb128 0x6
 852 009c 40       		.uleb128 0x40
 853 009d 18       		.uleb128 0x18
 854 009e 9742     		.uleb128 0x2117
 855 00a0 19       		.uleb128 0x19
 856 00a1 00       		.byte	0
 857 00a2 00       		.byte	0
 858 00a3 0D       		.uleb128 0xd
 859 00a4 2E       		.uleb128 0x2e
 860 00a5 01       		.byte	0x1
 861 00a6 3F       		.uleb128 0x3f
 862 00a7 19       		.uleb128 0x19
 863 00a8 03       		.uleb128 0x3
 864 00a9 0E       		.uleb128 0xe
 865 00aa 3A       		.uleb128 0x3a
 866 00ab 0B       		.uleb128 0xb
 867 00ac 3B       		.uleb128 0x3b
 868 00ad 05       		.uleb128 0x5
 869 00ae 27       		.uleb128 0x27
 870 00af 19       		.uleb128 0x19
 871 00b0 11       		.uleb128 0x11
 872 00b1 01       		.uleb128 0x1
 873 00b2 12       		.uleb128 0x12
 874 00b3 06       		.uleb128 0x6
 875 00b4 40       		.uleb128 0x40
 876 00b5 18       		.uleb128 0x18
 877 00b6 9742     		.uleb128 0x2117
 878 00b8 19       		.uleb128 0x19
 879 00b9 01       		.uleb128 0x1
 880 00ba 13       		.uleb128 0x13
 881 00bb 00       		.byte	0
 882 00bc 00       		.byte	0
 883 00bd 0E       		.uleb128 0xe
 884 00be 05       		.uleb128 0x5
 885 00bf 00       		.byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 29


 886 00c0 03       		.uleb128 0x3
 887 00c1 0E       		.uleb128 0xe
 888 00c2 3A       		.uleb128 0x3a
 889 00c3 0B       		.uleb128 0xb
 890 00c4 3B       		.uleb128 0x3b
 891 00c5 05       		.uleb128 0x5
 892 00c6 49       		.uleb128 0x49
 893 00c7 13       		.uleb128 0x13
 894 00c8 02       		.uleb128 0x2
 895 00c9 17       		.uleb128 0x17
 896 00ca 00       		.byte	0
 897 00cb 00       		.byte	0
 898 00cc 0F       		.uleb128 0xf
 899 00cd 34       		.uleb128 0x34
 900 00ce 00       		.byte	0
 901 00cf 03       		.uleb128 0x3
 902 00d0 0E       		.uleb128 0xe
 903 00d1 3A       		.uleb128 0x3a
 904 00d2 0B       		.uleb128 0xb
 905 00d3 3B       		.uleb128 0x3b
 906 00d4 05       		.uleb128 0x5
 907 00d5 49       		.uleb128 0x49
 908 00d6 13       		.uleb128 0x13
 909 00d7 02       		.uleb128 0x2
 910 00d8 17       		.uleb128 0x17
 911 00d9 00       		.byte	0
 912 00da 00       		.byte	0
 913 00db 10       		.uleb128 0x10
 914 00dc 898201   		.uleb128 0x4109
 915 00df 00       		.byte	0
 916 00e0 11       		.uleb128 0x11
 917 00e1 01       		.uleb128 0x1
 918 00e2 31       		.uleb128 0x31
 919 00e3 13       		.uleb128 0x13
 920 00e4 00       		.byte	0
 921 00e5 00       		.byte	0
 922 00e6 11       		.uleb128 0x11
 923 00e7 26       		.uleb128 0x26
 924 00e8 00       		.byte	0
 925 00e9 49       		.uleb128 0x49
 926 00ea 13       		.uleb128 0x13
 927 00eb 00       		.byte	0
 928 00ec 00       		.byte	0
 929 00ed 12       		.uleb128 0x12
 930 00ee 34       		.uleb128 0x34
 931 00ef 00       		.byte	0
 932 00f0 03       		.uleb128 0x3
 933 00f1 0E       		.uleb128 0xe
 934 00f2 3A       		.uleb128 0x3a
 935 00f3 0B       		.uleb128 0xb
 936 00f4 3B       		.uleb128 0x3b
 937 00f5 0B       		.uleb128 0xb
 938 00f6 49       		.uleb128 0x49
 939 00f7 13       		.uleb128 0x13
 940 00f8 3F       		.uleb128 0x3f
 941 00f9 19       		.uleb128 0x19
 942 00fa 3C       		.uleb128 0x3c
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 30


 943 00fb 19       		.uleb128 0x19
 944 00fc 00       		.byte	0
 945 00fd 00       		.byte	0
 946 00fe 13       		.uleb128 0x13
 947 00ff 2E       		.uleb128 0x2e
 948 0100 01       		.byte	0x1
 949 0101 3F       		.uleb128 0x3f
 950 0102 19       		.uleb128 0x19
 951 0103 03       		.uleb128 0x3
 952 0104 0E       		.uleb128 0xe
 953 0105 3A       		.uleb128 0x3a
 954 0106 0B       		.uleb128 0xb
 955 0107 3B       		.uleb128 0x3b
 956 0108 0B       		.uleb128 0xb
 957 0109 27       		.uleb128 0x27
 958 010a 19       		.uleb128 0x19
 959 010b 3C       		.uleb128 0x3c
 960 010c 19       		.uleb128 0x19
 961 010d 01       		.uleb128 0x1
 962 010e 13       		.uleb128 0x13
 963 010f 00       		.byte	0
 964 0110 00       		.byte	0
 965 0111 14       		.uleb128 0x14
 966 0112 05       		.uleb128 0x5
 967 0113 00       		.byte	0
 968 0114 49       		.uleb128 0x49
 969 0115 13       		.uleb128 0x13
 970 0116 00       		.byte	0
 971 0117 00       		.byte	0
 972 0118 15       		.uleb128 0x15
 973 0119 2E       		.uleb128 0x2e
 974 011a 01       		.byte	0x1
 975 011b 3F       		.uleb128 0x3f
 976 011c 19       		.uleb128 0x19
 977 011d 03       		.uleb128 0x3
 978 011e 0E       		.uleb128 0xe
 979 011f 3A       		.uleb128 0x3a
 980 0120 0B       		.uleb128 0xb
 981 0121 3B       		.uleb128 0x3b
 982 0122 0B       		.uleb128 0xb
 983 0123 27       		.uleb128 0x27
 984 0124 19       		.uleb128 0x19
 985 0125 49       		.uleb128 0x49
 986 0126 13       		.uleb128 0x13
 987 0127 3C       		.uleb128 0x3c
 988 0128 19       		.uleb128 0x19
 989 0129 01       		.uleb128 0x1
 990 012a 13       		.uleb128 0x13
 991 012b 00       		.byte	0
 992 012c 00       		.byte	0
 993 012d 16       		.uleb128 0x16
 994 012e 2E       		.uleb128 0x2e
 995 012f 01       		.byte	0x1
 996 0130 3F       		.uleb128 0x3f
 997 0131 19       		.uleb128 0x19
 998 0132 03       		.uleb128 0x3
 999 0133 0E       		.uleb128 0xe
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 31


 1000 0134 3A       		.uleb128 0x3a
 1001 0135 0B       		.uleb128 0xb
 1002 0136 3B       		.uleb128 0x3b
 1003 0137 05       		.uleb128 0x5
 1004 0138 27       		.uleb128 0x27
 1005 0139 19       		.uleb128 0x19
 1006 013a 3C       		.uleb128 0x3c
 1007 013b 19       		.uleb128 0x19
 1008 013c 00       		.byte	0
 1009 013d 00       		.byte	0
 1010 013e 00       		.byte	0
 1011              		.section	.debug_loc,"",%progbits
 1012              	.Ldebug_loc0:
 1013              	.LLST0:
 1014 0000 00000000 		.4byte	.LVL3
 1015 0004 0A000000 		.4byte	.LVL6
 1016 0008 0100     		.2byte	0x1
 1017 000a 50       		.byte	0x50
 1018 000b 0A000000 		.4byte	.LVL6
 1019 000f 14000000 		.4byte	.LFE3
 1020 0013 0400     		.2byte	0x4
 1021 0015 F3       		.byte	0xf3
 1022 0016 01       		.uleb128 0x1
 1023 0017 50       		.byte	0x50
 1024 0018 9F       		.byte	0x9f
 1025 0019 00000000 		.4byte	0
 1026 001d 00000000 		.4byte	0
 1027              	.LLST1:
 1028 0021 04000000 		.4byte	.LVL4
 1029 0025 0C000000 		.4byte	.LVL7
 1030 0029 0100     		.2byte	0x1
 1031 002b 53       		.byte	0x53
 1032 002c 0C000000 		.4byte	.LVL7
 1033 0030 14000000 		.4byte	.LFE3
 1034 0034 0100     		.2byte	0x1
 1035 0036 50       		.byte	0x50
 1036 0037 00000000 		.4byte	0
 1037 003b 00000000 		.4byte	0
 1038              	.LLST2:
 1039 003f 00000000 		.4byte	.LVL8
 1040 0043 0A000000 		.4byte	.LVL11
 1041 0047 0100     		.2byte	0x1
 1042 0049 50       		.byte	0x50
 1043 004a 0A000000 		.4byte	.LVL11
 1044 004e 18000000 		.4byte	.LFE4
 1045 0052 0400     		.2byte	0x4
 1046 0054 F3       		.byte	0xf3
 1047 0055 01       		.uleb128 0x1
 1048 0056 50       		.byte	0x50
 1049 0057 9F       		.byte	0x9f
 1050 0058 00000000 		.4byte	0
 1051 005c 00000000 		.4byte	0
 1052              	.LLST3:
 1053 0060 04000000 		.4byte	.LVL9
 1054 0064 08000000 		.4byte	.LVL10
 1055 0068 0100     		.2byte	0x1
 1056 006a 51       		.byte	0x51
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 32


 1057 006b 08000000 		.4byte	.LVL10
 1058 006f 0C000000 		.4byte	.LVL12
 1059 0073 0100     		.2byte	0x1
 1060 0075 53       		.byte	0x53
 1061 0076 0C000000 		.4byte	.LVL12
 1062 007a 18000000 		.4byte	.LFE4
 1063 007e 0100     		.2byte	0x1
 1064 0080 50       		.byte	0x50
 1065 0081 00000000 		.4byte	0
 1066 0085 00000000 		.4byte	0
 1067              	.LLST4:
 1068 0089 00000000 		.4byte	.LVL13
 1069 008d 08000000 		.4byte	.LVL15
 1070 0091 0100     		.2byte	0x1
 1071 0093 50       		.byte	0x50
 1072 0094 08000000 		.4byte	.LVL15
 1073 0098 14000000 		.4byte	.LVL19
 1074 009c 0100     		.2byte	0x1
 1075 009e 55       		.byte	0x55
 1076 009f 14000000 		.4byte	.LVL19
 1077 00a3 16000000 		.4byte	.LFE5
 1078 00a7 0400     		.2byte	0x4
 1079 00a9 F3       		.byte	0xf3
 1080 00aa 01       		.uleb128 0x1
 1081 00ab 50       		.byte	0x50
 1082 00ac 9F       		.byte	0x9f
 1083 00ad 00000000 		.4byte	0
 1084 00b1 00000000 		.4byte	0
 1085              	.LLST5:
 1086 00b5 04000000 		.4byte	.LVL14
 1087 00b9 08000000 		.4byte	.LVL15
 1088 00bd 0200     		.2byte	0x2
 1089 00bf 30       		.byte	0x30
 1090 00c0 9F       		.byte	0x9f
 1091 00c1 08000000 		.4byte	.LVL15
 1092 00c5 14000000 		.4byte	.LVL18
 1093 00c9 0100     		.2byte	0x1
 1094 00cb 54       		.byte	0x54
 1095 00cc 00000000 		.4byte	0
 1096 00d0 00000000 		.4byte	0
 1097              	.LLST6:
 1098 00d4 00000000 		.4byte	.LVL20
 1099 00d8 05000000 		.4byte	.LVL21-1
 1100 00dc 0100     		.2byte	0x1
 1101 00de 50       		.byte	0x50
 1102 00df 05000000 		.4byte	.LVL21-1
 1103 00e3 14000000 		.4byte	.LFE6
 1104 00e7 0400     		.2byte	0x4
 1105 00e9 F3       		.byte	0xf3
 1106 00ea 01       		.uleb128 0x1
 1107 00eb 50       		.byte	0x50
 1108 00ec 9F       		.byte	0x9f
 1109 00ed 00000000 		.4byte	0
 1110 00f1 00000000 		.4byte	0
 1111              		.section	.debug_aranges,"",%progbits
 1112 0000 4C000000 		.4byte	0x4c
 1113 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 33


 1114 0006 00000000 		.4byte	.Ldebug_info0
 1115 000a 04       		.byte	0x4
 1116 000b 00       		.byte	0
 1117 000c 0000     		.2byte	0
 1118 000e 0000     		.2byte	0
 1119 0010 00000000 		.4byte	.LFB0
 1120 0014 C4000000 		.4byte	.LFE0-.LFB0
 1121 0018 00000000 		.4byte	.LFB1
 1122 001c 24000000 		.4byte	.LFE1-.LFB1
 1123 0020 00000000 		.4byte	.LFB2
 1124 0024 28000000 		.4byte	.LFE2-.LFB2
 1125 0028 00000000 		.4byte	.LFB3
 1126 002c 14000000 		.4byte	.LFE3-.LFB3
 1127 0030 00000000 		.4byte	.LFB4
 1128 0034 18000000 		.4byte	.LFE4-.LFB4
 1129 0038 00000000 		.4byte	.LFB5
 1130 003c 16000000 		.4byte	.LFE5-.LFB5
 1131 0040 00000000 		.4byte	.LFB6
 1132 0044 14000000 		.4byte	.LFE6-.LFB6
 1133 0048 00000000 		.4byte	0
 1134 004c 00000000 		.4byte	0
 1135              		.section	.debug_ranges,"",%progbits
 1136              	.Ldebug_ranges0:
 1137 0000 00000000 		.4byte	.LFB0
 1138 0004 C4000000 		.4byte	.LFE0
 1139 0008 00000000 		.4byte	.LFB1
 1140 000c 24000000 		.4byte	.LFE1
 1141 0010 00000000 		.4byte	.LFB2
 1142 0014 28000000 		.4byte	.LFE2
 1143 0018 00000000 		.4byte	.LFB3
 1144 001c 14000000 		.4byte	.LFE3
 1145 0020 00000000 		.4byte	.LFB4
 1146 0024 18000000 		.4byte	.LFE4
 1147 0028 00000000 		.4byte	.LFB5
 1148 002c 16000000 		.4byte	.LFE5
 1149 0030 00000000 		.4byte	.LFB6
 1150 0034 14000000 		.4byte	.LFE6
 1151 0038 00000000 		.4byte	0
 1152 003c 00000000 		.4byte	0
 1153              		.section	.debug_line,"",%progbits
 1154              	.Ldebug_line0:
 1155 0000 43010000 		.section	.debug_str,"MS",%progbits,1
 1155      02009100 
 1155      00000201 
 1155      FB0E0D00 
 1155      01010101 
 1156              	.LASF32:
 1157 0000 73657269 		.ascii	"serial_IntrTxMask\000"
 1157      616C5F49 
 1157      6E747254 
 1157      784D6173 
 1157      6B00
 1158              	.LASF16:
 1159 0012 72656733 		.ascii	"reg32\000"
 1159      3200
 1160              	.LASF40:
 1161 0018 4379496E 		.ascii	"CyIntSetVector\000"
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 34


 1161      74536574 
 1161      56656374 
 1161      6F7200
 1162              	.LASF33:
 1163 0027 73657269 		.ascii	"serial_txBufferHead\000"
 1163      616C5F74 
 1163      78427566 
 1163      66657248 
 1163      65616400 
 1164              	.LASF28:
 1165 003b 73747269 		.ascii	"string\000"
 1165      6E6700
 1166              	.LASF12:
 1167 0042 666C6F61 		.ascii	"float\000"
 1167      7400
 1168              	.LASF6:
 1169 0048 6C6F6E67 		.ascii	"long long int\000"
 1169      206C6F6E 
 1169      6720696E 
 1169      7400
 1170              	.LASF1:
 1171 0056 756E7369 		.ascii	"unsigned char\000"
 1171      676E6564 
 1171      20636861 
 1171      7200
 1172              	.LASF14:
 1173 0064 63686172 		.ascii	"char8\000"
 1173      3800
 1174              	.LASF5:
 1175 006a 6C6F6E67 		.ascii	"long unsigned int\000"
 1175      20756E73 
 1175      69676E65 
 1175      6420696E 
 1175      7400
 1176              	.LASF9:
 1177 007c 75696E74 		.ascii	"uint8\000"
 1177      3800
 1178              	.LASF22:
 1179 0082 73657269 		.ascii	"serial_UartSetRxAddress\000"
 1179      616C5F55 
 1179      61727453 
 1179      65745278 
 1179      41646472 
 1180              	.LASF41:
 1181 009a 73657269 		.ascii	"serial_SpiUartWriteTxData\000"
 1181      616C5F53 
 1181      70695561 
 1181      72745772 
 1181      69746554 
 1182              	.LASF27:
 1183 00b4 73657269 		.ascii	"serial_UartPutString\000"
 1183      616C5F55 
 1183      61727450 
 1183      75745374 
 1183      72696E67 
 1184              	.LASF13:
 1185 00c9 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 35


 1185      6C6500
 1186              	.LASF34:
 1187 00d0 73657269 		.ascii	"serial_txBufferTail\000"
 1187      616C5F74 
 1187      78427566 
 1187      66657254 
 1187      61696C00 
 1188              	.LASF10:
 1189 00e4 75696E74 		.ascii	"uint16\000"
 1189      313600
 1190              	.LASF11:
 1191 00eb 75696E74 		.ascii	"uint32\000"
 1191      333200
 1192              	.LASF8:
 1193 00f2 756E7369 		.ascii	"unsigned int\000"
 1193      676E6564 
 1193      20696E74 
 1193      00
 1194              	.LASF24:
 1195 00ff 61646472 		.ascii	"address\000"
 1195      65737300 
 1196              	.LASF7:
 1197 0107 6C6F6E67 		.ascii	"long long unsigned int\000"
 1197      206C6F6E 
 1197      6720756E 
 1197      7369676E 
 1197      65642069 
 1198              	.LASF29:
 1199 011e 62756649 		.ascii	"bufIndex\000"
 1199      6E646578 
 1199      00
 1200              	.LASF21:
 1201 0127 73657269 		.ascii	"serial_UartInit\000"
 1201      616C5F55 
 1201      61727449 
 1201      6E697400 
 1202              	.LASF23:
 1203 0137 73657269 		.ascii	"serial_UartSetRxAddressMask\000"
 1203      616C5F55 
 1203      61727453 
 1203      65745278 
 1203      41646472 
 1204              	.LASF17:
 1205 0153 63796973 		.ascii	"cyisraddress\000"
 1205      72616464 
 1205      72657373 
 1205      00
 1206              	.LASF19:
 1207 0160 73657269 		.ascii	"serial_UartPostEnable\000"
 1207      616C5F55 
 1207      61727450 
 1207      6F737445 
 1207      6E61626C 
 1208              	.LASF18:
 1209 0176 73697A65 		.ascii	"sizetype\000"
 1209      74797065 
 1209      00
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 36


 1210              	.LASF31:
 1211 017f 74784461 		.ascii	"txDataByte\000"
 1211      74614279 
 1211      746500
 1212              	.LASF15:
 1213 018a 63686172 		.ascii	"char\000"
 1213      00
 1214              	.LASF38:
 1215 018f 47656E65 		.ascii	"Generated_Source\\PSoC4\\serial_UART.c\000"
 1215      72617465 
 1215      645F536F 
 1215      75726365 
 1215      5C50536F 
 1216              	.LASF37:
 1217 01b4 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1217      4320342E 
 1217      392E3320 
 1217      32303135 
 1217      30333033 
 1218 01e7 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1218      20726576 
 1218      6973696F 
 1218      6E203232 
 1218      31323230 
 1219 021a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1219      66756E63 
 1219      74696F6E 
 1219      2D736563 
 1219      74696F6E 
 1220              	.LASF35:
 1221 0242 4379496E 		.ascii	"CyIntDisable\000"
 1221      74446973 
 1221      61626C65 
 1221      00
 1222              	.LASF2:
 1223 024f 73686F72 		.ascii	"short int\000"
 1223      7420696E 
 1223      7400
 1224              	.LASF36:
 1225 0259 4379496E 		.ascii	"CyIntSetPriority\000"
 1225      74536574 
 1225      5072696F 
 1225      72697479 
 1225      00
 1226              	.LASF30:
 1227 026a 73657269 		.ascii	"serial_UartPutCRLF\000"
 1227      616C5F55 
 1227      61727450 
 1227      75744352 
 1227      4C4600
 1228              	.LASF4:
 1229 027d 6C6F6E67 		.ascii	"long int\000"
 1229      20696E74 
 1229      00
 1230              	.LASF26:
 1231 0286 6D617463 		.ascii	"matchReg\000"
 1231      68526567 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\cclIWeGE.s 			page 37


 1231      00
 1232              	.LASF39:
 1233 028f 433A5C55 		.ascii	"C:\\Users\\a85495\\Desktop\\PSoC-Quadcopter\\Sensor"
 1233      73657273 
 1233      5C613835 
 1233      3439355C 
 1233      4465736B 
 1234 02bd 735C5365 		.ascii	"s\\Sensor Test\\Base Station.cydsn\000"
 1234      6E736F72 
 1234      20546573 
 1234      745C4261 
 1234      73652053 
 1235              	.LASF0:
 1236 02de 7369676E 		.ascii	"signed char\000"
 1236      65642063 
 1236      68617200 
 1237              	.LASF3:
 1238 02ea 73686F72 		.ascii	"short unsigned int\000"
 1238      7420756E 
 1238      7369676E 
 1238      65642069 
 1238      6E7400
 1239              	.LASF20:
 1240 02fd 73657269 		.ascii	"serial_UartStop\000"
 1240      616C5F55 
 1240      61727453 
 1240      746F7000 
 1241              	.LASF25:
 1242 030d 61646472 		.ascii	"addressMask\000"
 1242      6573734D 
 1242      61736B00 
 1243              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
