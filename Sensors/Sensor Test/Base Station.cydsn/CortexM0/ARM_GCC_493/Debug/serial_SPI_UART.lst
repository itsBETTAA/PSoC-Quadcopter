ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"serial_SPI_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.serial_SpiUartWriteTxData,"ax",%progbits
  18              		.align	2
  19              		.global	serial_SpiUartWriteTxData
  20              		.code	16
  21              		.thumb_func
  22              		.type	serial_SpiUartWriteTxData, %function
  23              	serial_SpiUartWriteTxData:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\serial_SPI_UART.c"
   1:Generated_Source\PSoC4/serial_SPI_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/serial_SPI_UART.c **** * \file serial_SPI_UART.c
   3:Generated_Source\PSoC4/serial_SPI_UART.c **** * \version 3.20
   4:Generated_Source\PSoC4/serial_SPI_UART.c **** *
   5:Generated_Source\PSoC4/serial_SPI_UART.c **** * \brief
   6:Generated_Source\PSoC4/serial_SPI_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/serial_SPI_UART.c **** *  SPI and UART modes.
   8:Generated_Source\PSoC4/serial_SPI_UART.c **** *
   9:Generated_Source\PSoC4/serial_SPI_UART.c **** * Note:
  10:Generated_Source\PSoC4/serial_SPI_UART.c **** *
  11:Generated_Source\PSoC4/serial_SPI_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/serial_SPI_UART.c **** * \copyright
  13:Generated_Source\PSoC4/serial_SPI_UART.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/serial_SPI_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/serial_SPI_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/serial_SPI_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/serial_SPI_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  19:Generated_Source\PSoC4/serial_SPI_UART.c **** #include "serial_PVT.h"
  20:Generated_Source\PSoC4/serial_SPI_UART.c **** #include "serial_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  22:Generated_Source\PSoC4/serial_SPI_UART.c **** /***************************************
  23:Generated_Source\PSoC4/serial_SPI_UART.c **** *        SPI/UART Private Vars
  24:Generated_Source\PSoC4/serial_SPI_UART.c **** ***************************************/
  25:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  26:Generated_Source\PSoC4/serial_SPI_UART.c **** #if(serial_INTERNAL_RX_SW_BUFFER_CONST)
  27:Generated_Source\PSoC4/serial_SPI_UART.c ****     /* Start index to put data into the software receive buffer.*/
  28:Generated_Source\PSoC4/serial_SPI_UART.c ****     volatile uint32 serial_rxBufferHead;
  29:Generated_Source\PSoC4/serial_SPI_UART.c ****     /* Start index to get data from the software receive buffer.*/
  30:Generated_Source\PSoC4/serial_SPI_UART.c ****     volatile uint32 serial_rxBufferTail;
  31:Generated_Source\PSoC4/serial_SPI_UART.c ****     /**
  32:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \addtogroup group_globals
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 2


  33:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \{
  34:Generated_Source\PSoC4/serial_SPI_UART.c ****     */
  35:Generated_Source\PSoC4/serial_SPI_UART.c ****     /** Sets when internal software receive buffer overflow
  36:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  was occurred.
  37:Generated_Source\PSoC4/serial_SPI_UART.c ****     */
  38:Generated_Source\PSoC4/serial_SPI_UART.c ****     volatile uint8  serial_rxBufferOverflow;
  39:Generated_Source\PSoC4/serial_SPI_UART.c ****     /** \} globals */
  40:Generated_Source\PSoC4/serial_SPI_UART.c **** #endif /* (serial_INTERNAL_RX_SW_BUFFER_CONST) */
  41:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  42:Generated_Source\PSoC4/serial_SPI_UART.c **** #if(serial_INTERNAL_TX_SW_BUFFER_CONST)
  43:Generated_Source\PSoC4/serial_SPI_UART.c ****     /* Start index to put data into the software transmit buffer.*/
  44:Generated_Source\PSoC4/serial_SPI_UART.c ****     volatile uint32 serial_txBufferHead;
  45:Generated_Source\PSoC4/serial_SPI_UART.c ****     /* Start index to get data from the software transmit buffer.*/
  46:Generated_Source\PSoC4/serial_SPI_UART.c ****     volatile uint32 serial_txBufferTail;
  47:Generated_Source\PSoC4/serial_SPI_UART.c **** #endif /* (serial_INTERNAL_TX_SW_BUFFER_CONST) */
  48:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  49:Generated_Source\PSoC4/serial_SPI_UART.c **** #if(serial_INTERNAL_RX_SW_BUFFER)
  50:Generated_Source\PSoC4/serial_SPI_UART.c ****     /* Add one element to the buffer to receive full packet. One byte in receive buffer is always e
  51:Generated_Source\PSoC4/serial_SPI_UART.c ****     volatile uint8 serial_rxBufferInternal[serial_INTERNAL_RX_BUFFER_SIZE];
  52:Generated_Source\PSoC4/serial_SPI_UART.c **** #endif /* (serial_INTERNAL_RX_SW_BUFFER) */
  53:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  54:Generated_Source\PSoC4/serial_SPI_UART.c **** #if(serial_INTERNAL_TX_SW_BUFFER)
  55:Generated_Source\PSoC4/serial_SPI_UART.c ****     volatile uint8 serial_txBufferInternal[serial_TX_BUFFER_SIZE];
  56:Generated_Source\PSoC4/serial_SPI_UART.c **** #endif /* (serial_INTERNAL_TX_SW_BUFFER) */
  57:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  58:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  59:Generated_Source\PSoC4/serial_SPI_UART.c **** #if(serial_RX_DIRECTION)
  60:Generated_Source\PSoC4/serial_SPI_UART.c ****     /*******************************************************************************
  61:Generated_Source\PSoC4/serial_SPI_UART.c ****     * Function Name: serial_SpiUartReadRxData
  62:Generated_Source\PSoC4/serial_SPI_UART.c ****     ****************************************************************************//**
  63:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
  64:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Retrieves the next data element from the receive buffer.
  65:Generated_Source\PSoC4/serial_SPI_UART.c ****     *   - RX software buffer is disabled: Returns data element retrieved from
  66:Generated_Source\PSoC4/serial_SPI_UART.c ****     *     RX FIFO. Undefined data will be returned if the RX FIFO is empty.
  67:Generated_Source\PSoC4/serial_SPI_UART.c ****     *   - RX software buffer is enabled: Returns data element from the software
  68:Generated_Source\PSoC4/serial_SPI_UART.c ****     *     receive buffer. Zero value is returned if the software receive buffer
  69:Generated_Source\PSoC4/serial_SPI_UART.c ****     *     is empty.
  70:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
  71:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \return
  72:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Next data element from the receive buffer. 
  73:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  The amount of data bits to be received depends on RX data bits selection 
  74:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  (the data bit counting starts from LSB of return value).
  75:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
  76:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \globalvars
  77:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_rxBufferHead - the start index to put data into the 
  78:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software receive buffer.
  79:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_rxBufferTail - the start index to get data from the 
  80:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software receive buffer.
  81:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
  82:Generated_Source\PSoC4/serial_SPI_UART.c ****     *******************************************************************************/
  83:Generated_Source\PSoC4/serial_SPI_UART.c ****     uint32 serial_SpiUartReadRxData(void)
  84:Generated_Source\PSoC4/serial_SPI_UART.c ****     {
  85:Generated_Source\PSoC4/serial_SPI_UART.c ****         uint32 rxData = 0u;
  86:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  87:Generated_Source\PSoC4/serial_SPI_UART.c ****     #if (serial_INTERNAL_RX_SW_BUFFER_CONST)
  88:Generated_Source\PSoC4/serial_SPI_UART.c ****         uint32 locTail;
  89:Generated_Source\PSoC4/serial_SPI_UART.c ****     #endif /* (serial_INTERNAL_RX_SW_BUFFER_CONST) */
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 3


  90:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  91:Generated_Source\PSoC4/serial_SPI_UART.c ****         #if (serial_CHECK_RX_SW_BUFFER)
  92:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
  93:Generated_Source\PSoC4/serial_SPI_UART.c ****             if (serial_rxBufferHead != serial_rxBufferTail)
  94:Generated_Source\PSoC4/serial_SPI_UART.c ****             {
  95:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* There is data in RX software buffer */
  96:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  97:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* Calculate index to read from */
  98:Generated_Source\PSoC4/serial_SPI_UART.c ****                 locTail = (serial_rxBufferTail + 1u);
  99:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 100:Generated_Source\PSoC4/serial_SPI_UART.c ****                 if (serial_INTERNAL_RX_BUFFER_SIZE == locTail)
 101:Generated_Source\PSoC4/serial_SPI_UART.c ****                 {
 102:Generated_Source\PSoC4/serial_SPI_UART.c ****                     locTail = 0u;
 103:Generated_Source\PSoC4/serial_SPI_UART.c ****                 }
 104:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 105:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* Get data from RX software buffer */
 106:Generated_Source\PSoC4/serial_SPI_UART.c ****                 rxData = serial_GetWordFromRxBuffer(locTail);
 107:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 108:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* Change index in the buffer */
 109:Generated_Source\PSoC4/serial_SPI_UART.c ****                 serial_rxBufferTail = locTail;
 110:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 111:Generated_Source\PSoC4/serial_SPI_UART.c ****                 #if (serial_CHECK_UART_RTS_CONTROL_FLOW)
 112:Generated_Source\PSoC4/serial_SPI_UART.c ****                 {
 113:Generated_Source\PSoC4/serial_SPI_UART.c ****                     /* Check if RX Not Empty is disabled in the interrupt */
 114:Generated_Source\PSoC4/serial_SPI_UART.c ****                     if (0u == (serial_INTR_RX_MASK_REG & serial_INTR_RX_NOT_EMPTY))
 115:Generated_Source\PSoC4/serial_SPI_UART.c ****                     {
 116:Generated_Source\PSoC4/serial_SPI_UART.c ****                         /* Enable RX Not Empty interrupt source to continue
 117:Generated_Source\PSoC4/serial_SPI_UART.c ****                         * receiving data into software buffer.
 118:Generated_Source\PSoC4/serial_SPI_UART.c ****                         */
 119:Generated_Source\PSoC4/serial_SPI_UART.c ****                         serial_INTR_RX_MASK_REG |= serial_INTR_RX_NOT_EMPTY;
 120:Generated_Source\PSoC4/serial_SPI_UART.c ****                     }
 121:Generated_Source\PSoC4/serial_SPI_UART.c ****                 }
 122:Generated_Source\PSoC4/serial_SPI_UART.c ****                 #endif
 123:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 124:Generated_Source\PSoC4/serial_SPI_UART.c ****             }
 125:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 126:Generated_Source\PSoC4/serial_SPI_UART.c ****         #else
 127:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 128:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Read data from RX FIFO */
 129:Generated_Source\PSoC4/serial_SPI_UART.c ****             rxData = serial_RX_FIFO_RD_REG;
 130:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 131:Generated_Source\PSoC4/serial_SPI_UART.c ****         #endif
 132:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 133:Generated_Source\PSoC4/serial_SPI_UART.c ****         return (rxData);
 134:Generated_Source\PSoC4/serial_SPI_UART.c ****     }
 135:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 136:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 137:Generated_Source\PSoC4/serial_SPI_UART.c ****     /*******************************************************************************
 138:Generated_Source\PSoC4/serial_SPI_UART.c ****     * Function Name: serial_SpiUartGetRxBufferSize
 139:Generated_Source\PSoC4/serial_SPI_UART.c ****     ****************************************************************************//**
 140:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 141:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Returns the number of received data elements in the receive buffer.
 142:Generated_Source\PSoC4/serial_SPI_UART.c ****     *   - RX software buffer disabled: returns the number of used entries in
 143:Generated_Source\PSoC4/serial_SPI_UART.c ****     *     RX FIFO.
 144:Generated_Source\PSoC4/serial_SPI_UART.c ****     *   - RX software buffer enabled: returns the number of elements which were
 145:Generated_Source\PSoC4/serial_SPI_UART.c ****     *     placed in the receive buffer. This does not include the hardware RX FIFO.
 146:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 4


 147:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \return
 148:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Number of received data elements.
 149:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 150:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \globalvars
 151:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_rxBufferHead - the start index to put data into the 
 152:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software receive buffer.
 153:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_rxBufferTail - the start index to get data from the 
 154:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software receive buffer.
 155:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 156:Generated_Source\PSoC4/serial_SPI_UART.c ****     *******************************************************************************/
 157:Generated_Source\PSoC4/serial_SPI_UART.c ****     uint32 serial_SpiUartGetRxBufferSize(void)
 158:Generated_Source\PSoC4/serial_SPI_UART.c ****     {
 159:Generated_Source\PSoC4/serial_SPI_UART.c ****         uint32 size;
 160:Generated_Source\PSoC4/serial_SPI_UART.c ****     #if (serial_INTERNAL_RX_SW_BUFFER_CONST)
 161:Generated_Source\PSoC4/serial_SPI_UART.c ****         uint32 locHead;
 162:Generated_Source\PSoC4/serial_SPI_UART.c ****     #endif /* (serial_INTERNAL_RX_SW_BUFFER_CONST) */
 163:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 164:Generated_Source\PSoC4/serial_SPI_UART.c ****         #if (serial_CHECK_RX_SW_BUFFER)
 165:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 166:Generated_Source\PSoC4/serial_SPI_UART.c ****             locHead = serial_rxBufferHead;
 167:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 168:Generated_Source\PSoC4/serial_SPI_UART.c ****             if(locHead >= serial_rxBufferTail)
 169:Generated_Source\PSoC4/serial_SPI_UART.c ****             {
 170:Generated_Source\PSoC4/serial_SPI_UART.c ****                 size = (locHead - serial_rxBufferTail);
 171:Generated_Source\PSoC4/serial_SPI_UART.c ****             }
 172:Generated_Source\PSoC4/serial_SPI_UART.c ****             else
 173:Generated_Source\PSoC4/serial_SPI_UART.c ****             {
 174:Generated_Source\PSoC4/serial_SPI_UART.c ****                 size = (locHead + (serial_INTERNAL_RX_BUFFER_SIZE - serial_rxBufferTail));
 175:Generated_Source\PSoC4/serial_SPI_UART.c ****             }
 176:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 177:Generated_Source\PSoC4/serial_SPI_UART.c ****         #else
 178:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 179:Generated_Source\PSoC4/serial_SPI_UART.c ****             size = serial_GET_RX_FIFO_ENTRIES;
 180:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 181:Generated_Source\PSoC4/serial_SPI_UART.c ****         #endif
 182:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 183:Generated_Source\PSoC4/serial_SPI_UART.c ****         return (size);
 184:Generated_Source\PSoC4/serial_SPI_UART.c ****     }
 185:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 186:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 187:Generated_Source\PSoC4/serial_SPI_UART.c ****     /*******************************************************************************
 188:Generated_Source\PSoC4/serial_SPI_UART.c ****     * Function Name: serial_SpiUartClearRxBuffer
 189:Generated_Source\PSoC4/serial_SPI_UART.c ****     ****************************************************************************//**
 190:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 191:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Clears the receive buffer and RX FIFO.
 192:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 193:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \globalvars
 194:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_rxBufferHead - the start index to put data into the 
 195:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software receive buffer.
 196:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_rxBufferTail - the start index to get data from the 
 197:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software receive buffer.
 198:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 199:Generated_Source\PSoC4/serial_SPI_UART.c ****     *******************************************************************************/
 200:Generated_Source\PSoC4/serial_SPI_UART.c ****     void serial_SpiUartClearRxBuffer(void)
 201:Generated_Source\PSoC4/serial_SPI_UART.c ****     {
 202:Generated_Source\PSoC4/serial_SPI_UART.c ****         #if (serial_CHECK_RX_SW_BUFFER)
 203:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 5


 204:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Lock from component interruption */
 205:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_DisableInt();
 206:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 207:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Flush RX software buffer */
 208:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_rxBufferHead = serial_rxBufferTail;
 209:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_rxBufferOverflow = 0u;
 210:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 211:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_CLEAR_RX_FIFO;
 212:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_ClearRxInterruptSource(serial_INTR_RX_ALL);
 213:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 214:Generated_Source\PSoC4/serial_SPI_UART.c ****             #if (serial_CHECK_UART_RTS_CONTROL_FLOW)
 215:Generated_Source\PSoC4/serial_SPI_UART.c ****             {
 216:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* Enable RX Not Empty interrupt source to continue receiving
 217:Generated_Source\PSoC4/serial_SPI_UART.c ****                 * data into software buffer.
 218:Generated_Source\PSoC4/serial_SPI_UART.c ****                 */
 219:Generated_Source\PSoC4/serial_SPI_UART.c ****                 serial_INTR_RX_MASK_REG |= serial_INTR_RX_NOT_EMPTY;
 220:Generated_Source\PSoC4/serial_SPI_UART.c ****             }
 221:Generated_Source\PSoC4/serial_SPI_UART.c ****             #endif
 222:Generated_Source\PSoC4/serial_SPI_UART.c ****             
 223:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Release lock */
 224:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_EnableInt();
 225:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 226:Generated_Source\PSoC4/serial_SPI_UART.c ****         #else
 227:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 228:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_CLEAR_RX_FIFO;
 229:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 230:Generated_Source\PSoC4/serial_SPI_UART.c ****         #endif
 231:Generated_Source\PSoC4/serial_SPI_UART.c ****     }
 232:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 233:Generated_Source\PSoC4/serial_SPI_UART.c **** #endif /* (serial_RX_DIRECTION) */
 234:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 235:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 236:Generated_Source\PSoC4/serial_SPI_UART.c **** #if(serial_TX_DIRECTION)
 237:Generated_Source\PSoC4/serial_SPI_UART.c ****     /*******************************************************************************
 238:Generated_Source\PSoC4/serial_SPI_UART.c ****     * Function Name: serial_SpiUartWriteTxData
 239:Generated_Source\PSoC4/serial_SPI_UART.c ****     ****************************************************************************//**
 240:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 241:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Places a data entry into the transmit buffer to be sent at the next available
 242:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  bus time.
 243:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  This function is blocking and waits until there is space available to put the
 244:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  requested data in the transmit buffer.
 245:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 246:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  \param txDataByte: the data to be transmitted.
 247:Generated_Source\PSoC4/serial_SPI_UART.c ****     *   The amount of data bits to be transmitted depends on TX data bits selection 
 248:Generated_Source\PSoC4/serial_SPI_UART.c ****     *   (the data bit counting starts from LSB of txDataByte).
 249:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 250:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \globalvars
 251:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_txBufferHead - the start index to put data into the 
 252:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software transmit buffer.
 253:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_txBufferTail - start index to get data from the software
 254:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  transmit buffer.
 255:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 256:Generated_Source\PSoC4/serial_SPI_UART.c ****     *******************************************************************************/
 257:Generated_Source\PSoC4/serial_SPI_UART.c ****     void serial_SpiUartWriteTxData(uint32 txData)
 258:Generated_Source\PSoC4/serial_SPI_UART.c ****     {
  26              		.loc 1 258 0
  27              		.cfi_startproc
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 6


  28              	.LVL0:
 259:Generated_Source\PSoC4/serial_SPI_UART.c ****     #if (serial_INTERNAL_TX_SW_BUFFER_CONST)
 260:Generated_Source\PSoC4/serial_SPI_UART.c ****         uint32 locHead;
 261:Generated_Source\PSoC4/serial_SPI_UART.c ****     #endif /* (serial_INTERNAL_TX_SW_BUFFER_CONST) */
 262:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 263:Generated_Source\PSoC4/serial_SPI_UART.c ****         #if (serial_CHECK_TX_SW_BUFFER)
 264:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 265:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Put data directly into the TX FIFO */
 266:Generated_Source\PSoC4/serial_SPI_UART.c ****             if ((serial_txBufferHead == serial_txBufferTail) &&
  29              		.loc 1 266 0
  30 0000 144B     		ldr	r3, .L7
  31 0002 1A68     		ldr	r2, [r3]
  32 0004 144B     		ldr	r3, .L7+4
  33 0006 1B68     		ldr	r3, [r3]
  34 0008 9A42     		cmp	r2, r3
  35 000a 08D1     		bne	.L2
 267:Generated_Source\PSoC4/serial_SPI_UART.c ****                 (serial_SPI_UART_FIFO_SIZE != serial_GET_TX_FIFO_ENTRIES))
  36              		.loc 1 267 0 discriminator 1
  37 000c 134B     		ldr	r3, .L7+8
  38 000e 1B68     		ldr	r3, [r3]
  39 0010 0F22     		mov	r2, #15
  40 0012 1340     		and	r3, r2
 266:Generated_Source\PSoC4/serial_SPI_UART.c ****                 (serial_SPI_UART_FIFO_SIZE != serial_GET_TX_FIFO_ENTRIES))
  41              		.loc 1 266 0 discriminator 1
  42 0014 082B     		cmp	r3, #8
  43 0016 02D0     		beq	.L2
 268:Generated_Source\PSoC4/serial_SPI_UART.c ****             {
 269:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* TX software buffer is empty: put data directly in TX FIFO */
 270:Generated_Source\PSoC4/serial_SPI_UART.c ****                 serial_TX_FIFO_WR_REG = txData;
  44              		.loc 1 270 0
  45 0018 114B     		ldr	r3, .L7+12
  46 001a 1860     		str	r0, [r3]
  47 001c 19E0     		b	.L1
  48              	.L2:
 271:Generated_Source\PSoC4/serial_SPI_UART.c ****             }
 272:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Put data into TX software buffer */
 273:Generated_Source\PSoC4/serial_SPI_UART.c ****             else
 274:Generated_Source\PSoC4/serial_SPI_UART.c ****             {
 275:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* Head index to put data */
 276:Generated_Source\PSoC4/serial_SPI_UART.c ****                 locHead = (serial_txBufferHead + 1u);
  49              		.loc 1 276 0
  50 001e 0D4B     		ldr	r3, .L7
  51 0020 1A68     		ldr	r2, [r3]
  52 0022 0132     		add	r2, r2, #1
  53              	.LVL1:
 277:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 278:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* Adjust TX software buffer index */
 279:Generated_Source\PSoC4/serial_SPI_UART.c ****                 if (serial_TX_BUFFER_SIZE == locHead)
  54              		.loc 1 279 0
  55 0024 322A     		cmp	r2, #50
  56 0026 00D1     		bne	.L5
 280:Generated_Source\PSoC4/serial_SPI_UART.c ****                 {
 281:Generated_Source\PSoC4/serial_SPI_UART.c ****                     locHead = 0u;
  57              		.loc 1 281 0
  58 0028 0022     		mov	r2, #0
  59              	.LVL2:
  60              	.L5:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 7


 282:Generated_Source\PSoC4/serial_SPI_UART.c ****                 }
 283:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 284:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* Wait for space in TX software buffer */
 285:Generated_Source\PSoC4/serial_SPI_UART.c ****                 while (locHead == serial_txBufferTail)
  61              		.loc 1 285 0 discriminator 1
  62 002a 0B4B     		ldr	r3, .L7+4
  63 002c 1B68     		ldr	r3, [r3]
  64 002e 9A42     		cmp	r2, r3
  65 0030 FBD0     		beq	.L5
 286:Generated_Source\PSoC4/serial_SPI_UART.c ****                 {
 287:Generated_Source\PSoC4/serial_SPI_UART.c ****                 }
 288:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 289:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* TX software buffer has at least one room */
 290:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 291:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* Clear old status of INTR_TX_NOT_FULL. It sets at the end of transfer when TX FIF
 292:Generated_Source\PSoC4/serial_SPI_UART.c ****                 serial_ClearTxInterruptSource(serial_INTR_TX_NOT_FULL);
  66              		.loc 1 292 0
  67 0032 0223     		mov	r3, #2
  68 0034 0B49     		ldr	r1, .L7+16
  69 0036 0B60     		str	r3, [r1]
 293:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 294:Generated_Source\PSoC4/serial_SPI_UART.c ****                 serial_PutWordInTxBuffer(locHead, txData);
  70              		.loc 1 294 0
  71 0038 C0B2     		uxtb	r0, r0
  72              	.LVL3:
  73 003a 0B49     		ldr	r1, .L7+20
  74 003c 8854     		strb	r0, [r1, r2]
 295:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 296:Generated_Source\PSoC4/serial_SPI_UART.c ****                 serial_txBufferHead = locHead;
  75              		.loc 1 296 0
  76 003e 0549     		ldr	r1, .L7
  77 0040 0A60     		str	r2, [r1]
 297:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 298:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* Check if TX Not Full is disabled in interrupt */
 299:Generated_Source\PSoC4/serial_SPI_UART.c ****                 if (0u == (serial_INTR_TX_MASK_REG & serial_INTR_TX_NOT_FULL))
  78              		.loc 1 299 0
  79 0042 0A4A     		ldr	r2, .L7+24
  80              	.LVL4:
  81 0044 1268     		ldr	r2, [r2]
  82 0046 1342     		tst	r3, r2
  83 0048 03D1     		bne	.L1
 300:Generated_Source\PSoC4/serial_SPI_UART.c ****                 {
 301:Generated_Source\PSoC4/serial_SPI_UART.c ****                     /* Enable TX Not Full interrupt source to transmit from software buffer */
 302:Generated_Source\PSoC4/serial_SPI_UART.c ****                     serial_INTR_TX_MASK_REG |= (uint32) serial_INTR_TX_NOT_FULL;
  84              		.loc 1 302 0
  85 004a 084A     		ldr	r2, .L7+24
  86 004c 1168     		ldr	r1, [r2]
  87 004e 0B43     		orr	r3, r1
  88 0050 1360     		str	r3, [r2]
  89              	.LVL5:
  90              	.L1:
 303:Generated_Source\PSoC4/serial_SPI_UART.c ****                 }
 304:Generated_Source\PSoC4/serial_SPI_UART.c ****             }
 305:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 306:Generated_Source\PSoC4/serial_SPI_UART.c ****         #else
 307:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 308:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Wait until TX FIFO has space to put data element */
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 8


 309:Generated_Source\PSoC4/serial_SPI_UART.c ****             while (serial_SPI_UART_FIFO_SIZE == serial_GET_TX_FIFO_ENTRIES)
 310:Generated_Source\PSoC4/serial_SPI_UART.c ****             {
 311:Generated_Source\PSoC4/serial_SPI_UART.c ****             }
 312:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 313:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_TX_FIFO_WR_REG = txData;
 314:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 315:Generated_Source\PSoC4/serial_SPI_UART.c ****         #endif
 316:Generated_Source\PSoC4/serial_SPI_UART.c ****     }
  91              		.loc 1 316 0
  92              		@ sp needed
  93 0052 7047     		bx	lr
  94              	.L8:
  95              		.align	2
  96              	.L7:
  97 0054 00000000 		.word	serial_txBufferHead
  98 0058 00000000 		.word	serial_txBufferTail
  99 005c 08020640 		.word	1074135560
 100 0060 40020640 		.word	1074135616
 101 0064 800F0640 		.word	1074139008
 102 0068 00000000 		.word	serial_txBufferInternal
 103 006c 880F0640 		.word	1074139016
 104              		.cfi_endproc
 105              	.LFE0:
 106              		.size	serial_SpiUartWriteTxData, .-serial_SpiUartWriteTxData
 107              		.section	.text.serial_SpiUartPutArray,"ax",%progbits
 108              		.align	2
 109              		.global	serial_SpiUartPutArray
 110              		.code	16
 111              		.thumb_func
 112              		.type	serial_SpiUartPutArray, %function
 113              	serial_SpiUartPutArray:
 114              	.LFB1:
 317:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 318:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 319:Generated_Source\PSoC4/serial_SPI_UART.c ****     /*******************************************************************************
 320:Generated_Source\PSoC4/serial_SPI_UART.c ****     * Function Name: serial_SpiUartPutArray
 321:Generated_Source\PSoC4/serial_SPI_UART.c ****     ****************************************************************************//**
 322:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 323:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Places an array of data into the transmit buffer to be sent.
 324:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  This function is blocking and waits until there is a space available to put
 325:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  all the requested data in the transmit buffer. The array size can be greater
 326:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  than transmit buffer size.
 327:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 328:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \param wrBuf: pointer to an array of data to be placed in transmit buffer. 
 329:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  The width of the data to be transmitted depends on TX data width selection 
 330:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  (the data bit counting starts from LSB for each array element).
 331:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \param count: number of data elements to be placed in the transmit buffer.
 332:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 333:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \globalvars
 334:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_txBufferHead - the start index to put data into the 
 335:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software transmit buffer.
 336:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_txBufferTail - start index to get data from the software
 337:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  transmit buffer.
 338:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 339:Generated_Source\PSoC4/serial_SPI_UART.c ****     *******************************************************************************/
 340:Generated_Source\PSoC4/serial_SPI_UART.c ****     void serial_SpiUartPutArray(const uint8 wrBuf[], uint32 count)
 341:Generated_Source\PSoC4/serial_SPI_UART.c ****     {
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 9


 115              		.loc 1 341 0
 116              		.cfi_startproc
 117              	.LVL6:
 118 0000 70B5     		push	{r4, r5, r6, lr}
 119              		.cfi_def_cfa_offset 16
 120              		.cfi_offset 4, -16
 121              		.cfi_offset 5, -12
 122              		.cfi_offset 6, -8
 123              		.cfi_offset 14, -4
 124 0002 061C     		mov	r6, r0
 125 0004 0D1C     		mov	r5, r1
 126              	.LVL7:
 342:Generated_Source\PSoC4/serial_SPI_UART.c ****         uint32 i;
 343:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 344:Generated_Source\PSoC4/serial_SPI_UART.c ****         for (i=0u; i < count; i++)
 127              		.loc 1 344 0
 128 0006 0024     		mov	r4, #0
 129 0008 03E0     		b	.L10
 130              	.LVL8:
 131              	.L11:
 345:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 346:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_SpiUartWriteTxData((uint32) wrBuf[i]);
 132              		.loc 1 346 0 discriminator 3
 133 000a 305D     		ldrb	r0, [r6, r4]
 134 000c FFF7FEFF 		bl	serial_SpiUartWriteTxData
 135              	.LVL9:
 344:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 136              		.loc 1 344 0 discriminator 3
 137 0010 0134     		add	r4, r4, #1
 138              	.LVL10:
 139              	.L10:
 344:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 140              		.loc 1 344 0 is_stmt 0 discriminator 1
 141 0012 AC42     		cmp	r4, r5
 142 0014 F9D3     		bcc	.L11
 347:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 348:Generated_Source\PSoC4/serial_SPI_UART.c ****     }
 143              		.loc 1 348 0 is_stmt 1
 144              		@ sp needed
 145              	.LVL11:
 146              	.LVL12:
 147              	.LVL13:
 148 0016 70BD     		pop	{r4, r5, r6, pc}
 149              		.cfi_endproc
 150              	.LFE1:
 151              		.size	serial_SpiUartPutArray, .-serial_SpiUartPutArray
 152              		.section	.text.serial_SpiUartGetTxBufferSize,"ax",%progbits
 153              		.align	2
 154              		.global	serial_SpiUartGetTxBufferSize
 155              		.code	16
 156              		.thumb_func
 157              		.type	serial_SpiUartGetTxBufferSize, %function
 158              	serial_SpiUartGetTxBufferSize:
 159              	.LFB2:
 349:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 350:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 351:Generated_Source\PSoC4/serial_SPI_UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 10


 352:Generated_Source\PSoC4/serial_SPI_UART.c ****     * Function Name: serial_SpiUartGetTxBufferSize
 353:Generated_Source\PSoC4/serial_SPI_UART.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 355:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Returns the number of elements currently in the transmit buffer.
 356:Generated_Source\PSoC4/serial_SPI_UART.c ****     *   - TX software buffer is disabled: returns the number of used entries in
 357:Generated_Source\PSoC4/serial_SPI_UART.c ****     *     TX FIFO.
 358:Generated_Source\PSoC4/serial_SPI_UART.c ****     *   - TX software buffer is enabled: returns the number of elements currently
 359:Generated_Source\PSoC4/serial_SPI_UART.c ****     *     used in the transmit buffer. This number does not include used entries in
 360:Generated_Source\PSoC4/serial_SPI_UART.c ****     *     the TX FIFO. The transmit buffer size is zero until the TX FIFO is
 361:Generated_Source\PSoC4/serial_SPI_UART.c ****     *     not full.
 362:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 363:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \return
 364:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Number of data elements ready to transmit.
 365:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 366:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \globalvars
 367:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_txBufferHead - the start index to put data into the 
 368:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software transmit buffer.
 369:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_txBufferTail - start index to get data from the software
 370:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  transmit buffer.
 371:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 372:Generated_Source\PSoC4/serial_SPI_UART.c ****     *******************************************************************************/
 373:Generated_Source\PSoC4/serial_SPI_UART.c ****     uint32 serial_SpiUartGetTxBufferSize(void)
 374:Generated_Source\PSoC4/serial_SPI_UART.c ****     {
 160              		.loc 1 374 0
 161              		.cfi_startproc
 375:Generated_Source\PSoC4/serial_SPI_UART.c ****         uint32 size;
 376:Generated_Source\PSoC4/serial_SPI_UART.c ****     #if (serial_INTERNAL_TX_SW_BUFFER_CONST)
 377:Generated_Source\PSoC4/serial_SPI_UART.c ****         uint32 locTail;
 378:Generated_Source\PSoC4/serial_SPI_UART.c ****     #endif /* (serial_INTERNAL_TX_SW_BUFFER_CONST) */
 379:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 380:Generated_Source\PSoC4/serial_SPI_UART.c ****         #if (serial_CHECK_TX_SW_BUFFER)
 381:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 382:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Get current Tail index */
 383:Generated_Source\PSoC4/serial_SPI_UART.c ****             locTail = serial_txBufferTail;
 162              		.loc 1 383 0
 163 0000 074B     		ldr	r3, .L15
 164 0002 1868     		ldr	r0, [r3]
 165              	.LVL14:
 384:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 385:Generated_Source\PSoC4/serial_SPI_UART.c ****             if (serial_txBufferHead >= locTail)
 166              		.loc 1 385 0
 167 0004 074B     		ldr	r3, .L15+4
 168 0006 1B68     		ldr	r3, [r3]
 169 0008 8342     		cmp	r3, r0
 170 000a 03D3     		bcc	.L13
 386:Generated_Source\PSoC4/serial_SPI_UART.c ****             {
 387:Generated_Source\PSoC4/serial_SPI_UART.c ****                 size = (serial_txBufferHead - locTail);
 171              		.loc 1 387 0
 172 000c 054B     		ldr	r3, .L15+4
 173 000e 1B68     		ldr	r3, [r3]
 174 0010 181A     		sub	r0, r3, r0
 175              	.LVL15:
 176 0012 03E0     		b	.L14
 177              	.LVL16:
 178              	.L13:
 388:Generated_Source\PSoC4/serial_SPI_UART.c ****             }
 389:Generated_Source\PSoC4/serial_SPI_UART.c ****             else
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 11


 390:Generated_Source\PSoC4/serial_SPI_UART.c ****             {
 391:Generated_Source\PSoC4/serial_SPI_UART.c ****                 size = (serial_txBufferHead + (serial_TX_BUFFER_SIZE - locTail));
 179              		.loc 1 391 0
 180 0014 034B     		ldr	r3, .L15+4
 181 0016 1B68     		ldr	r3, [r3]
 182 0018 181A     		sub	r0, r3, r0
 183              	.LVL17:
 184 001a 3230     		add	r0, r0, #50
 185              	.LVL18:
 186              	.L14:
 392:Generated_Source\PSoC4/serial_SPI_UART.c ****             }
 393:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 394:Generated_Source\PSoC4/serial_SPI_UART.c ****         #else
 395:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 396:Generated_Source\PSoC4/serial_SPI_UART.c ****             size = serial_GET_TX_FIFO_ENTRIES;
 397:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 398:Generated_Source\PSoC4/serial_SPI_UART.c ****         #endif
 399:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 400:Generated_Source\PSoC4/serial_SPI_UART.c ****         return (size);
 401:Generated_Source\PSoC4/serial_SPI_UART.c ****     }
 187              		.loc 1 401 0
 188              		@ sp needed
 189 001c 7047     		bx	lr
 190              	.L16:
 191 001e C046     		.align	2
 192              	.L15:
 193 0020 00000000 		.word	serial_txBufferTail
 194 0024 00000000 		.word	serial_txBufferHead
 195              		.cfi_endproc
 196              	.LFE2:
 197              		.size	serial_SpiUartGetTxBufferSize, .-serial_SpiUartGetTxBufferSize
 198              		.section	.text.serial_SpiUartClearTxBuffer,"ax",%progbits
 199              		.align	2
 200              		.global	serial_SpiUartClearTxBuffer
 201              		.code	16
 202              		.thumb_func
 203              		.type	serial_SpiUartClearTxBuffer, %function
 204              	serial_SpiUartClearTxBuffer:
 205              	.LFB3:
 402:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 403:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 404:Generated_Source\PSoC4/serial_SPI_UART.c ****     /*******************************************************************************
 405:Generated_Source\PSoC4/serial_SPI_UART.c ****     * Function Name: serial_SpiUartClearTxBuffer
 406:Generated_Source\PSoC4/serial_SPI_UART.c ****     ****************************************************************************//**
 407:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 408:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Clears the transmit buffer and TX FIFO.
 409:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 410:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \globalvars
 411:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_txBufferHead - the start index to put data into the 
 412:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software transmit buffer.
 413:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_txBufferTail - start index to get data from the software
 414:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  transmit buffer.
 415:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 416:Generated_Source\PSoC4/serial_SPI_UART.c ****     *******************************************************************************/
 417:Generated_Source\PSoC4/serial_SPI_UART.c ****     void serial_SpiUartClearTxBuffer(void)
 418:Generated_Source\PSoC4/serial_SPI_UART.c ****     {
 206              		.loc 1 418 0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 12


 207              		.cfi_startproc
 208 0000 08B5     		push	{r3, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 3, -8
 211              		.cfi_offset 14, -4
 419:Generated_Source\PSoC4/serial_SPI_UART.c ****         #if (serial_CHECK_TX_SW_BUFFER)
 420:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 421:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Lock from component interruption */
 422:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_DisableInt();
 212              		.loc 1 422 0
 213 0002 0A20     		mov	r0, #10
 214 0004 FFF7FEFF 		bl	CyIntDisable
 215              	.LVL19:
 423:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 424:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Flush TX software buffer */
 425:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_txBufferHead = serial_txBufferTail;
 216              		.loc 1 425 0
 217 0008 0C4B     		ldr	r3, .L18
 218 000a 1A68     		ldr	r2, [r3]
 219 000c 0C4B     		ldr	r3, .L18+4
 220 000e 1A60     		str	r2, [r3]
 426:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 427:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_INTR_TX_MASK_REG &= (uint32) ~serial_INTR_TX_NOT_FULL;
 221              		.loc 1 427 0
 222 0010 0C4A     		ldr	r2, .L18+8
 223 0012 1368     		ldr	r3, [r2]
 224 0014 0221     		mov	r1, #2
 225 0016 8B43     		bic	r3, r1
 226 0018 1360     		str	r3, [r2]
 428:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_CLEAR_TX_FIFO;
 227              		.loc 1 428 0
 228 001a 0B4B     		ldr	r3, .L18+12
 229 001c 1A68     		ldr	r2, [r3]
 230 001e 8021     		mov	r1, #128
 231 0020 4902     		lsl	r1, r1, #9
 232 0022 0A43     		orr	r2, r1
 233 0024 1A60     		str	r2, [r3]
 234 0026 1968     		ldr	r1, [r3]
 235 0028 084A     		ldr	r2, .L18+16
 236 002a 0A40     		and	r2, r1
 237 002c 1A60     		str	r2, [r3]
 429:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_ClearTxInterruptSource(serial_INTR_TX_ALL);
 238              		.loc 1 429 0
 239 002e 084A     		ldr	r2, .L18+20
 240 0030 084B     		ldr	r3, .L18+24
 241 0032 1A60     		str	r2, [r3]
 430:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 431:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Release lock */
 432:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_EnableInt();
 242              		.loc 1 432 0
 243 0034 0A20     		mov	r0, #10
 244 0036 FFF7FEFF 		bl	CyIntEnable
 245              	.LVL20:
 433:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 434:Generated_Source\PSoC4/serial_SPI_UART.c ****         #else
 435:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 436:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_CLEAR_TX_FIFO;
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 13


 437:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 438:Generated_Source\PSoC4/serial_SPI_UART.c ****         #endif
 439:Generated_Source\PSoC4/serial_SPI_UART.c ****     }
 246              		.loc 1 439 0
 247              		@ sp needed
 248 003a 08BD     		pop	{r3, pc}
 249              	.L19:
 250              		.align	2
 251              	.L18:
 252 003c 00000000 		.word	serial_txBufferTail
 253 0040 00000000 		.word	serial_txBufferHead
 254 0044 880F0640 		.word	1074139016
 255 0048 04020640 		.word	1074135556
 256 004c FFFFFEFF 		.word	-65537
 257 0050 F3070000 		.word	2035
 258 0054 800F0640 		.word	1074139008
 259              		.cfi_endproc
 260              	.LFE3:
 261              		.size	serial_SpiUartClearTxBuffer, .-serial_SpiUartClearTxBuffer
 262              		.section	.text.serial_SpiUartDisableIntRx,"ax",%progbits
 263              		.align	2
 264              		.global	serial_SpiUartDisableIntRx
 265              		.code	16
 266              		.thumb_func
 267              		.type	serial_SpiUartDisableIntRx, %function
 268              	serial_SpiUartDisableIntRx:
 269              	.LFB4:
 440:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 441:Generated_Source\PSoC4/serial_SPI_UART.c **** #endif /* (serial_TX_DIRECTION) */
 442:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 443:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 444:Generated_Source\PSoC4/serial_SPI_UART.c **** /*******************************************************************************
 445:Generated_Source\PSoC4/serial_SPI_UART.c **** * Function Name: serial_SpiUartDisableIntRx
 446:Generated_Source\PSoC4/serial_SPI_UART.c **** ****************************************************************************//**
 447:Generated_Source\PSoC4/serial_SPI_UART.c **** *
 448:Generated_Source\PSoC4/serial_SPI_UART.c **** *  Disables the RX interrupt sources.
 449:Generated_Source\PSoC4/serial_SPI_UART.c **** *
 450:Generated_Source\PSoC4/serial_SPI_UART.c **** *  \return
 451:Generated_Source\PSoC4/serial_SPI_UART.c **** *   Returns the RX interrupt sources enabled before the function call.
 452:Generated_Source\PSoC4/serial_SPI_UART.c **** *
 453:Generated_Source\PSoC4/serial_SPI_UART.c **** *******************************************************************************/
 454:Generated_Source\PSoC4/serial_SPI_UART.c **** uint32 serial_SpiUartDisableIntRx(void)
 455:Generated_Source\PSoC4/serial_SPI_UART.c **** {
 270              		.loc 1 455 0
 271              		.cfi_startproc
 456:Generated_Source\PSoC4/serial_SPI_UART.c ****     uint32 intSource;
 457:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 458:Generated_Source\PSoC4/serial_SPI_UART.c ****     intSource = serial_GetRxInterruptMode();
 272              		.loc 1 458 0
 273 0000 024B     		ldr	r3, .L21
 274 0002 1868     		ldr	r0, [r3]
 275              	.LVL21:
 459:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 460:Generated_Source\PSoC4/serial_SPI_UART.c ****     serial_SetRxInterruptMode(serial_NO_INTR_SOURCES);
 276              		.loc 1 460 0
 277 0004 0022     		mov	r2, #0
 278 0006 1A60     		str	r2, [r3]
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 14


 461:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 462:Generated_Source\PSoC4/serial_SPI_UART.c ****     return (intSource);
 463:Generated_Source\PSoC4/serial_SPI_UART.c **** }
 279              		.loc 1 463 0
 280              		@ sp needed
 281 0008 7047     		bx	lr
 282              	.L22:
 283 000a C046     		.align	2
 284              	.L21:
 285 000c C80F0640 		.word	1074139080
 286              		.cfi_endproc
 287              	.LFE4:
 288              		.size	serial_SpiUartDisableIntRx, .-serial_SpiUartDisableIntRx
 289              		.section	.text.serial_SpiUartDisableIntTx,"ax",%progbits
 290              		.align	2
 291              		.global	serial_SpiUartDisableIntTx
 292              		.code	16
 293              		.thumb_func
 294              		.type	serial_SpiUartDisableIntTx, %function
 295              	serial_SpiUartDisableIntTx:
 296              	.LFB5:
 464:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 465:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 466:Generated_Source\PSoC4/serial_SPI_UART.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/serial_SPI_UART.c **** * Function Name: serial_SpiUartDisableIntTx
 468:Generated_Source\PSoC4/serial_SPI_UART.c **** ****************************************************************************//**
 469:Generated_Source\PSoC4/serial_SPI_UART.c **** *
 470:Generated_Source\PSoC4/serial_SPI_UART.c **** *  Disables TX interrupt sources.
 471:Generated_Source\PSoC4/serial_SPI_UART.c **** *
 472:Generated_Source\PSoC4/serial_SPI_UART.c **** *  \return
 473:Generated_Source\PSoC4/serial_SPI_UART.c **** *   Returns TX interrupt sources enabled before function call.
 474:Generated_Source\PSoC4/serial_SPI_UART.c **** *
 475:Generated_Source\PSoC4/serial_SPI_UART.c **** *******************************************************************************/
 476:Generated_Source\PSoC4/serial_SPI_UART.c **** uint32 serial_SpiUartDisableIntTx(void)
 477:Generated_Source\PSoC4/serial_SPI_UART.c **** {
 297              		.loc 1 477 0
 298              		.cfi_startproc
 478:Generated_Source\PSoC4/serial_SPI_UART.c ****     uint32 intSourceMask;
 479:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 480:Generated_Source\PSoC4/serial_SPI_UART.c ****     intSourceMask = serial_GetTxInterruptMode();
 299              		.loc 1 480 0
 300 0000 024B     		ldr	r3, .L24
 301 0002 1868     		ldr	r0, [r3]
 302              	.LVL22:
 481:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 482:Generated_Source\PSoC4/serial_SPI_UART.c ****     serial_SetTxInterruptMode(serial_NO_INTR_SOURCES);
 303              		.loc 1 482 0
 304 0004 0022     		mov	r2, #0
 305 0006 1A60     		str	r2, [r3]
 483:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 484:Generated_Source\PSoC4/serial_SPI_UART.c ****     return (intSourceMask);
 485:Generated_Source\PSoC4/serial_SPI_UART.c **** }
 306              		.loc 1 485 0
 307              		@ sp needed
 308 0008 7047     		bx	lr
 309              	.L25:
 310 000a C046     		.align	2
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 15


 311              	.L24:
 312 000c 880F0640 		.word	1074139016
 313              		.cfi_endproc
 314              	.LFE5:
 315              		.size	serial_SpiUartDisableIntTx, .-serial_SpiUartDisableIntTx
 316              		.comm	serial_txBufferInternal,50,4
 317              		.comm	serial_txBufferTail,4,4
 318              		.comm	serial_txBufferHead,4,4
 319              		.text
 320              	.Letext0:
 321              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 322              		.file 3 "Generated_Source\\PSoC4/CyLib.h"
 323              		.section	.debug_info,"",%progbits
 324              	.Ldebug_info0:
 325 0000 69020000 		.4byte	0x269
 326 0004 0400     		.2byte	0x4
 327 0006 00000000 		.4byte	.Ldebug_abbrev0
 328 000a 04       		.byte	0x4
 329 000b 01       		.uleb128 0x1
 330 000c 5C010000 		.4byte	.LASF33
 331 0010 01       		.byte	0x1
 332 0011 C9020000 		.4byte	.LASF34
 333 0015 5B020000 		.4byte	.LASF35
 334 0019 00000000 		.4byte	.Ldebug_ranges0+0
 335 001d 00000000 		.4byte	0
 336 0021 00000000 		.4byte	.Ldebug_line0
 337 0025 02       		.uleb128 0x2
 338 0026 01       		.byte	0x1
 339 0027 06       		.byte	0x6
 340 0028 AA020000 		.4byte	.LASF0
 341 002c 02       		.uleb128 0x2
 342 002d 01       		.byte	0x1
 343 002e 08       		.byte	0x8
 344 002f AC000000 		.4byte	.LASF1
 345 0033 02       		.uleb128 0x2
 346 0034 02       		.byte	0x2
 347 0035 05       		.byte	0x5
 348 0036 F7010000 		.4byte	.LASF2
 349 003a 02       		.uleb128 0x2
 350 003b 02       		.byte	0x2
 351 003c 07       		.byte	0x7
 352 003d B6020000 		.4byte	.LASF3
 353 0041 02       		.uleb128 0x2
 354 0042 04       		.byte	0x4
 355 0043 05       		.byte	0x5
 356 0044 19020000 		.4byte	.LASF4
 357 0048 02       		.uleb128 0x2
 358 0049 04       		.byte	0x4
 359 004a 07       		.byte	0x7
 360 004b 5E000000 		.4byte	.LASF5
 361 004f 02       		.uleb128 0x2
 362 0050 08       		.byte	0x8
 363 0051 05       		.byte	0x5
 364 0052 49010000 		.4byte	.LASF6
 365 0056 02       		.uleb128 0x2
 366 0057 08       		.byte	0x8
 367 0058 07       		.byte	0x7
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 16


 368 0059 21010000 		.4byte	.LASF7
 369 005d 03       		.uleb128 0x3
 370 005e 04       		.byte	0x4
 371 005f 05       		.byte	0x5
 372 0060 696E7400 		.ascii	"int\000"
 373 0064 02       		.uleb128 0x2
 374 0065 04       		.byte	0x4
 375 0066 07       		.byte	0x7
 376 0067 3E000000 		.4byte	.LASF8
 377 006b 04       		.uleb128 0x4
 378 006c 70000000 		.4byte	.LASF9
 379 0070 02       		.byte	0x2
 380 0071 B901     		.2byte	0x1b9
 381 0073 2C000000 		.4byte	0x2c
 382 0077 04       		.uleb128 0x4
 383 0078 02010000 		.4byte	.LASF10
 384 007c 02       		.byte	0x2
 385 007d BB01     		.2byte	0x1bb
 386 007f 48000000 		.4byte	0x48
 387 0083 02       		.uleb128 0x2
 388 0084 04       		.byte	0x4
 389 0085 04       		.byte	0x4
 390 0086 53000000 		.4byte	.LASF11
 391 008a 02       		.uleb128 0x2
 392 008b 08       		.byte	0x8
 393 008c 04       		.byte	0x4
 394 008d BA000000 		.4byte	.LASF12
 395 0091 02       		.uleb128 0x2
 396 0092 01       		.byte	0x1
 397 0093 08       		.byte	0x8
 398 0094 57010000 		.4byte	.LASF13
 399 0098 04       		.uleb128 0x4
 400 0099 17000000 		.4byte	.LASF14
 401 009d 02       		.byte	0x2
 402 009e 6502     		.2byte	0x265
 403 00a0 A4000000 		.4byte	0xa4
 404 00a4 05       		.uleb128 0x5
 405 00a5 77000000 		.4byte	0x77
 406 00a9 02       		.uleb128 0x2
 407 00aa 04       		.byte	0x4
 408 00ab 07       		.byte	0x7
 409 00ac 40010000 		.4byte	.LASF15
 410 00b0 06       		.uleb128 0x6
 411 00b1 92000000 		.4byte	.LASF16
 412 00b5 01       		.byte	0x1
 413 00b6 0101     		.2byte	0x101
 414 00b8 00000000 		.4byte	.LFB0
 415 00bc 70000000 		.4byte	.LFE0-.LFB0
 416 00c0 01       		.uleb128 0x1
 417 00c1 9C       		.byte	0x9c
 418 00c2 E7000000 		.4byte	0xe7
 419 00c6 07       		.uleb128 0x7
 420 00c7 23000000 		.4byte	.LASF18
 421 00cb 01       		.byte	0x1
 422 00cc 0101     		.2byte	0x101
 423 00ce 77000000 		.4byte	0x77
 424 00d2 00000000 		.4byte	.LLST0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 17


 425 00d6 08       		.uleb128 0x8
 426 00d7 4B000000 		.4byte	.LASF21
 427 00db 01       		.byte	0x1
 428 00dc 0401     		.2byte	0x104
 429 00de 77000000 		.4byte	0x77
 430 00e2 21000000 		.4byte	.LLST1
 431 00e6 00       		.byte	0
 432 00e7 06       		.uleb128 0x6
 433 00e8 00000000 		.4byte	.LASF17
 434 00ec 01       		.byte	0x1
 435 00ed 5401     		.2byte	0x154
 436 00ef 00000000 		.4byte	.LFB1
 437 00f3 18000000 		.4byte	.LFE1-.LFB1
 438 00f7 01       		.uleb128 0x1
 439 00f8 9C       		.byte	0x9c
 440 00f9 35010000 		.4byte	0x135
 441 00fd 07       		.uleb128 0x7
 442 00fe FC000000 		.4byte	.LASF19
 443 0102 01       		.byte	0x1
 444 0103 5401     		.2byte	0x154
 445 0105 35010000 		.4byte	0x135
 446 0109 43000000 		.4byte	.LLST2
 447 010d 07       		.uleb128 0x7
 448 010e 1D000000 		.4byte	.LASF20
 449 0112 01       		.byte	0x1
 450 0113 5401     		.2byte	0x154
 451 0115 77000000 		.4byte	0x77
 452 0119 6F000000 		.4byte	.LLST3
 453 011d 09       		.uleb128 0x9
 454 011e 6900     		.ascii	"i\000"
 455 0120 01       		.byte	0x1
 456 0121 5601     		.2byte	0x156
 457 0123 77000000 		.4byte	0x77
 458 0127 9B000000 		.4byte	.LLST4
 459 012b 0A       		.uleb128 0xa
 460 012c 10000000 		.4byte	.LVL9
 461 0130 B0000000 		.4byte	0xb0
 462 0134 00       		.byte	0
 463 0135 0B       		.uleb128 0xb
 464 0136 04       		.byte	0x4
 465 0137 3B010000 		.4byte	0x13b
 466 013b 0C       		.uleb128 0xc
 467 013c 6B000000 		.4byte	0x6b
 468 0140 0D       		.uleb128 0xd
 469 0141 22020000 		.4byte	.LASF25
 470 0145 01       		.byte	0x1
 471 0146 7501     		.2byte	0x175
 472 0148 77000000 		.4byte	0x77
 473 014c 00000000 		.4byte	.LFB2
 474 0150 28000000 		.4byte	.LFE2-.LFB2
 475 0154 01       		.uleb128 0x1
 476 0155 9C       		.byte	0x9c
 477 0156 7B010000 		.4byte	0x17b
 478 015a 08       		.uleb128 0x8
 479 015b 59000000 		.4byte	.LASF22
 480 015f 01       		.byte	0x1
 481 0160 7701     		.2byte	0x177
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 18


 482 0162 77000000 		.4byte	0x77
 483 0166 BA000000 		.4byte	.LLST5
 484 016a 08       		.uleb128 0x8
 485 016b 38010000 		.4byte	.LASF23
 486 016f 01       		.byte	0x1
 487 0170 7901     		.2byte	0x179
 488 0172 77000000 		.4byte	0x77
 489 0176 D8000000 		.4byte	.LLST6
 490 017a 00       		.byte	0
 491 017b 06       		.uleb128 0x6
 492 017c 76000000 		.4byte	.LASF24
 493 0180 01       		.byte	0x1
 494 0181 A101     		.2byte	0x1a1
 495 0183 00000000 		.4byte	.LFB3
 496 0187 58000000 		.4byte	.LFE3-.LFB3
 497 018b 01       		.uleb128 0x1
 498 018c 9C       		.byte	0x9c
 499 018d B4010000 		.4byte	0x1b4
 500 0191 0E       		.uleb128 0xe
 501 0192 08000000 		.4byte	.LVL19
 502 0196 4E020000 		.4byte	0x24e
 503 019a A4010000 		.4byte	0x1a4
 504 019e 0F       		.uleb128 0xf
 505 019f 01       		.uleb128 0x1
 506 01a0 50       		.byte	0x50
 507 01a1 01       		.uleb128 0x1
 508 01a2 3A       		.byte	0x3a
 509 01a3 00       		.byte	0
 510 01a4 10       		.uleb128 0x10
 511 01a5 3A000000 		.4byte	.LVL20
 512 01a9 5F020000 		.4byte	0x25f
 513 01ad 0F       		.uleb128 0xf
 514 01ae 01       		.uleb128 0x1
 515 01af 50       		.byte	0x50
 516 01b0 01       		.uleb128 0x1
 517 01b1 3A       		.byte	0x3a
 518 01b2 00       		.byte	0
 519 01b3 00       		.byte	0
 520 01b4 0D       		.uleb128 0xd
 521 01b5 40020000 		.4byte	.LASF26
 522 01b9 01       		.byte	0x1
 523 01ba C601     		.2byte	0x1c6
 524 01bc 77000000 		.4byte	0x77
 525 01c0 00000000 		.4byte	.LFB4
 526 01c4 10000000 		.4byte	.LFE4-.LFB4
 527 01c8 01       		.uleb128 0x1
 528 01c9 9C       		.byte	0x9c
 529 01ca DD010000 		.4byte	0x1dd
 530 01ce 11       		.uleb128 0x11
 531 01cf 17010000 		.4byte	.LASF27
 532 01d3 01       		.byte	0x1
 533 01d4 C801     		.2byte	0x1c8
 534 01d6 77000000 		.4byte	0x77
 535 01da 01       		.uleb128 0x1
 536 01db 50       		.byte	0x50
 537 01dc 00       		.byte	0
 538 01dd 0D       		.uleb128 0xd
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 19


 539 01de D5000000 		.4byte	.LASF28
 540 01e2 01       		.byte	0x1
 541 01e3 DC01     		.2byte	0x1dc
 542 01e5 77000000 		.4byte	0x77
 543 01e9 00000000 		.4byte	.LFB5
 544 01ed 10000000 		.4byte	.LFE5-.LFB5
 545 01f1 01       		.uleb128 0x1
 546 01f2 9C       		.byte	0x9c
 547 01f3 06020000 		.4byte	0x206
 548 01f7 11       		.uleb128 0x11
 549 01f8 09010000 		.4byte	.LASF29
 550 01fc 01       		.byte	0x1
 551 01fd DE01     		.2byte	0x1de
 552 01ff 77000000 		.4byte	0x77
 553 0203 01       		.uleb128 0x1
 554 0204 50       		.byte	0x50
 555 0205 00       		.byte	0
 556 0206 12       		.uleb128 0x12
 557 0207 2A000000 		.4byte	.LASF30
 558 020b 01       		.byte	0x1
 559 020c 2C       		.byte	0x2c
 560 020d A4000000 		.4byte	0xa4
 561 0211 05       		.uleb128 0x5
 562 0212 03       		.byte	0x3
 563 0213 00000000 		.4byte	serial_txBufferHead
 564 0217 12       		.uleb128 0x12
 565 0218 C1000000 		.4byte	.LASF31
 566 021c 01       		.byte	0x1
 567 021d 2E       		.byte	0x2e
 568 021e A4000000 		.4byte	0xa4
 569 0222 05       		.uleb128 0x5
 570 0223 03       		.byte	0x3
 571 0224 00000000 		.4byte	serial_txBufferTail
 572 0228 13       		.uleb128 0x13
 573 0229 6B000000 		.4byte	0x6b
 574 022d 38020000 		.4byte	0x238
 575 0231 14       		.uleb128 0x14
 576 0232 A9000000 		.4byte	0xa9
 577 0236 31       		.byte	0x31
 578 0237 00       		.byte	0
 579 0238 12       		.uleb128 0x12
 580 0239 01020000 		.4byte	.LASF32
 581 023d 01       		.byte	0x1
 582 023e 37       		.byte	0x37
 583 023f 49020000 		.4byte	0x249
 584 0243 05       		.uleb128 0x5
 585 0244 03       		.byte	0x3
 586 0245 00000000 		.4byte	serial_txBufferInternal
 587 0249 05       		.uleb128 0x5
 588 024a 28020000 		.4byte	0x228
 589 024e 15       		.uleb128 0x15
 590 024f EA010000 		.4byte	.LASF36
 591 0253 03       		.byte	0x3
 592 0254 C5       		.byte	0xc5
 593 0255 5F020000 		.4byte	0x25f
 594 0259 16       		.uleb128 0x16
 595 025a 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 20


 596 025e 00       		.byte	0
 597 025f 17       		.uleb128 0x17
 598 0260 F0000000 		.4byte	.LASF37
 599 0264 03       		.byte	0x3
 600 0265 C3       		.byte	0xc3
 601 0266 16       		.uleb128 0x16
 602 0267 6B000000 		.4byte	0x6b
 603 026b 00       		.byte	0
 604 026c 00       		.byte	0
 605              		.section	.debug_abbrev,"",%progbits
 606              	.Ldebug_abbrev0:
 607 0000 01       		.uleb128 0x1
 608 0001 11       		.uleb128 0x11
 609 0002 01       		.byte	0x1
 610 0003 25       		.uleb128 0x25
 611 0004 0E       		.uleb128 0xe
 612 0005 13       		.uleb128 0x13
 613 0006 0B       		.uleb128 0xb
 614 0007 03       		.uleb128 0x3
 615 0008 0E       		.uleb128 0xe
 616 0009 1B       		.uleb128 0x1b
 617 000a 0E       		.uleb128 0xe
 618 000b 55       		.uleb128 0x55
 619 000c 17       		.uleb128 0x17
 620 000d 11       		.uleb128 0x11
 621 000e 01       		.uleb128 0x1
 622 000f 10       		.uleb128 0x10
 623 0010 17       		.uleb128 0x17
 624 0011 00       		.byte	0
 625 0012 00       		.byte	0
 626 0013 02       		.uleb128 0x2
 627 0014 24       		.uleb128 0x24
 628 0015 00       		.byte	0
 629 0016 0B       		.uleb128 0xb
 630 0017 0B       		.uleb128 0xb
 631 0018 3E       		.uleb128 0x3e
 632 0019 0B       		.uleb128 0xb
 633 001a 03       		.uleb128 0x3
 634 001b 0E       		.uleb128 0xe
 635 001c 00       		.byte	0
 636 001d 00       		.byte	0
 637 001e 03       		.uleb128 0x3
 638 001f 24       		.uleb128 0x24
 639 0020 00       		.byte	0
 640 0021 0B       		.uleb128 0xb
 641 0022 0B       		.uleb128 0xb
 642 0023 3E       		.uleb128 0x3e
 643 0024 0B       		.uleb128 0xb
 644 0025 03       		.uleb128 0x3
 645 0026 08       		.uleb128 0x8
 646 0027 00       		.byte	0
 647 0028 00       		.byte	0
 648 0029 04       		.uleb128 0x4
 649 002a 16       		.uleb128 0x16
 650 002b 00       		.byte	0
 651 002c 03       		.uleb128 0x3
 652 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 21


 653 002e 3A       		.uleb128 0x3a
 654 002f 0B       		.uleb128 0xb
 655 0030 3B       		.uleb128 0x3b
 656 0031 05       		.uleb128 0x5
 657 0032 49       		.uleb128 0x49
 658 0033 13       		.uleb128 0x13
 659 0034 00       		.byte	0
 660 0035 00       		.byte	0
 661 0036 05       		.uleb128 0x5
 662 0037 35       		.uleb128 0x35
 663 0038 00       		.byte	0
 664 0039 49       		.uleb128 0x49
 665 003a 13       		.uleb128 0x13
 666 003b 00       		.byte	0
 667 003c 00       		.byte	0
 668 003d 06       		.uleb128 0x6
 669 003e 2E       		.uleb128 0x2e
 670 003f 01       		.byte	0x1
 671 0040 3F       		.uleb128 0x3f
 672 0041 19       		.uleb128 0x19
 673 0042 03       		.uleb128 0x3
 674 0043 0E       		.uleb128 0xe
 675 0044 3A       		.uleb128 0x3a
 676 0045 0B       		.uleb128 0xb
 677 0046 3B       		.uleb128 0x3b
 678 0047 05       		.uleb128 0x5
 679 0048 27       		.uleb128 0x27
 680 0049 19       		.uleb128 0x19
 681 004a 11       		.uleb128 0x11
 682 004b 01       		.uleb128 0x1
 683 004c 12       		.uleb128 0x12
 684 004d 06       		.uleb128 0x6
 685 004e 40       		.uleb128 0x40
 686 004f 18       		.uleb128 0x18
 687 0050 9742     		.uleb128 0x2117
 688 0052 19       		.uleb128 0x19
 689 0053 01       		.uleb128 0x1
 690 0054 13       		.uleb128 0x13
 691 0055 00       		.byte	0
 692 0056 00       		.byte	0
 693 0057 07       		.uleb128 0x7
 694 0058 05       		.uleb128 0x5
 695 0059 00       		.byte	0
 696 005a 03       		.uleb128 0x3
 697 005b 0E       		.uleb128 0xe
 698 005c 3A       		.uleb128 0x3a
 699 005d 0B       		.uleb128 0xb
 700 005e 3B       		.uleb128 0x3b
 701 005f 05       		.uleb128 0x5
 702 0060 49       		.uleb128 0x49
 703 0061 13       		.uleb128 0x13
 704 0062 02       		.uleb128 0x2
 705 0063 17       		.uleb128 0x17
 706 0064 00       		.byte	0
 707 0065 00       		.byte	0
 708 0066 08       		.uleb128 0x8
 709 0067 34       		.uleb128 0x34
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 22


 710 0068 00       		.byte	0
 711 0069 03       		.uleb128 0x3
 712 006a 0E       		.uleb128 0xe
 713 006b 3A       		.uleb128 0x3a
 714 006c 0B       		.uleb128 0xb
 715 006d 3B       		.uleb128 0x3b
 716 006e 05       		.uleb128 0x5
 717 006f 49       		.uleb128 0x49
 718 0070 13       		.uleb128 0x13
 719 0071 02       		.uleb128 0x2
 720 0072 17       		.uleb128 0x17
 721 0073 00       		.byte	0
 722 0074 00       		.byte	0
 723 0075 09       		.uleb128 0x9
 724 0076 34       		.uleb128 0x34
 725 0077 00       		.byte	0
 726 0078 03       		.uleb128 0x3
 727 0079 08       		.uleb128 0x8
 728 007a 3A       		.uleb128 0x3a
 729 007b 0B       		.uleb128 0xb
 730 007c 3B       		.uleb128 0x3b
 731 007d 05       		.uleb128 0x5
 732 007e 49       		.uleb128 0x49
 733 007f 13       		.uleb128 0x13
 734 0080 02       		.uleb128 0x2
 735 0081 17       		.uleb128 0x17
 736 0082 00       		.byte	0
 737 0083 00       		.byte	0
 738 0084 0A       		.uleb128 0xa
 739 0085 898201   		.uleb128 0x4109
 740 0088 00       		.byte	0
 741 0089 11       		.uleb128 0x11
 742 008a 01       		.uleb128 0x1
 743 008b 31       		.uleb128 0x31
 744 008c 13       		.uleb128 0x13
 745 008d 00       		.byte	0
 746 008e 00       		.byte	0
 747 008f 0B       		.uleb128 0xb
 748 0090 0F       		.uleb128 0xf
 749 0091 00       		.byte	0
 750 0092 0B       		.uleb128 0xb
 751 0093 0B       		.uleb128 0xb
 752 0094 49       		.uleb128 0x49
 753 0095 13       		.uleb128 0x13
 754 0096 00       		.byte	0
 755 0097 00       		.byte	0
 756 0098 0C       		.uleb128 0xc
 757 0099 26       		.uleb128 0x26
 758 009a 00       		.byte	0
 759 009b 49       		.uleb128 0x49
 760 009c 13       		.uleb128 0x13
 761 009d 00       		.byte	0
 762 009e 00       		.byte	0
 763 009f 0D       		.uleb128 0xd
 764 00a0 2E       		.uleb128 0x2e
 765 00a1 01       		.byte	0x1
 766 00a2 3F       		.uleb128 0x3f
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 23


 767 00a3 19       		.uleb128 0x19
 768 00a4 03       		.uleb128 0x3
 769 00a5 0E       		.uleb128 0xe
 770 00a6 3A       		.uleb128 0x3a
 771 00a7 0B       		.uleb128 0xb
 772 00a8 3B       		.uleb128 0x3b
 773 00a9 05       		.uleb128 0x5
 774 00aa 27       		.uleb128 0x27
 775 00ab 19       		.uleb128 0x19
 776 00ac 49       		.uleb128 0x49
 777 00ad 13       		.uleb128 0x13
 778 00ae 11       		.uleb128 0x11
 779 00af 01       		.uleb128 0x1
 780 00b0 12       		.uleb128 0x12
 781 00b1 06       		.uleb128 0x6
 782 00b2 40       		.uleb128 0x40
 783 00b3 18       		.uleb128 0x18
 784 00b4 9742     		.uleb128 0x2117
 785 00b6 19       		.uleb128 0x19
 786 00b7 01       		.uleb128 0x1
 787 00b8 13       		.uleb128 0x13
 788 00b9 00       		.byte	0
 789 00ba 00       		.byte	0
 790 00bb 0E       		.uleb128 0xe
 791 00bc 898201   		.uleb128 0x4109
 792 00bf 01       		.byte	0x1
 793 00c0 11       		.uleb128 0x11
 794 00c1 01       		.uleb128 0x1
 795 00c2 31       		.uleb128 0x31
 796 00c3 13       		.uleb128 0x13
 797 00c4 01       		.uleb128 0x1
 798 00c5 13       		.uleb128 0x13
 799 00c6 00       		.byte	0
 800 00c7 00       		.byte	0
 801 00c8 0F       		.uleb128 0xf
 802 00c9 8A8201   		.uleb128 0x410a
 803 00cc 00       		.byte	0
 804 00cd 02       		.uleb128 0x2
 805 00ce 18       		.uleb128 0x18
 806 00cf 9142     		.uleb128 0x2111
 807 00d1 18       		.uleb128 0x18
 808 00d2 00       		.byte	0
 809 00d3 00       		.byte	0
 810 00d4 10       		.uleb128 0x10
 811 00d5 898201   		.uleb128 0x4109
 812 00d8 01       		.byte	0x1
 813 00d9 11       		.uleb128 0x11
 814 00da 01       		.uleb128 0x1
 815 00db 31       		.uleb128 0x31
 816 00dc 13       		.uleb128 0x13
 817 00dd 00       		.byte	0
 818 00de 00       		.byte	0
 819 00df 11       		.uleb128 0x11
 820 00e0 34       		.uleb128 0x34
 821 00e1 00       		.byte	0
 822 00e2 03       		.uleb128 0x3
 823 00e3 0E       		.uleb128 0xe
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 24


 824 00e4 3A       		.uleb128 0x3a
 825 00e5 0B       		.uleb128 0xb
 826 00e6 3B       		.uleb128 0x3b
 827 00e7 05       		.uleb128 0x5
 828 00e8 49       		.uleb128 0x49
 829 00e9 13       		.uleb128 0x13
 830 00ea 02       		.uleb128 0x2
 831 00eb 18       		.uleb128 0x18
 832 00ec 00       		.byte	0
 833 00ed 00       		.byte	0
 834 00ee 12       		.uleb128 0x12
 835 00ef 34       		.uleb128 0x34
 836 00f0 00       		.byte	0
 837 00f1 03       		.uleb128 0x3
 838 00f2 0E       		.uleb128 0xe
 839 00f3 3A       		.uleb128 0x3a
 840 00f4 0B       		.uleb128 0xb
 841 00f5 3B       		.uleb128 0x3b
 842 00f6 0B       		.uleb128 0xb
 843 00f7 49       		.uleb128 0x49
 844 00f8 13       		.uleb128 0x13
 845 00f9 3F       		.uleb128 0x3f
 846 00fa 19       		.uleb128 0x19
 847 00fb 02       		.uleb128 0x2
 848 00fc 18       		.uleb128 0x18
 849 00fd 00       		.byte	0
 850 00fe 00       		.byte	0
 851 00ff 13       		.uleb128 0x13
 852 0100 01       		.uleb128 0x1
 853 0101 01       		.byte	0x1
 854 0102 49       		.uleb128 0x49
 855 0103 13       		.uleb128 0x13
 856 0104 01       		.uleb128 0x1
 857 0105 13       		.uleb128 0x13
 858 0106 00       		.byte	0
 859 0107 00       		.byte	0
 860 0108 14       		.uleb128 0x14
 861 0109 21       		.uleb128 0x21
 862 010a 00       		.byte	0
 863 010b 49       		.uleb128 0x49
 864 010c 13       		.uleb128 0x13
 865 010d 2F       		.uleb128 0x2f
 866 010e 0B       		.uleb128 0xb
 867 010f 00       		.byte	0
 868 0110 00       		.byte	0
 869 0111 15       		.uleb128 0x15
 870 0112 2E       		.uleb128 0x2e
 871 0113 01       		.byte	0x1
 872 0114 3F       		.uleb128 0x3f
 873 0115 19       		.uleb128 0x19
 874 0116 03       		.uleb128 0x3
 875 0117 0E       		.uleb128 0xe
 876 0118 3A       		.uleb128 0x3a
 877 0119 0B       		.uleb128 0xb
 878 011a 3B       		.uleb128 0x3b
 879 011b 0B       		.uleb128 0xb
 880 011c 27       		.uleb128 0x27
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 25


 881 011d 19       		.uleb128 0x19
 882 011e 3C       		.uleb128 0x3c
 883 011f 19       		.uleb128 0x19
 884 0120 01       		.uleb128 0x1
 885 0121 13       		.uleb128 0x13
 886 0122 00       		.byte	0
 887 0123 00       		.byte	0
 888 0124 16       		.uleb128 0x16
 889 0125 05       		.uleb128 0x5
 890 0126 00       		.byte	0
 891 0127 49       		.uleb128 0x49
 892 0128 13       		.uleb128 0x13
 893 0129 00       		.byte	0
 894 012a 00       		.byte	0
 895 012b 17       		.uleb128 0x17
 896 012c 2E       		.uleb128 0x2e
 897 012d 01       		.byte	0x1
 898 012e 3F       		.uleb128 0x3f
 899 012f 19       		.uleb128 0x19
 900 0130 03       		.uleb128 0x3
 901 0131 0E       		.uleb128 0xe
 902 0132 3A       		.uleb128 0x3a
 903 0133 0B       		.uleb128 0xb
 904 0134 3B       		.uleb128 0x3b
 905 0135 0B       		.uleb128 0xb
 906 0136 27       		.uleb128 0x27
 907 0137 19       		.uleb128 0x19
 908 0138 3C       		.uleb128 0x3c
 909 0139 19       		.uleb128 0x19
 910 013a 00       		.byte	0
 911 013b 00       		.byte	0
 912 013c 00       		.byte	0
 913              		.section	.debug_loc,"",%progbits
 914              	.Ldebug_loc0:
 915              	.LLST0:
 916 0000 00000000 		.4byte	.LVL0
 917 0004 3A000000 		.4byte	.LVL3
 918 0008 0100     		.2byte	0x1
 919 000a 50       		.byte	0x50
 920 000b 3A000000 		.4byte	.LVL3
 921 000f 70000000 		.4byte	.LFE0
 922 0013 0400     		.2byte	0x4
 923 0015 F3       		.byte	0xf3
 924 0016 01       		.uleb128 0x1
 925 0017 50       		.byte	0x50
 926 0018 9F       		.byte	0x9f
 927 0019 00000000 		.4byte	0
 928 001d 00000000 		.4byte	0
 929              	.LLST1:
 930 0021 24000000 		.4byte	.LVL1
 931 0025 44000000 		.4byte	.LVL4
 932 0029 0100     		.2byte	0x1
 933 002b 52       		.byte	0x52
 934 002c 44000000 		.4byte	.LVL4
 935 0030 52000000 		.4byte	.LVL5
 936 0034 0500     		.2byte	0x5
 937 0036 03       		.byte	0x3
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 26


 938 0037 00000000 		.4byte	serial_txBufferHead
 939 003b 00000000 		.4byte	0
 940 003f 00000000 		.4byte	0
 941              	.LLST2:
 942 0043 00000000 		.4byte	.LVL6
 943 0047 0A000000 		.4byte	.LVL8
 944 004b 0100     		.2byte	0x1
 945 004d 50       		.byte	0x50
 946 004e 0A000000 		.4byte	.LVL8
 947 0052 16000000 		.4byte	.LVL13
 948 0056 0100     		.2byte	0x1
 949 0058 56       		.byte	0x56
 950 0059 16000000 		.4byte	.LVL13
 951 005d 18000000 		.4byte	.LFE1
 952 0061 0400     		.2byte	0x4
 953 0063 F3       		.byte	0xf3
 954 0064 01       		.uleb128 0x1
 955 0065 50       		.byte	0x50
 956 0066 9F       		.byte	0x9f
 957 0067 00000000 		.4byte	0
 958 006b 00000000 		.4byte	0
 959              	.LLST3:
 960 006f 00000000 		.4byte	.LVL6
 961 0073 0A000000 		.4byte	.LVL8
 962 0077 0100     		.2byte	0x1
 963 0079 51       		.byte	0x51
 964 007a 0A000000 		.4byte	.LVL8
 965 007e 16000000 		.4byte	.LVL12
 966 0082 0100     		.2byte	0x1
 967 0084 55       		.byte	0x55
 968 0085 16000000 		.4byte	.LVL12
 969 0089 18000000 		.4byte	.LFE1
 970 008d 0400     		.2byte	0x4
 971 008f F3       		.byte	0xf3
 972 0090 01       		.uleb128 0x1
 973 0091 51       		.byte	0x51
 974 0092 9F       		.byte	0x9f
 975 0093 00000000 		.4byte	0
 976 0097 00000000 		.4byte	0
 977              	.LLST4:
 978 009b 06000000 		.4byte	.LVL7
 979 009f 0A000000 		.4byte	.LVL8
 980 00a3 0200     		.2byte	0x2
 981 00a5 30       		.byte	0x30
 982 00a6 9F       		.byte	0x9f
 983 00a7 0A000000 		.4byte	.LVL8
 984 00ab 16000000 		.4byte	.LVL11
 985 00af 0100     		.2byte	0x1
 986 00b1 54       		.byte	0x54
 987 00b2 00000000 		.4byte	0
 988 00b6 00000000 		.4byte	0
 989              	.LLST5:
 990 00ba 12000000 		.4byte	.LVL15
 991 00be 14000000 		.4byte	.LVL16
 992 00c2 0100     		.2byte	0x1
 993 00c4 50       		.byte	0x50
 994 00c5 1C000000 		.4byte	.LVL18
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 27


 995 00c9 28000000 		.4byte	.LFE2
 996 00cd 0100     		.2byte	0x1
 997 00cf 50       		.byte	0x50
 998 00d0 00000000 		.4byte	0
 999 00d4 00000000 		.4byte	0
 1000              	.LLST6:
 1001 00d8 04000000 		.4byte	.LVL14
 1002 00dc 12000000 		.4byte	.LVL15
 1003 00e0 0100     		.2byte	0x1
 1004 00e2 50       		.byte	0x50
 1005 00e3 14000000 		.4byte	.LVL16
 1006 00e7 1A000000 		.4byte	.LVL17
 1007 00eb 0100     		.2byte	0x1
 1008 00ed 50       		.byte	0x50
 1009 00ee 00000000 		.4byte	0
 1010 00f2 00000000 		.4byte	0
 1011              		.section	.debug_aranges,"",%progbits
 1012 0000 44000000 		.4byte	0x44
 1013 0004 0200     		.2byte	0x2
 1014 0006 00000000 		.4byte	.Ldebug_info0
 1015 000a 04       		.byte	0x4
 1016 000b 00       		.byte	0
 1017 000c 0000     		.2byte	0
 1018 000e 0000     		.2byte	0
 1019 0010 00000000 		.4byte	.LFB0
 1020 0014 70000000 		.4byte	.LFE0-.LFB0
 1021 0018 00000000 		.4byte	.LFB1
 1022 001c 18000000 		.4byte	.LFE1-.LFB1
 1023 0020 00000000 		.4byte	.LFB2
 1024 0024 28000000 		.4byte	.LFE2-.LFB2
 1025 0028 00000000 		.4byte	.LFB3
 1026 002c 58000000 		.4byte	.LFE3-.LFB3
 1027 0030 00000000 		.4byte	.LFB4
 1028 0034 10000000 		.4byte	.LFE4-.LFB4
 1029 0038 00000000 		.4byte	.LFB5
 1030 003c 10000000 		.4byte	.LFE5-.LFB5
 1031 0040 00000000 		.4byte	0
 1032 0044 00000000 		.4byte	0
 1033              		.section	.debug_ranges,"",%progbits
 1034              	.Ldebug_ranges0:
 1035 0000 00000000 		.4byte	.LFB0
 1036 0004 70000000 		.4byte	.LFE0
 1037 0008 00000000 		.4byte	.LFB1
 1038 000c 18000000 		.4byte	.LFE1
 1039 0010 00000000 		.4byte	.LFB2
 1040 0014 28000000 		.4byte	.LFE2
 1041 0018 00000000 		.4byte	.LFB3
 1042 001c 58000000 		.4byte	.LFE3
 1043 0020 00000000 		.4byte	.LFB4
 1044 0024 10000000 		.4byte	.LFE4
 1045 0028 00000000 		.4byte	.LFB5
 1046 002c 10000000 		.4byte	.LFE5
 1047 0030 00000000 		.4byte	0
 1048 0034 00000000 		.4byte	0
 1049              		.section	.debug_line,"",%progbits
 1050              	.Ldebug_line0:
 1051 0000 02010000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 28


 1051      02005700 
 1051      00000201 
 1051      FB0E0D00 
 1051      01010101 
 1052              	.LASF17:
 1053 0000 73657269 		.ascii	"serial_SpiUartPutArray\000"
 1053      616C5F53 
 1053      70695561 
 1053      72745075 
 1053      74417272 
 1054              	.LASF14:
 1055 0017 72656733 		.ascii	"reg32\000"
 1055      3200
 1056              	.LASF20:
 1057 001d 636F756E 		.ascii	"count\000"
 1057      7400
 1058              	.LASF18:
 1059 0023 74784461 		.ascii	"txData\000"
 1059      746100
 1060              	.LASF30:
 1061 002a 73657269 		.ascii	"serial_txBufferHead\000"
 1061      616C5F74 
 1061      78427566 
 1061      66657248 
 1061      65616400 
 1062              	.LASF8:
 1063 003e 756E7369 		.ascii	"unsigned int\000"
 1063      676E6564 
 1063      20696E74 
 1063      00
 1064              	.LASF21:
 1065 004b 6C6F6348 		.ascii	"locHead\000"
 1065      65616400 
 1066              	.LASF11:
 1067 0053 666C6F61 		.ascii	"float\000"
 1067      7400
 1068              	.LASF22:
 1069 0059 73697A65 		.ascii	"size\000"
 1069      00
 1070              	.LASF5:
 1071 005e 6C6F6E67 		.ascii	"long unsigned int\000"
 1071      20756E73 
 1071      69676E65 
 1071      6420696E 
 1071      7400
 1072              	.LASF9:
 1073 0070 75696E74 		.ascii	"uint8\000"
 1073      3800
 1074              	.LASF24:
 1075 0076 73657269 		.ascii	"serial_SpiUartClearTxBuffer\000"
 1075      616C5F53 
 1075      70695561 
 1075      7274436C 
 1075      65617254 
 1076              	.LASF16:
 1077 0092 73657269 		.ascii	"serial_SpiUartWriteTxData\000"
 1077      616C5F53 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 29


 1077      70695561 
 1077      72745772 
 1077      69746554 
 1078              	.LASF1:
 1079 00ac 756E7369 		.ascii	"unsigned char\000"
 1079      676E6564 
 1079      20636861 
 1079      7200
 1080              	.LASF12:
 1081 00ba 646F7562 		.ascii	"double\000"
 1081      6C6500
 1082              	.LASF31:
 1083 00c1 73657269 		.ascii	"serial_txBufferTail\000"
 1083      616C5F74 
 1083      78427566 
 1083      66657254 
 1083      61696C00 
 1084              	.LASF28:
 1085 00d5 73657269 		.ascii	"serial_SpiUartDisableIntTx\000"
 1085      616C5F53 
 1085      70695561 
 1085      72744469 
 1085      7361626C 
 1086              	.LASF37:
 1087 00f0 4379496E 		.ascii	"CyIntEnable\000"
 1087      74456E61 
 1087      626C6500 
 1088              	.LASF19:
 1089 00fc 77724275 		.ascii	"wrBuf\000"
 1089      6600
 1090              	.LASF10:
 1091 0102 75696E74 		.ascii	"uint32\000"
 1091      333200
 1092              	.LASF29:
 1093 0109 696E7453 		.ascii	"intSourceMask\000"
 1093      6F757263 
 1093      654D6173 
 1093      6B00
 1094              	.LASF27:
 1095 0117 696E7453 		.ascii	"intSource\000"
 1095      6F757263 
 1095      6500
 1096              	.LASF7:
 1097 0121 6C6F6E67 		.ascii	"long long unsigned int\000"
 1097      206C6F6E 
 1097      6720756E 
 1097      7369676E 
 1097      65642069 
 1098              	.LASF23:
 1099 0138 6C6F6354 		.ascii	"locTail\000"
 1099      61696C00 
 1100              	.LASF15:
 1101 0140 73697A65 		.ascii	"sizetype\000"
 1101      74797065 
 1101      00
 1102              	.LASF6:
 1103 0149 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 30


 1103      206C6F6E 
 1103      6720696E 
 1103      7400
 1104              	.LASF13:
 1105 0157 63686172 		.ascii	"char\000"
 1105      00
 1106              	.LASF33:
 1107 015c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1107      4320342E 
 1107      392E3320 
 1107      32303135 
 1107      30333033 
 1108 018f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1108      20726576 
 1108      6973696F 
 1108      6E203232 
 1108      31323230 
 1109 01c2 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1109      66756E63 
 1109      74696F6E 
 1109      2D736563 
 1109      74696F6E 
 1110              	.LASF36:
 1111 01ea 4379496E 		.ascii	"CyIntDisable\000"
 1111      74446973 
 1111      61626C65 
 1111      00
 1112              	.LASF2:
 1113 01f7 73686F72 		.ascii	"short int\000"
 1113      7420696E 
 1113      7400
 1114              	.LASF32:
 1115 0201 73657269 		.ascii	"serial_txBufferInternal\000"
 1115      616C5F74 
 1115      78427566 
 1115      66657249 
 1115      6E746572 
 1116              	.LASF4:
 1117 0219 6C6F6E67 		.ascii	"long int\000"
 1117      20696E74 
 1117      00
 1118              	.LASF25:
 1119 0222 73657269 		.ascii	"serial_SpiUartGetTxBufferSize\000"
 1119      616C5F53 
 1119      70695561 
 1119      72744765 
 1119      74547842 
 1120              	.LASF26:
 1121 0240 73657269 		.ascii	"serial_SpiUartDisableIntRx\000"
 1121      616C5F53 
 1121      70695561 
 1121      72744469 
 1121      7361626C 
 1122              	.LASF35:
 1123 025b 433A5C55 		.ascii	"C:\\Users\\a85495\\Desktop\\PSoC-Quadcopter\\Sensor"
 1123      73657273 
 1123      5C613835 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccztNqvg.s 			page 31


 1123      3439355C 
 1123      4465736B 
 1124 0289 735C5365 		.ascii	"s\\Sensor Test\\Base Station.cydsn\000"
 1124      6E736F72 
 1124      20546573 
 1124      745C4261 
 1124      73652053 
 1125              	.LASF0:
 1126 02aa 7369676E 		.ascii	"signed char\000"
 1126      65642063 
 1126      68617200 
 1127              	.LASF3:
 1128 02b6 73686F72 		.ascii	"short unsigned int\000"
 1128      7420756E 
 1128      7369676E 
 1128      65642069 
 1128      6E7400
 1129              	.LASF34:
 1130 02c9 47656E65 		.ascii	"Generated_Source\\PSoC4\\serial_SPI_UART.c\000"
 1130      72617465 
 1130      645F536F 
 1130      75726365 
 1130      5C50536F 
 1131              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
