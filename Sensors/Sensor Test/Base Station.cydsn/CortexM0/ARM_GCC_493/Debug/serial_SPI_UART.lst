ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"serial_SPI_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.serial_SpiUartReadRxData,"ax",%progbits
  18              		.align	2
  19              		.global	serial_SpiUartReadRxData
  20              		.code	16
  21              		.thumb_func
  22              		.type	serial_SpiUartReadRxData, %function
  23              	serial_SpiUartReadRxData:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\serial_SPI_UART.c"
   1:Generated_Source\PSoC4/serial_SPI_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/serial_SPI_UART.c **** * \file serial_SPI_UART.c
   3:Generated_Source\PSoC4/serial_SPI_UART.c **** * \version 3.20
   4:Generated_Source\PSoC4/serial_SPI_UART.c **** *
   5:Generated_Source\PSoC4/serial_SPI_UART.c **** * \brief
   6:Generated_Source\PSoC4/serial_SPI_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/serial_SPI_UART.c **** *  SPI and UART modes.
   8:Generated_Source\PSoC4/serial_SPI_UART.c **** *
   9:Generated_Source\PSoC4/serial_SPI_UART.c **** * Note:
  10:Generated_Source\PSoC4/serial_SPI_UART.c **** *
  11:Generated_Source\PSoC4/serial_SPI_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/serial_SPI_UART.c **** * \copyright
  13:Generated_Source\PSoC4/serial_SPI_UART.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/serial_SPI_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/serial_SPI_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/serial_SPI_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/serial_SPI_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  19:Generated_Source\PSoC4/serial_SPI_UART.c **** #include "serial_PVT.h"
  20:Generated_Source\PSoC4/serial_SPI_UART.c **** #include "serial_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  22:Generated_Source\PSoC4/serial_SPI_UART.c **** /***************************************
  23:Generated_Source\PSoC4/serial_SPI_UART.c **** *        SPI/UART Private Vars
  24:Generated_Source\PSoC4/serial_SPI_UART.c **** ***************************************/
  25:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  26:Generated_Source\PSoC4/serial_SPI_UART.c **** #if(serial_INTERNAL_RX_SW_BUFFER_CONST)
  27:Generated_Source\PSoC4/serial_SPI_UART.c ****     /* Start index to put data into the software receive buffer.*/
  28:Generated_Source\PSoC4/serial_SPI_UART.c ****     volatile uint32 serial_rxBufferHead;
  29:Generated_Source\PSoC4/serial_SPI_UART.c ****     /* Start index to get data from the software receive buffer.*/
  30:Generated_Source\PSoC4/serial_SPI_UART.c ****     volatile uint32 serial_rxBufferTail;
  31:Generated_Source\PSoC4/serial_SPI_UART.c ****     /**
  32:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \addtogroup group_globals
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 2


  33:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \{
  34:Generated_Source\PSoC4/serial_SPI_UART.c ****     */
  35:Generated_Source\PSoC4/serial_SPI_UART.c ****     /** Sets when internal software receive buffer overflow
  36:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  was occurred.
  37:Generated_Source\PSoC4/serial_SPI_UART.c ****     */
  38:Generated_Source\PSoC4/serial_SPI_UART.c ****     volatile uint8  serial_rxBufferOverflow;
  39:Generated_Source\PSoC4/serial_SPI_UART.c ****     /** \} globals */
  40:Generated_Source\PSoC4/serial_SPI_UART.c **** #endif /* (serial_INTERNAL_RX_SW_BUFFER_CONST) */
  41:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  42:Generated_Source\PSoC4/serial_SPI_UART.c **** #if(serial_INTERNAL_TX_SW_BUFFER_CONST)
  43:Generated_Source\PSoC4/serial_SPI_UART.c ****     /* Start index to put data into the software transmit buffer.*/
  44:Generated_Source\PSoC4/serial_SPI_UART.c ****     volatile uint32 serial_txBufferHead;
  45:Generated_Source\PSoC4/serial_SPI_UART.c ****     /* Start index to get data from the software transmit buffer.*/
  46:Generated_Source\PSoC4/serial_SPI_UART.c ****     volatile uint32 serial_txBufferTail;
  47:Generated_Source\PSoC4/serial_SPI_UART.c **** #endif /* (serial_INTERNAL_TX_SW_BUFFER_CONST) */
  48:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  49:Generated_Source\PSoC4/serial_SPI_UART.c **** #if(serial_INTERNAL_RX_SW_BUFFER)
  50:Generated_Source\PSoC4/serial_SPI_UART.c ****     /* Add one element to the buffer to receive full packet. One byte in receive buffer is always e
  51:Generated_Source\PSoC4/serial_SPI_UART.c ****     volatile uint8 serial_rxBufferInternal[serial_INTERNAL_RX_BUFFER_SIZE];
  52:Generated_Source\PSoC4/serial_SPI_UART.c **** #endif /* (serial_INTERNAL_RX_SW_BUFFER) */
  53:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  54:Generated_Source\PSoC4/serial_SPI_UART.c **** #if(serial_INTERNAL_TX_SW_BUFFER)
  55:Generated_Source\PSoC4/serial_SPI_UART.c ****     volatile uint8 serial_txBufferInternal[serial_TX_BUFFER_SIZE];
  56:Generated_Source\PSoC4/serial_SPI_UART.c **** #endif /* (serial_INTERNAL_TX_SW_BUFFER) */
  57:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  58:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  59:Generated_Source\PSoC4/serial_SPI_UART.c **** #if(serial_RX_DIRECTION)
  60:Generated_Source\PSoC4/serial_SPI_UART.c ****     /*******************************************************************************
  61:Generated_Source\PSoC4/serial_SPI_UART.c ****     * Function Name: serial_SpiUartReadRxData
  62:Generated_Source\PSoC4/serial_SPI_UART.c ****     ****************************************************************************//**
  63:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
  64:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Retrieves the next data element from the receive buffer.
  65:Generated_Source\PSoC4/serial_SPI_UART.c ****     *   - RX software buffer is disabled: Returns data element retrieved from
  66:Generated_Source\PSoC4/serial_SPI_UART.c ****     *     RX FIFO. Undefined data will be returned if the RX FIFO is empty.
  67:Generated_Source\PSoC4/serial_SPI_UART.c ****     *   - RX software buffer is enabled: Returns data element from the software
  68:Generated_Source\PSoC4/serial_SPI_UART.c ****     *     receive buffer. Zero value is returned if the software receive buffer
  69:Generated_Source\PSoC4/serial_SPI_UART.c ****     *     is empty.
  70:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
  71:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \return
  72:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Next data element from the receive buffer. 
  73:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  The amount of data bits to be received depends on RX data bits selection 
  74:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  (the data bit counting starts from LSB of return value).
  75:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
  76:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \globalvars
  77:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_rxBufferHead - the start index to put data into the 
  78:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software receive buffer.
  79:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_rxBufferTail - the start index to get data from the 
  80:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software receive buffer.
  81:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
  82:Generated_Source\PSoC4/serial_SPI_UART.c ****     *******************************************************************************/
  83:Generated_Source\PSoC4/serial_SPI_UART.c ****     uint32 serial_SpiUartReadRxData(void)
  84:Generated_Source\PSoC4/serial_SPI_UART.c ****     {
  26              		.loc 1 84 0
  27              		.cfi_startproc
  28              	.LVL0:
  85:Generated_Source\PSoC4/serial_SPI_UART.c ****         uint32 rxData = 0u;
  86:Generated_Source\PSoC4/serial_SPI_UART.c **** 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 3


  87:Generated_Source\PSoC4/serial_SPI_UART.c ****     #if (serial_INTERNAL_RX_SW_BUFFER_CONST)
  88:Generated_Source\PSoC4/serial_SPI_UART.c ****         uint32 locTail;
  89:Generated_Source\PSoC4/serial_SPI_UART.c ****     #endif /* (serial_INTERNAL_RX_SW_BUFFER_CONST) */
  90:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  91:Generated_Source\PSoC4/serial_SPI_UART.c ****         #if (serial_CHECK_RX_SW_BUFFER)
  92:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
  93:Generated_Source\PSoC4/serial_SPI_UART.c ****             if (serial_rxBufferHead != serial_rxBufferTail)
  94:Generated_Source\PSoC4/serial_SPI_UART.c ****             {
  95:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* There is data in RX software buffer */
  96:Generated_Source\PSoC4/serial_SPI_UART.c **** 
  97:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* Calculate index to read from */
  98:Generated_Source\PSoC4/serial_SPI_UART.c ****                 locTail = (serial_rxBufferTail + 1u);
  99:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 100:Generated_Source\PSoC4/serial_SPI_UART.c ****                 if (serial_INTERNAL_RX_BUFFER_SIZE == locTail)
 101:Generated_Source\PSoC4/serial_SPI_UART.c ****                 {
 102:Generated_Source\PSoC4/serial_SPI_UART.c ****                     locTail = 0u;
 103:Generated_Source\PSoC4/serial_SPI_UART.c ****                 }
 104:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 105:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* Get data from RX software buffer */
 106:Generated_Source\PSoC4/serial_SPI_UART.c ****                 rxData = serial_GetWordFromRxBuffer(locTail);
 107:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 108:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* Change index in the buffer */
 109:Generated_Source\PSoC4/serial_SPI_UART.c ****                 serial_rxBufferTail = locTail;
 110:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 111:Generated_Source\PSoC4/serial_SPI_UART.c ****                 #if (serial_CHECK_UART_RTS_CONTROL_FLOW)
 112:Generated_Source\PSoC4/serial_SPI_UART.c ****                 {
 113:Generated_Source\PSoC4/serial_SPI_UART.c ****                     /* Check if RX Not Empty is disabled in the interrupt */
 114:Generated_Source\PSoC4/serial_SPI_UART.c ****                     if (0u == (serial_INTR_RX_MASK_REG & serial_INTR_RX_NOT_EMPTY))
 115:Generated_Source\PSoC4/serial_SPI_UART.c ****                     {
 116:Generated_Source\PSoC4/serial_SPI_UART.c ****                         /* Enable RX Not Empty interrupt source to continue
 117:Generated_Source\PSoC4/serial_SPI_UART.c ****                         * receiving data into software buffer.
 118:Generated_Source\PSoC4/serial_SPI_UART.c ****                         */
 119:Generated_Source\PSoC4/serial_SPI_UART.c ****                         serial_INTR_RX_MASK_REG |= serial_INTR_RX_NOT_EMPTY;
 120:Generated_Source\PSoC4/serial_SPI_UART.c ****                     }
 121:Generated_Source\PSoC4/serial_SPI_UART.c ****                 }
 122:Generated_Source\PSoC4/serial_SPI_UART.c ****                 #endif
 123:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 124:Generated_Source\PSoC4/serial_SPI_UART.c ****             }
 125:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 126:Generated_Source\PSoC4/serial_SPI_UART.c ****         #else
 127:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 128:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Read data from RX FIFO */
 129:Generated_Source\PSoC4/serial_SPI_UART.c ****             rxData = serial_RX_FIFO_RD_REG;
  29              		.loc 1 129 0
  30 0000 014B     		ldr	r3, .L2
  31 0002 1868     		ldr	r0, [r3]
  32              	.LVL1:
 130:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 131:Generated_Source\PSoC4/serial_SPI_UART.c ****         #endif
 132:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 133:Generated_Source\PSoC4/serial_SPI_UART.c ****         return (rxData);
 134:Generated_Source\PSoC4/serial_SPI_UART.c ****     }
  33              		.loc 1 134 0
  34              		@ sp needed
  35 0004 7047     		bx	lr
  36              	.L3:
  37 0006 C046     		.align	2
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 4


  38              	.L2:
  39 0008 40030740 		.word	1074201408
  40              		.cfi_endproc
  41              	.LFE0:
  42              		.size	serial_SpiUartReadRxData, .-serial_SpiUartReadRxData
  43              		.section	.text.serial_SpiUartGetRxBufferSize,"ax",%progbits
  44              		.align	2
  45              		.global	serial_SpiUartGetRxBufferSize
  46              		.code	16
  47              		.thumb_func
  48              		.type	serial_SpiUartGetRxBufferSize, %function
  49              	serial_SpiUartGetRxBufferSize:
  50              	.LFB1:
 135:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 136:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 137:Generated_Source\PSoC4/serial_SPI_UART.c ****     /*******************************************************************************
 138:Generated_Source\PSoC4/serial_SPI_UART.c ****     * Function Name: serial_SpiUartGetRxBufferSize
 139:Generated_Source\PSoC4/serial_SPI_UART.c ****     ****************************************************************************//**
 140:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 141:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Returns the number of received data elements in the receive buffer.
 142:Generated_Source\PSoC4/serial_SPI_UART.c ****     *   - RX software buffer disabled: returns the number of used entries in
 143:Generated_Source\PSoC4/serial_SPI_UART.c ****     *     RX FIFO.
 144:Generated_Source\PSoC4/serial_SPI_UART.c ****     *   - RX software buffer enabled: returns the number of elements which were
 145:Generated_Source\PSoC4/serial_SPI_UART.c ****     *     placed in the receive buffer. This does not include the hardware RX FIFO.
 146:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 147:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \return
 148:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Number of received data elements.
 149:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 150:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \globalvars
 151:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_rxBufferHead - the start index to put data into the 
 152:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software receive buffer.
 153:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_rxBufferTail - the start index to get data from the 
 154:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software receive buffer.
 155:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 156:Generated_Source\PSoC4/serial_SPI_UART.c ****     *******************************************************************************/
 157:Generated_Source\PSoC4/serial_SPI_UART.c ****     uint32 serial_SpiUartGetRxBufferSize(void)
 158:Generated_Source\PSoC4/serial_SPI_UART.c ****     {
  51              		.loc 1 158 0
  52              		.cfi_startproc
 159:Generated_Source\PSoC4/serial_SPI_UART.c ****         uint32 size;
 160:Generated_Source\PSoC4/serial_SPI_UART.c ****     #if (serial_INTERNAL_RX_SW_BUFFER_CONST)
 161:Generated_Source\PSoC4/serial_SPI_UART.c ****         uint32 locHead;
 162:Generated_Source\PSoC4/serial_SPI_UART.c ****     #endif /* (serial_INTERNAL_RX_SW_BUFFER_CONST) */
 163:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 164:Generated_Source\PSoC4/serial_SPI_UART.c ****         #if (serial_CHECK_RX_SW_BUFFER)
 165:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 166:Generated_Source\PSoC4/serial_SPI_UART.c ****             locHead = serial_rxBufferHead;
 167:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 168:Generated_Source\PSoC4/serial_SPI_UART.c ****             if(locHead >= serial_rxBufferTail)
 169:Generated_Source\PSoC4/serial_SPI_UART.c ****             {
 170:Generated_Source\PSoC4/serial_SPI_UART.c ****                 size = (locHead - serial_rxBufferTail);
 171:Generated_Source\PSoC4/serial_SPI_UART.c ****             }
 172:Generated_Source\PSoC4/serial_SPI_UART.c ****             else
 173:Generated_Source\PSoC4/serial_SPI_UART.c ****             {
 174:Generated_Source\PSoC4/serial_SPI_UART.c ****                 size = (locHead + (serial_INTERNAL_RX_BUFFER_SIZE - serial_rxBufferTail));
 175:Generated_Source\PSoC4/serial_SPI_UART.c ****             }
 176:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 5


 177:Generated_Source\PSoC4/serial_SPI_UART.c ****         #else
 178:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 179:Generated_Source\PSoC4/serial_SPI_UART.c ****             size = serial_GET_RX_FIFO_ENTRIES;
  53              		.loc 1 179 0
  54 0000 024B     		ldr	r3, .L5
  55 0002 1B68     		ldr	r3, [r3]
  56 0004 0F20     		mov	r0, #15
  57 0006 1840     		and	r0, r3
  58              	.LVL2:
 180:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 181:Generated_Source\PSoC4/serial_SPI_UART.c ****         #endif
 182:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 183:Generated_Source\PSoC4/serial_SPI_UART.c ****         return (size);
 184:Generated_Source\PSoC4/serial_SPI_UART.c ****     }
  59              		.loc 1 184 0
  60              		@ sp needed
  61 0008 7047     		bx	lr
  62              	.L6:
  63 000a C046     		.align	2
  64              	.L5:
  65 000c 08030740 		.word	1074201352
  66              		.cfi_endproc
  67              	.LFE1:
  68              		.size	serial_SpiUartGetRxBufferSize, .-serial_SpiUartGetRxBufferSize
  69              		.section	.text.serial_SpiUartClearRxBuffer,"ax",%progbits
  70              		.align	2
  71              		.global	serial_SpiUartClearRxBuffer
  72              		.code	16
  73              		.thumb_func
  74              		.type	serial_SpiUartClearRxBuffer, %function
  75              	serial_SpiUartClearRxBuffer:
  76              	.LFB2:
 185:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 186:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 187:Generated_Source\PSoC4/serial_SPI_UART.c ****     /*******************************************************************************
 188:Generated_Source\PSoC4/serial_SPI_UART.c ****     * Function Name: serial_SpiUartClearRxBuffer
 189:Generated_Source\PSoC4/serial_SPI_UART.c ****     ****************************************************************************//**
 190:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 191:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Clears the receive buffer and RX FIFO.
 192:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 193:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \globalvars
 194:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_rxBufferHead - the start index to put data into the 
 195:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software receive buffer.
 196:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_rxBufferTail - the start index to get data from the 
 197:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software receive buffer.
 198:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 199:Generated_Source\PSoC4/serial_SPI_UART.c ****     *******************************************************************************/
 200:Generated_Source\PSoC4/serial_SPI_UART.c ****     void serial_SpiUartClearRxBuffer(void)
 201:Generated_Source\PSoC4/serial_SPI_UART.c ****     {
  77              		.loc 1 201 0
  78              		.cfi_startproc
 202:Generated_Source\PSoC4/serial_SPI_UART.c ****         #if (serial_CHECK_RX_SW_BUFFER)
 203:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 204:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Lock from component interruption */
 205:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_DisableInt();
 206:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 207:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Flush RX software buffer */
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 6


 208:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_rxBufferHead = serial_rxBufferTail;
 209:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_rxBufferOverflow = 0u;
 210:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 211:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_CLEAR_RX_FIFO;
 212:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_ClearRxInterruptSource(serial_INTR_RX_ALL);
 213:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 214:Generated_Source\PSoC4/serial_SPI_UART.c ****             #if (serial_CHECK_UART_RTS_CONTROL_FLOW)
 215:Generated_Source\PSoC4/serial_SPI_UART.c ****             {
 216:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* Enable RX Not Empty interrupt source to continue receiving
 217:Generated_Source\PSoC4/serial_SPI_UART.c ****                 * data into software buffer.
 218:Generated_Source\PSoC4/serial_SPI_UART.c ****                 */
 219:Generated_Source\PSoC4/serial_SPI_UART.c ****                 serial_INTR_RX_MASK_REG |= serial_INTR_RX_NOT_EMPTY;
 220:Generated_Source\PSoC4/serial_SPI_UART.c ****             }
 221:Generated_Source\PSoC4/serial_SPI_UART.c ****             #endif
 222:Generated_Source\PSoC4/serial_SPI_UART.c ****             
 223:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Release lock */
 224:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_EnableInt();
 225:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 226:Generated_Source\PSoC4/serial_SPI_UART.c ****         #else
 227:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 228:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_CLEAR_RX_FIFO;
  79              		.loc 1 228 0
  80 0000 054B     		ldr	r3, .L8
  81 0002 1A68     		ldr	r2, [r3]
  82 0004 8021     		mov	r1, #128
  83 0006 4902     		lsl	r1, r1, #9
  84 0008 0A43     		orr	r2, r1
  85 000a 1A60     		str	r2, [r3]
  86 000c 1968     		ldr	r1, [r3]
  87 000e 034A     		ldr	r2, .L8+4
  88 0010 0A40     		and	r2, r1
  89 0012 1A60     		str	r2, [r3]
 229:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 230:Generated_Source\PSoC4/serial_SPI_UART.c ****         #endif
 231:Generated_Source\PSoC4/serial_SPI_UART.c ****     }
  90              		.loc 1 231 0
  91              		@ sp needed
  92 0014 7047     		bx	lr
  93              	.L9:
  94 0016 C046     		.align	2
  95              	.L8:
  96 0018 04030740 		.word	1074201348
  97 001c FFFFFEFF 		.word	-65537
  98              		.cfi_endproc
  99              	.LFE2:
 100              		.size	serial_SpiUartClearRxBuffer, .-serial_SpiUartClearRxBuffer
 101              		.section	.text.serial_SpiUartWriteTxData,"ax",%progbits
 102              		.align	2
 103              		.global	serial_SpiUartWriteTxData
 104              		.code	16
 105              		.thumb_func
 106              		.type	serial_SpiUartWriteTxData, %function
 107              	serial_SpiUartWriteTxData:
 108              	.LFB3:
 232:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 233:Generated_Source\PSoC4/serial_SPI_UART.c **** #endif /* (serial_RX_DIRECTION) */
 234:Generated_Source\PSoC4/serial_SPI_UART.c **** 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 7


 235:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 236:Generated_Source\PSoC4/serial_SPI_UART.c **** #if(serial_TX_DIRECTION)
 237:Generated_Source\PSoC4/serial_SPI_UART.c ****     /*******************************************************************************
 238:Generated_Source\PSoC4/serial_SPI_UART.c ****     * Function Name: serial_SpiUartWriteTxData
 239:Generated_Source\PSoC4/serial_SPI_UART.c ****     ****************************************************************************//**
 240:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 241:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Places a data entry into the transmit buffer to be sent at the next available
 242:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  bus time.
 243:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  This function is blocking and waits until there is space available to put the
 244:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  requested data in the transmit buffer.
 245:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 246:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  \param txDataByte: the data to be transmitted.
 247:Generated_Source\PSoC4/serial_SPI_UART.c ****     *   The amount of data bits to be transmitted depends on TX data bits selection 
 248:Generated_Source\PSoC4/serial_SPI_UART.c ****     *   (the data bit counting starts from LSB of txDataByte).
 249:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 250:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \globalvars
 251:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_txBufferHead - the start index to put data into the 
 252:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software transmit buffer.
 253:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_txBufferTail - start index to get data from the software
 254:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  transmit buffer.
 255:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 256:Generated_Source\PSoC4/serial_SPI_UART.c ****     *******************************************************************************/
 257:Generated_Source\PSoC4/serial_SPI_UART.c ****     void serial_SpiUartWriteTxData(uint32 txData)
 258:Generated_Source\PSoC4/serial_SPI_UART.c ****     {
 109              		.loc 1 258 0
 110              		.cfi_startproc
 111              	.LVL3:
 259:Generated_Source\PSoC4/serial_SPI_UART.c ****     #if (serial_INTERNAL_TX_SW_BUFFER_CONST)
 260:Generated_Source\PSoC4/serial_SPI_UART.c ****         uint32 locHead;
 261:Generated_Source\PSoC4/serial_SPI_UART.c ****     #endif /* (serial_INTERNAL_TX_SW_BUFFER_CONST) */
 262:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 263:Generated_Source\PSoC4/serial_SPI_UART.c ****         #if (serial_CHECK_TX_SW_BUFFER)
 264:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 265:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Put data directly into the TX FIFO */
 266:Generated_Source\PSoC4/serial_SPI_UART.c ****             if ((serial_txBufferHead == serial_txBufferTail) &&
 112              		.loc 1 266 0
 113 0000 144B     		ldr	r3, .L16
 114 0002 1A68     		ldr	r2, [r3]
 115 0004 144B     		ldr	r3, .L16+4
 116 0006 1B68     		ldr	r3, [r3]
 117 0008 9A42     		cmp	r2, r3
 118 000a 08D1     		bne	.L11
 267:Generated_Source\PSoC4/serial_SPI_UART.c ****                 (serial_SPI_UART_FIFO_SIZE != serial_GET_TX_FIFO_ENTRIES))
 119              		.loc 1 267 0 discriminator 1
 120 000c 134B     		ldr	r3, .L16+8
 121 000e 1B68     		ldr	r3, [r3]
 122 0010 0F22     		mov	r2, #15
 123 0012 1340     		and	r3, r2
 266:Generated_Source\PSoC4/serial_SPI_UART.c ****                 (serial_SPI_UART_FIFO_SIZE != serial_GET_TX_FIFO_ENTRIES))
 124              		.loc 1 266 0 discriminator 1
 125 0014 082B     		cmp	r3, #8
 126 0016 02D0     		beq	.L11
 268:Generated_Source\PSoC4/serial_SPI_UART.c ****             {
 269:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* TX software buffer is empty: put data directly in TX FIFO */
 270:Generated_Source\PSoC4/serial_SPI_UART.c ****                 serial_TX_FIFO_WR_REG = txData;
 127              		.loc 1 270 0
 128 0018 114B     		ldr	r3, .L16+12
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 8


 129 001a 1860     		str	r0, [r3]
 130 001c 19E0     		b	.L10
 131              	.L11:
 271:Generated_Source\PSoC4/serial_SPI_UART.c ****             }
 272:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Put data into TX software buffer */
 273:Generated_Source\PSoC4/serial_SPI_UART.c ****             else
 274:Generated_Source\PSoC4/serial_SPI_UART.c ****             {
 275:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* Head index to put data */
 276:Generated_Source\PSoC4/serial_SPI_UART.c ****                 locHead = (serial_txBufferHead + 1u);
 132              		.loc 1 276 0
 133 001e 0D4B     		ldr	r3, .L16
 134 0020 1A68     		ldr	r2, [r3]
 135 0022 0132     		add	r2, r2, #1
 136              	.LVL4:
 277:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 278:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* Adjust TX software buffer index */
 279:Generated_Source\PSoC4/serial_SPI_UART.c ****                 if (serial_TX_BUFFER_SIZE == locHead)
 137              		.loc 1 279 0
 138 0024 322A     		cmp	r2, #50
 139 0026 00D1     		bne	.L14
 280:Generated_Source\PSoC4/serial_SPI_UART.c ****                 {
 281:Generated_Source\PSoC4/serial_SPI_UART.c ****                     locHead = 0u;
 140              		.loc 1 281 0
 141 0028 0022     		mov	r2, #0
 142              	.LVL5:
 143              	.L14:
 282:Generated_Source\PSoC4/serial_SPI_UART.c ****                 }
 283:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 284:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* Wait for space in TX software buffer */
 285:Generated_Source\PSoC4/serial_SPI_UART.c ****                 while (locHead == serial_txBufferTail)
 144              		.loc 1 285 0 discriminator 1
 145 002a 0B4B     		ldr	r3, .L16+4
 146 002c 1B68     		ldr	r3, [r3]
 147 002e 9A42     		cmp	r2, r3
 148 0030 FBD0     		beq	.L14
 286:Generated_Source\PSoC4/serial_SPI_UART.c ****                 {
 287:Generated_Source\PSoC4/serial_SPI_UART.c ****                 }
 288:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 289:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* TX software buffer has at least one room */
 290:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 291:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* Clear old status of INTR_TX_NOT_FULL. It sets at the end of transfer when TX FIF
 292:Generated_Source\PSoC4/serial_SPI_UART.c ****                 serial_ClearTxInterruptSource(serial_INTR_TX_NOT_FULL);
 149              		.loc 1 292 0
 150 0032 0223     		mov	r3, #2
 151 0034 0B49     		ldr	r1, .L16+16
 152 0036 0B60     		str	r3, [r1]
 293:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 294:Generated_Source\PSoC4/serial_SPI_UART.c ****                 serial_PutWordInTxBuffer(locHead, txData);
 153              		.loc 1 294 0
 154 0038 C0B2     		uxtb	r0, r0
 155              	.LVL6:
 156 003a 0B49     		ldr	r1, .L16+20
 157 003c 8854     		strb	r0, [r1, r2]
 295:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 296:Generated_Source\PSoC4/serial_SPI_UART.c ****                 serial_txBufferHead = locHead;
 158              		.loc 1 296 0
 159 003e 0549     		ldr	r1, .L16
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 9


 160 0040 0A60     		str	r2, [r1]
 297:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 298:Generated_Source\PSoC4/serial_SPI_UART.c ****                 /* Check if TX Not Full is disabled in interrupt */
 299:Generated_Source\PSoC4/serial_SPI_UART.c ****                 if (0u == (serial_INTR_TX_MASK_REG & serial_INTR_TX_NOT_FULL))
 161              		.loc 1 299 0
 162 0042 0A4A     		ldr	r2, .L16+24
 163              	.LVL7:
 164 0044 1268     		ldr	r2, [r2]
 165 0046 1342     		tst	r3, r2
 166 0048 03D1     		bne	.L10
 300:Generated_Source\PSoC4/serial_SPI_UART.c ****                 {
 301:Generated_Source\PSoC4/serial_SPI_UART.c ****                     /* Enable TX Not Full interrupt source to transmit from software buffer */
 302:Generated_Source\PSoC4/serial_SPI_UART.c ****                     serial_INTR_TX_MASK_REG |= (uint32) serial_INTR_TX_NOT_FULL;
 167              		.loc 1 302 0
 168 004a 084A     		ldr	r2, .L16+24
 169 004c 1168     		ldr	r1, [r2]
 170 004e 0B43     		orr	r3, r1
 171 0050 1360     		str	r3, [r2]
 172              	.LVL8:
 173              	.L10:
 303:Generated_Source\PSoC4/serial_SPI_UART.c ****                 }
 304:Generated_Source\PSoC4/serial_SPI_UART.c ****             }
 305:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 306:Generated_Source\PSoC4/serial_SPI_UART.c ****         #else
 307:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 308:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Wait until TX FIFO has space to put data element */
 309:Generated_Source\PSoC4/serial_SPI_UART.c ****             while (serial_SPI_UART_FIFO_SIZE == serial_GET_TX_FIFO_ENTRIES)
 310:Generated_Source\PSoC4/serial_SPI_UART.c ****             {
 311:Generated_Source\PSoC4/serial_SPI_UART.c ****             }
 312:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 313:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_TX_FIFO_WR_REG = txData;
 314:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 315:Generated_Source\PSoC4/serial_SPI_UART.c ****         #endif
 316:Generated_Source\PSoC4/serial_SPI_UART.c ****     }
 174              		.loc 1 316 0
 175              		@ sp needed
 176 0052 7047     		bx	lr
 177              	.L17:
 178              		.align	2
 179              	.L16:
 180 0054 00000000 		.word	serial_txBufferHead
 181 0058 00000000 		.word	serial_txBufferTail
 182 005c 08020740 		.word	1074201096
 183 0060 40020740 		.word	1074201152
 184 0064 800F0740 		.word	1074204544
 185 0068 00000000 		.word	serial_txBufferInternal
 186 006c 880F0740 		.word	1074204552
 187              		.cfi_endproc
 188              	.LFE3:
 189              		.size	serial_SpiUartWriteTxData, .-serial_SpiUartWriteTxData
 190              		.section	.text.serial_SpiUartPutArray,"ax",%progbits
 191              		.align	2
 192              		.global	serial_SpiUartPutArray
 193              		.code	16
 194              		.thumb_func
 195              		.type	serial_SpiUartPutArray, %function
 196              	serial_SpiUartPutArray:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 10


 197              	.LFB4:
 317:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 318:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 319:Generated_Source\PSoC4/serial_SPI_UART.c ****     /*******************************************************************************
 320:Generated_Source\PSoC4/serial_SPI_UART.c ****     * Function Name: serial_SpiUartPutArray
 321:Generated_Source\PSoC4/serial_SPI_UART.c ****     ****************************************************************************//**
 322:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 323:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Places an array of data into the transmit buffer to be sent.
 324:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  This function is blocking and waits until there is a space available to put
 325:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  all the requested data in the transmit buffer. The array size can be greater
 326:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  than transmit buffer size.
 327:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 328:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \param wrBuf: pointer to an array of data to be placed in transmit buffer. 
 329:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  The width of the data to be transmitted depends on TX data width selection 
 330:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  (the data bit counting starts from LSB for each array element).
 331:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \param count: number of data elements to be placed in the transmit buffer.
 332:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 333:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \globalvars
 334:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_txBufferHead - the start index to put data into the 
 335:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software transmit buffer.
 336:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_txBufferTail - start index to get data from the software
 337:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  transmit buffer.
 338:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 339:Generated_Source\PSoC4/serial_SPI_UART.c ****     *******************************************************************************/
 340:Generated_Source\PSoC4/serial_SPI_UART.c ****     void serial_SpiUartPutArray(const uint8 wrBuf[], uint32 count)
 341:Generated_Source\PSoC4/serial_SPI_UART.c ****     {
 198              		.loc 1 341 0
 199              		.cfi_startproc
 200              	.LVL9:
 201 0000 70B5     		push	{r4, r5, r6, lr}
 202              		.cfi_def_cfa_offset 16
 203              		.cfi_offset 4, -16
 204              		.cfi_offset 5, -12
 205              		.cfi_offset 6, -8
 206              		.cfi_offset 14, -4
 207 0002 061C     		mov	r6, r0
 208 0004 0D1C     		mov	r5, r1
 209              	.LVL10:
 342:Generated_Source\PSoC4/serial_SPI_UART.c ****         uint32 i;
 343:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 344:Generated_Source\PSoC4/serial_SPI_UART.c ****         for (i=0u; i < count; i++)
 210              		.loc 1 344 0
 211 0006 0024     		mov	r4, #0
 212 0008 03E0     		b	.L19
 213              	.LVL11:
 214              	.L20:
 345:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 346:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_SpiUartWriteTxData((uint32) wrBuf[i]);
 215              		.loc 1 346 0 discriminator 3
 216 000a 305D     		ldrb	r0, [r6, r4]
 217 000c FFF7FEFF 		bl	serial_SpiUartWriteTxData
 218              	.LVL12:
 344:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 219              		.loc 1 344 0 discriminator 3
 220 0010 0134     		add	r4, r4, #1
 221              	.LVL13:
 222              	.L19:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 11


 344:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 223              		.loc 1 344 0 is_stmt 0 discriminator 1
 224 0012 AC42     		cmp	r4, r5
 225 0014 F9D3     		bcc	.L20
 347:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 348:Generated_Source\PSoC4/serial_SPI_UART.c ****     }
 226              		.loc 1 348 0 is_stmt 1
 227              		@ sp needed
 228              	.LVL14:
 229              	.LVL15:
 230              	.LVL16:
 231 0016 70BD     		pop	{r4, r5, r6, pc}
 232              		.cfi_endproc
 233              	.LFE4:
 234              		.size	serial_SpiUartPutArray, .-serial_SpiUartPutArray
 235              		.section	.text.serial_SpiUartGetTxBufferSize,"ax",%progbits
 236              		.align	2
 237              		.global	serial_SpiUartGetTxBufferSize
 238              		.code	16
 239              		.thumb_func
 240              		.type	serial_SpiUartGetTxBufferSize, %function
 241              	serial_SpiUartGetTxBufferSize:
 242              	.LFB5:
 349:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 350:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 351:Generated_Source\PSoC4/serial_SPI_UART.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/serial_SPI_UART.c ****     * Function Name: serial_SpiUartGetTxBufferSize
 353:Generated_Source\PSoC4/serial_SPI_UART.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 355:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Returns the number of elements currently in the transmit buffer.
 356:Generated_Source\PSoC4/serial_SPI_UART.c ****     *   - TX software buffer is disabled: returns the number of used entries in
 357:Generated_Source\PSoC4/serial_SPI_UART.c ****     *     TX FIFO.
 358:Generated_Source\PSoC4/serial_SPI_UART.c ****     *   - TX software buffer is enabled: returns the number of elements currently
 359:Generated_Source\PSoC4/serial_SPI_UART.c ****     *     used in the transmit buffer. This number does not include used entries in
 360:Generated_Source\PSoC4/serial_SPI_UART.c ****     *     the TX FIFO. The transmit buffer size is zero until the TX FIFO is
 361:Generated_Source\PSoC4/serial_SPI_UART.c ****     *     not full.
 362:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 363:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \return
 364:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Number of data elements ready to transmit.
 365:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 366:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \globalvars
 367:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_txBufferHead - the start index to put data into the 
 368:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software transmit buffer.
 369:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_txBufferTail - start index to get data from the software
 370:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  transmit buffer.
 371:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 372:Generated_Source\PSoC4/serial_SPI_UART.c ****     *******************************************************************************/
 373:Generated_Source\PSoC4/serial_SPI_UART.c ****     uint32 serial_SpiUartGetTxBufferSize(void)
 374:Generated_Source\PSoC4/serial_SPI_UART.c ****     {
 243              		.loc 1 374 0
 244              		.cfi_startproc
 375:Generated_Source\PSoC4/serial_SPI_UART.c ****         uint32 size;
 376:Generated_Source\PSoC4/serial_SPI_UART.c ****     #if (serial_INTERNAL_TX_SW_BUFFER_CONST)
 377:Generated_Source\PSoC4/serial_SPI_UART.c ****         uint32 locTail;
 378:Generated_Source\PSoC4/serial_SPI_UART.c ****     #endif /* (serial_INTERNAL_TX_SW_BUFFER_CONST) */
 379:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 380:Generated_Source\PSoC4/serial_SPI_UART.c ****         #if (serial_CHECK_TX_SW_BUFFER)
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 12


 381:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 382:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Get current Tail index */
 383:Generated_Source\PSoC4/serial_SPI_UART.c ****             locTail = serial_txBufferTail;
 245              		.loc 1 383 0
 246 0000 074B     		ldr	r3, .L24
 247 0002 1868     		ldr	r0, [r3]
 248              	.LVL17:
 384:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 385:Generated_Source\PSoC4/serial_SPI_UART.c ****             if (serial_txBufferHead >= locTail)
 249              		.loc 1 385 0
 250 0004 074B     		ldr	r3, .L24+4
 251 0006 1B68     		ldr	r3, [r3]
 252 0008 8342     		cmp	r3, r0
 253 000a 03D3     		bcc	.L22
 386:Generated_Source\PSoC4/serial_SPI_UART.c ****             {
 387:Generated_Source\PSoC4/serial_SPI_UART.c ****                 size = (serial_txBufferHead - locTail);
 254              		.loc 1 387 0
 255 000c 054B     		ldr	r3, .L24+4
 256 000e 1B68     		ldr	r3, [r3]
 257 0010 181A     		sub	r0, r3, r0
 258              	.LVL18:
 259 0012 03E0     		b	.L23
 260              	.LVL19:
 261              	.L22:
 388:Generated_Source\PSoC4/serial_SPI_UART.c ****             }
 389:Generated_Source\PSoC4/serial_SPI_UART.c ****             else
 390:Generated_Source\PSoC4/serial_SPI_UART.c ****             {
 391:Generated_Source\PSoC4/serial_SPI_UART.c ****                 size = (serial_txBufferHead + (serial_TX_BUFFER_SIZE - locTail));
 262              		.loc 1 391 0
 263 0014 034B     		ldr	r3, .L24+4
 264 0016 1B68     		ldr	r3, [r3]
 265 0018 181A     		sub	r0, r3, r0
 266              	.LVL20:
 267 001a 3230     		add	r0, r0, #50
 268              	.LVL21:
 269              	.L23:
 392:Generated_Source\PSoC4/serial_SPI_UART.c ****             }
 393:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 394:Generated_Source\PSoC4/serial_SPI_UART.c ****         #else
 395:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 396:Generated_Source\PSoC4/serial_SPI_UART.c ****             size = serial_GET_TX_FIFO_ENTRIES;
 397:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 398:Generated_Source\PSoC4/serial_SPI_UART.c ****         #endif
 399:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 400:Generated_Source\PSoC4/serial_SPI_UART.c ****         return (size);
 401:Generated_Source\PSoC4/serial_SPI_UART.c ****     }
 270              		.loc 1 401 0
 271              		@ sp needed
 272 001c 7047     		bx	lr
 273              	.L25:
 274 001e C046     		.align	2
 275              	.L24:
 276 0020 00000000 		.word	serial_txBufferTail
 277 0024 00000000 		.word	serial_txBufferHead
 278              		.cfi_endproc
 279              	.LFE5:
 280              		.size	serial_SpiUartGetTxBufferSize, .-serial_SpiUartGetTxBufferSize
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 13


 281              		.section	.text.serial_SpiUartClearTxBuffer,"ax",%progbits
 282              		.align	2
 283              		.global	serial_SpiUartClearTxBuffer
 284              		.code	16
 285              		.thumb_func
 286              		.type	serial_SpiUartClearTxBuffer, %function
 287              	serial_SpiUartClearTxBuffer:
 288              	.LFB6:
 402:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 403:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 404:Generated_Source\PSoC4/serial_SPI_UART.c ****     /*******************************************************************************
 405:Generated_Source\PSoC4/serial_SPI_UART.c ****     * Function Name: serial_SpiUartClearTxBuffer
 406:Generated_Source\PSoC4/serial_SPI_UART.c ****     ****************************************************************************//**
 407:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 408:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  Clears the transmit buffer and TX FIFO.
 409:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 410:Generated_Source\PSoC4/serial_SPI_UART.c ****     * \globalvars
 411:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_txBufferHead - the start index to put data into the 
 412:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  software transmit buffer.
 413:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  serial_txBufferTail - start index to get data from the software
 414:Generated_Source\PSoC4/serial_SPI_UART.c ****     *  transmit buffer.
 415:Generated_Source\PSoC4/serial_SPI_UART.c ****     *
 416:Generated_Source\PSoC4/serial_SPI_UART.c ****     *******************************************************************************/
 417:Generated_Source\PSoC4/serial_SPI_UART.c ****     void serial_SpiUartClearTxBuffer(void)
 418:Generated_Source\PSoC4/serial_SPI_UART.c ****     {
 289              		.loc 1 418 0
 290              		.cfi_startproc
 291 0000 08B5     		push	{r3, lr}
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 3, -8
 294              		.cfi_offset 14, -4
 419:Generated_Source\PSoC4/serial_SPI_UART.c ****         #if (serial_CHECK_TX_SW_BUFFER)
 420:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 421:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Lock from component interruption */
 422:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_DisableInt();
 295              		.loc 1 422 0
 296 0002 0B20     		mov	r0, #11
 297 0004 FFF7FEFF 		bl	CyIntDisable
 298              	.LVL22:
 423:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 424:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Flush TX software buffer */
 425:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_txBufferHead = serial_txBufferTail;
 299              		.loc 1 425 0
 300 0008 0C4B     		ldr	r3, .L27
 301 000a 1A68     		ldr	r2, [r3]
 302 000c 0C4B     		ldr	r3, .L27+4
 303 000e 1A60     		str	r2, [r3]
 426:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 427:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_INTR_TX_MASK_REG &= (uint32) ~serial_INTR_TX_NOT_FULL;
 304              		.loc 1 427 0
 305 0010 0C4A     		ldr	r2, .L27+8
 306 0012 1368     		ldr	r3, [r2]
 307 0014 0221     		mov	r1, #2
 308 0016 8B43     		bic	r3, r1
 309 0018 1360     		str	r3, [r2]
 428:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_CLEAR_TX_FIFO;
 310              		.loc 1 428 0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 14


 311 001a 0B4B     		ldr	r3, .L27+12
 312 001c 1A68     		ldr	r2, [r3]
 313 001e 8021     		mov	r1, #128
 314 0020 4902     		lsl	r1, r1, #9
 315 0022 0A43     		orr	r2, r1
 316 0024 1A60     		str	r2, [r3]
 317 0026 1968     		ldr	r1, [r3]
 318 0028 084A     		ldr	r2, .L27+16
 319 002a 0A40     		and	r2, r1
 320 002c 1A60     		str	r2, [r3]
 429:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_ClearTxInterruptSource(serial_INTR_TX_ALL);
 321              		.loc 1 429 0
 322 002e 084A     		ldr	r2, .L27+20
 323 0030 084B     		ldr	r3, .L27+24
 324 0032 1A60     		str	r2, [r3]
 430:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 431:Generated_Source\PSoC4/serial_SPI_UART.c ****             /* Release lock */
 432:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_EnableInt();
 325              		.loc 1 432 0
 326 0034 0B20     		mov	r0, #11
 327 0036 FFF7FEFF 		bl	CyIntEnable
 328              	.LVL23:
 433:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 434:Generated_Source\PSoC4/serial_SPI_UART.c ****         #else
 435:Generated_Source\PSoC4/serial_SPI_UART.c ****         {
 436:Generated_Source\PSoC4/serial_SPI_UART.c ****             serial_CLEAR_TX_FIFO;
 437:Generated_Source\PSoC4/serial_SPI_UART.c ****         }
 438:Generated_Source\PSoC4/serial_SPI_UART.c ****         #endif
 439:Generated_Source\PSoC4/serial_SPI_UART.c ****     }
 329              		.loc 1 439 0
 330              		@ sp needed
 331 003a 08BD     		pop	{r3, pc}
 332              	.L28:
 333              		.align	2
 334              	.L27:
 335 003c 00000000 		.word	serial_txBufferTail
 336 0040 00000000 		.word	serial_txBufferHead
 337 0044 880F0740 		.word	1074204552
 338 0048 04020740 		.word	1074201092
 339 004c FFFFFEFF 		.word	-65537
 340 0050 F3070000 		.word	2035
 341 0054 800F0740 		.word	1074204544
 342              		.cfi_endproc
 343              	.LFE6:
 344              		.size	serial_SpiUartClearTxBuffer, .-serial_SpiUartClearTxBuffer
 345              		.section	.text.serial_SpiUartDisableIntRx,"ax",%progbits
 346              		.align	2
 347              		.global	serial_SpiUartDisableIntRx
 348              		.code	16
 349              		.thumb_func
 350              		.type	serial_SpiUartDisableIntRx, %function
 351              	serial_SpiUartDisableIntRx:
 352              	.LFB7:
 440:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 441:Generated_Source\PSoC4/serial_SPI_UART.c **** #endif /* (serial_TX_DIRECTION) */
 442:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 443:Generated_Source\PSoC4/serial_SPI_UART.c **** 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 15


 444:Generated_Source\PSoC4/serial_SPI_UART.c **** /*******************************************************************************
 445:Generated_Source\PSoC4/serial_SPI_UART.c **** * Function Name: serial_SpiUartDisableIntRx
 446:Generated_Source\PSoC4/serial_SPI_UART.c **** ****************************************************************************//**
 447:Generated_Source\PSoC4/serial_SPI_UART.c **** *
 448:Generated_Source\PSoC4/serial_SPI_UART.c **** *  Disables the RX interrupt sources.
 449:Generated_Source\PSoC4/serial_SPI_UART.c **** *
 450:Generated_Source\PSoC4/serial_SPI_UART.c **** *  \return
 451:Generated_Source\PSoC4/serial_SPI_UART.c **** *   Returns the RX interrupt sources enabled before the function call.
 452:Generated_Source\PSoC4/serial_SPI_UART.c **** *
 453:Generated_Source\PSoC4/serial_SPI_UART.c **** *******************************************************************************/
 454:Generated_Source\PSoC4/serial_SPI_UART.c **** uint32 serial_SpiUartDisableIntRx(void)
 455:Generated_Source\PSoC4/serial_SPI_UART.c **** {
 353              		.loc 1 455 0
 354              		.cfi_startproc
 456:Generated_Source\PSoC4/serial_SPI_UART.c ****     uint32 intSource;
 457:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 458:Generated_Source\PSoC4/serial_SPI_UART.c ****     intSource = serial_GetRxInterruptMode();
 355              		.loc 1 458 0
 356 0000 024B     		ldr	r3, .L30
 357 0002 1868     		ldr	r0, [r3]
 358              	.LVL24:
 459:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 460:Generated_Source\PSoC4/serial_SPI_UART.c ****     serial_SetRxInterruptMode(serial_NO_INTR_SOURCES);
 359              		.loc 1 460 0
 360 0004 0022     		mov	r2, #0
 361 0006 1A60     		str	r2, [r3]
 461:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 462:Generated_Source\PSoC4/serial_SPI_UART.c ****     return (intSource);
 463:Generated_Source\PSoC4/serial_SPI_UART.c **** }
 362              		.loc 1 463 0
 363              		@ sp needed
 364 0008 7047     		bx	lr
 365              	.L31:
 366 000a C046     		.align	2
 367              	.L30:
 368 000c C80F0740 		.word	1074204616
 369              		.cfi_endproc
 370              	.LFE7:
 371              		.size	serial_SpiUartDisableIntRx, .-serial_SpiUartDisableIntRx
 372              		.section	.text.serial_SpiUartDisableIntTx,"ax",%progbits
 373              		.align	2
 374              		.global	serial_SpiUartDisableIntTx
 375              		.code	16
 376              		.thumb_func
 377              		.type	serial_SpiUartDisableIntTx, %function
 378              	serial_SpiUartDisableIntTx:
 379              	.LFB8:
 464:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 465:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 466:Generated_Source\PSoC4/serial_SPI_UART.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/serial_SPI_UART.c **** * Function Name: serial_SpiUartDisableIntTx
 468:Generated_Source\PSoC4/serial_SPI_UART.c **** ****************************************************************************//**
 469:Generated_Source\PSoC4/serial_SPI_UART.c **** *
 470:Generated_Source\PSoC4/serial_SPI_UART.c **** *  Disables TX interrupt sources.
 471:Generated_Source\PSoC4/serial_SPI_UART.c **** *
 472:Generated_Source\PSoC4/serial_SPI_UART.c **** *  \return
 473:Generated_Source\PSoC4/serial_SPI_UART.c **** *   Returns TX interrupt sources enabled before function call.
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 16


 474:Generated_Source\PSoC4/serial_SPI_UART.c **** *
 475:Generated_Source\PSoC4/serial_SPI_UART.c **** *******************************************************************************/
 476:Generated_Source\PSoC4/serial_SPI_UART.c **** uint32 serial_SpiUartDisableIntTx(void)
 477:Generated_Source\PSoC4/serial_SPI_UART.c **** {
 380              		.loc 1 477 0
 381              		.cfi_startproc
 478:Generated_Source\PSoC4/serial_SPI_UART.c ****     uint32 intSourceMask;
 479:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 480:Generated_Source\PSoC4/serial_SPI_UART.c ****     intSourceMask = serial_GetTxInterruptMode();
 382              		.loc 1 480 0
 383 0000 024B     		ldr	r3, .L33
 384 0002 1868     		ldr	r0, [r3]
 385              	.LVL25:
 481:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 482:Generated_Source\PSoC4/serial_SPI_UART.c ****     serial_SetTxInterruptMode(serial_NO_INTR_SOURCES);
 386              		.loc 1 482 0
 387 0004 0022     		mov	r2, #0
 388 0006 1A60     		str	r2, [r3]
 483:Generated_Source\PSoC4/serial_SPI_UART.c **** 
 484:Generated_Source\PSoC4/serial_SPI_UART.c ****     return (intSourceMask);
 485:Generated_Source\PSoC4/serial_SPI_UART.c **** }
 389              		.loc 1 485 0
 390              		@ sp needed
 391 0008 7047     		bx	lr
 392              	.L34:
 393 000a C046     		.align	2
 394              	.L33:
 395 000c 880F0740 		.word	1074204552
 396              		.cfi_endproc
 397              	.LFE8:
 398              		.size	serial_SpiUartDisableIntTx, .-serial_SpiUartDisableIntTx
 399              		.comm	serial_txBufferInternal,50,4
 400              		.comm	serial_txBufferTail,4,4
 401              		.comm	serial_txBufferHead,4,4
 402              		.text
 403              	.Letext0:
 404              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 405              		.file 3 "Generated_Source\\PSoC4/CyLib.h"
 406              		.section	.debug_info,"",%progbits
 407              	.Ldebug_info0:
 408 0000 CA020000 		.4byte	0x2ca
 409 0004 0400     		.2byte	0x4
 410 0006 00000000 		.4byte	.Ldebug_abbrev0
 411 000a 04       		.byte	0x4
 412 000b 01       		.uleb128 0x1
 413 000c A7010000 		.4byte	.LASF36
 414 0010 01       		.byte	0x1
 415 0011 23030000 		.4byte	.LASF37
 416 0015 B5020000 		.4byte	.LASF38
 417 0019 00000000 		.4byte	.Ldebug_ranges0+0
 418 001d 00000000 		.4byte	0
 419 0021 00000000 		.4byte	.Ldebug_line0
 420 0025 02       		.uleb128 0x2
 421 0026 01       		.byte	0x1
 422 0027 06       		.byte	0x6
 423 0028 04030000 		.4byte	.LASF0
 424 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 17


 425 002d 01       		.byte	0x1
 426 002e 08       		.byte	0x8
 427 002f D1000000 		.4byte	.LASF1
 428 0033 02       		.uleb128 0x2
 429 0034 02       		.byte	0x2
 430 0035 05       		.byte	0x5
 431 0036 42020000 		.4byte	.LASF2
 432 003a 02       		.uleb128 0x2
 433 003b 02       		.byte	0x2
 434 003c 07       		.byte	0x7
 435 003d 10030000 		.4byte	.LASF3
 436 0041 02       		.uleb128 0x2
 437 0042 04       		.byte	0x4
 438 0043 05       		.byte	0x5
 439 0044 6E020000 		.4byte	.LASF4
 440 0048 02       		.uleb128 0x2
 441 0049 04       		.byte	0x4
 442 004a 07       		.byte	0x7
 443 004b 7C000000 		.4byte	.LASF5
 444 004f 02       		.uleb128 0x2
 445 0050 08       		.byte	0x8
 446 0051 05       		.byte	0x5
 447 0052 7D010000 		.4byte	.LASF6
 448 0056 02       		.uleb128 0x2
 449 0057 08       		.byte	0x8
 450 0058 07       		.byte	0x7
 451 0059 55010000 		.4byte	.LASF7
 452 005d 03       		.uleb128 0x3
 453 005e 04       		.byte	0x4
 454 005f 05       		.byte	0x5
 455 0060 696E7400 		.ascii	"int\000"
 456 0064 02       		.uleb128 0x2
 457 0065 04       		.byte	0x4
 458 0066 07       		.byte	0x7
 459 0067 5C000000 		.4byte	.LASF8
 460 006b 04       		.uleb128 0x4
 461 006c 8E000000 		.4byte	.LASF9
 462 0070 02       		.byte	0x2
 463 0071 B901     		.2byte	0x1b9
 464 0073 2C000000 		.4byte	0x2c
 465 0077 04       		.uleb128 0x4
 466 0078 25010000 		.4byte	.LASF10
 467 007c 02       		.byte	0x2
 468 007d BB01     		.2byte	0x1bb
 469 007f 48000000 		.4byte	0x48
 470 0083 02       		.uleb128 0x2
 471 0084 04       		.byte	0x4
 472 0085 04       		.byte	0x4
 473 0086 71000000 		.4byte	.LASF11
 474 008a 02       		.uleb128 0x2
 475 008b 08       		.byte	0x8
 476 008c 04       		.byte	0x4
 477 008d DF000000 		.4byte	.LASF12
 478 0091 02       		.uleb128 0x2
 479 0092 01       		.byte	0x1
 480 0093 08       		.byte	0x8
 481 0094 77020000 		.4byte	.LASF13
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 18


 482 0098 04       		.uleb128 0x4
 483 0099 17000000 		.4byte	.LASF14
 484 009d 02       		.byte	0x2
 485 009e 6502     		.2byte	0x265
 486 00a0 A4000000 		.4byte	0xa4
 487 00a4 05       		.uleb128 0x5
 488 00a5 77000000 		.4byte	0x77
 489 00a9 02       		.uleb128 0x2
 490 00aa 04       		.byte	0x4
 491 00ab 07       		.byte	0x7
 492 00ac 74010000 		.4byte	.LASF15
 493 00b0 06       		.uleb128 0x6
 494 00b1 FA000000 		.4byte	.LASF16
 495 00b5 01       		.byte	0x1
 496 00b6 53       		.byte	0x53
 497 00b7 77000000 		.4byte	0x77
 498 00bb 00000000 		.4byte	.LFB0
 499 00bf 0C000000 		.4byte	.LFE0-.LFB0
 500 00c3 01       		.uleb128 0x1
 501 00c4 9C       		.byte	0x9c
 502 00c5 D9000000 		.4byte	0xd9
 503 00c9 07       		.uleb128 0x7
 504 00ca B0000000 		.4byte	.LASF18
 505 00ce 01       		.byte	0x1
 506 00cf 55       		.byte	0x55
 507 00d0 77000000 		.4byte	0x77
 508 00d4 00000000 		.4byte	.LLST0
 509 00d8 00       		.byte	0
 510 00d9 06       		.uleb128 0x6
 511 00da 1D000000 		.4byte	.LASF17
 512 00de 01       		.byte	0x1
 513 00df 9D       		.byte	0x9d
 514 00e0 77000000 		.4byte	0x77
 515 00e4 00000000 		.4byte	.LFB1
 516 00e8 10000000 		.4byte	.LFE1-.LFB1
 517 00ec 01       		.uleb128 0x1
 518 00ed 9C       		.byte	0x9c
 519 00ee 00010000 		.4byte	0x100
 520 00f2 08       		.uleb128 0x8
 521 00f3 77000000 		.4byte	.LASF19
 522 00f7 01       		.byte	0x1
 523 00f8 9F       		.byte	0x9f
 524 00f9 77000000 		.4byte	0x77
 525 00fd 01       		.uleb128 0x1
 526 00fe 50       		.byte	0x50
 527 00ff 00       		.byte	0
 528 0100 09       		.uleb128 0x9
 529 0101 8B010000 		.4byte	.LASF39
 530 0105 01       		.byte	0x1
 531 0106 C8       		.byte	0xc8
 532 0107 00000000 		.4byte	.LFB2
 533 010b 20000000 		.4byte	.LFE2-.LFB2
 534 010f 01       		.uleb128 0x1
 535 0110 9C       		.byte	0x9c
 536 0111 0A       		.uleb128 0xa
 537 0112 B7000000 		.4byte	.LASF21
 538 0116 01       		.byte	0x1
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 19


 539 0117 0101     		.2byte	0x101
 540 0119 00000000 		.4byte	.LFB3
 541 011d 70000000 		.4byte	.LFE3-.LFB3
 542 0121 01       		.uleb128 0x1
 543 0122 9C       		.byte	0x9c
 544 0123 48010000 		.4byte	0x148
 545 0127 0B       		.uleb128 0xb
 546 0128 41000000 		.4byte	.LASF23
 547 012c 01       		.byte	0x1
 548 012d 0101     		.2byte	0x101
 549 012f 77000000 		.4byte	0x77
 550 0133 1F000000 		.4byte	.LLST1
 551 0137 0C       		.uleb128 0xc
 552 0138 69000000 		.4byte	.LASF20
 553 013c 01       		.byte	0x1
 554 013d 0401     		.2byte	0x104
 555 013f 77000000 		.4byte	0x77
 556 0143 40000000 		.4byte	.LLST2
 557 0147 00       		.byte	0
 558 0148 0A       		.uleb128 0xa
 559 0149 00000000 		.4byte	.LASF22
 560 014d 01       		.byte	0x1
 561 014e 5401     		.2byte	0x154
 562 0150 00000000 		.4byte	.LFB4
 563 0154 18000000 		.4byte	.LFE4-.LFB4
 564 0158 01       		.uleb128 0x1
 565 0159 9C       		.byte	0x9c
 566 015a 96010000 		.4byte	0x196
 567 015e 0B       		.uleb128 0xb
 568 015f 1F010000 		.4byte	.LASF24
 569 0163 01       		.byte	0x1
 570 0164 5401     		.2byte	0x154
 571 0166 96010000 		.4byte	0x196
 572 016a 62000000 		.4byte	.LLST3
 573 016e 0B       		.uleb128 0xb
 574 016f 3B000000 		.4byte	.LASF25
 575 0173 01       		.byte	0x1
 576 0174 5401     		.2byte	0x154
 577 0176 77000000 		.4byte	0x77
 578 017a 8E000000 		.4byte	.LLST4
 579 017e 0D       		.uleb128 0xd
 580 017f 6900     		.ascii	"i\000"
 581 0181 01       		.byte	0x1
 582 0182 5601     		.2byte	0x156
 583 0184 77000000 		.4byte	0x77
 584 0188 BA000000 		.4byte	.LLST5
 585 018c 0E       		.uleb128 0xe
 586 018d 10000000 		.4byte	.LVL12
 587 0191 11010000 		.4byte	0x111
 588 0195 00       		.byte	0
 589 0196 0F       		.uleb128 0xf
 590 0197 04       		.byte	0x4
 591 0198 9C010000 		.4byte	0x19c
 592 019c 10       		.uleb128 0x10
 593 019d 6B000000 		.4byte	0x6b
 594 01a1 11       		.uleb128 0x11
 595 01a2 7C020000 		.4byte	.LASF26
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 20


 596 01a6 01       		.byte	0x1
 597 01a7 7501     		.2byte	0x175
 598 01a9 77000000 		.4byte	0x77
 599 01ad 00000000 		.4byte	.LFB5
 600 01b1 28000000 		.4byte	.LFE5-.LFB5
 601 01b5 01       		.uleb128 0x1
 602 01b6 9C       		.byte	0x9c
 603 01b7 DC010000 		.4byte	0x1dc
 604 01bb 0C       		.uleb128 0xc
 605 01bc 77000000 		.4byte	.LASF19
 606 01c0 01       		.byte	0x1
 607 01c1 7701     		.2byte	0x177
 608 01c3 77000000 		.4byte	0x77
 609 01c7 D9000000 		.4byte	.LLST6
 610 01cb 0C       		.uleb128 0xc
 611 01cc 6C010000 		.4byte	.LASF27
 612 01d0 01       		.byte	0x1
 613 01d1 7901     		.2byte	0x179
 614 01d3 77000000 		.4byte	0x77
 615 01d7 F7000000 		.4byte	.LLST7
 616 01db 00       		.byte	0
 617 01dc 0A       		.uleb128 0xa
 618 01dd 94000000 		.4byte	.LASF28
 619 01e1 01       		.byte	0x1
 620 01e2 A101     		.2byte	0x1a1
 621 01e4 00000000 		.4byte	.LFB6
 622 01e8 58000000 		.4byte	.LFE6-.LFB6
 623 01ec 01       		.uleb128 0x1
 624 01ed 9C       		.byte	0x9c
 625 01ee 15020000 		.4byte	0x215
 626 01f2 12       		.uleb128 0x12
 627 01f3 08000000 		.4byte	.LVL22
 628 01f7 AF020000 		.4byte	0x2af
 629 01fb 05020000 		.4byte	0x205
 630 01ff 13       		.uleb128 0x13
 631 0200 01       		.uleb128 0x1
 632 0201 50       		.byte	0x50
 633 0202 01       		.uleb128 0x1
 634 0203 3B       		.byte	0x3b
 635 0204 00       		.byte	0
 636 0205 14       		.uleb128 0x14
 637 0206 3A000000 		.4byte	.LVL23
 638 020a C0020000 		.4byte	0x2c0
 639 020e 13       		.uleb128 0x13
 640 020f 01       		.uleb128 0x1
 641 0210 50       		.byte	0x50
 642 0211 01       		.uleb128 0x1
 643 0212 3B       		.byte	0x3b
 644 0213 00       		.byte	0
 645 0214 00       		.byte	0
 646 0215 11       		.uleb128 0x11
 647 0216 9A020000 		.4byte	.LASF29
 648 021a 01       		.byte	0x1
 649 021b C601     		.2byte	0x1c6
 650 021d 77000000 		.4byte	0x77
 651 0221 00000000 		.4byte	.LFB7
 652 0225 10000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 21


 653 0229 01       		.uleb128 0x1
 654 022a 9C       		.byte	0x9c
 655 022b 3E020000 		.4byte	0x23e
 656 022f 15       		.uleb128 0x15
 657 0230 4C020000 		.4byte	.LASF30
 658 0234 01       		.byte	0x1
 659 0235 C801     		.2byte	0x1c8
 660 0237 77000000 		.4byte	0x77
 661 023b 01       		.uleb128 0x1
 662 023c 50       		.byte	0x50
 663 023d 00       		.byte	0
 664 023e 11       		.uleb128 0x11
 665 023f 3A010000 		.4byte	.LASF31
 666 0243 01       		.byte	0x1
 667 0244 DC01     		.2byte	0x1dc
 668 0246 77000000 		.4byte	0x77
 669 024a 00000000 		.4byte	.LFB8
 670 024e 10000000 		.4byte	.LFE8-.LFB8
 671 0252 01       		.uleb128 0x1
 672 0253 9C       		.byte	0x9c
 673 0254 67020000 		.4byte	0x267
 674 0258 15       		.uleb128 0x15
 675 0259 2C010000 		.4byte	.LASF32
 676 025d 01       		.byte	0x1
 677 025e DE01     		.2byte	0x1de
 678 0260 77000000 		.4byte	0x77
 679 0264 01       		.uleb128 0x1
 680 0265 50       		.byte	0x50
 681 0266 00       		.byte	0
 682 0267 16       		.uleb128 0x16
 683 0268 48000000 		.4byte	.LASF33
 684 026c 01       		.byte	0x1
 685 026d 2C       		.byte	0x2c
 686 026e A4000000 		.4byte	0xa4
 687 0272 05       		.uleb128 0x5
 688 0273 03       		.byte	0x3
 689 0274 00000000 		.4byte	serial_txBufferHead
 690 0278 16       		.uleb128 0x16
 691 0279 E6000000 		.4byte	.LASF34
 692 027d 01       		.byte	0x1
 693 027e 2E       		.byte	0x2e
 694 027f A4000000 		.4byte	0xa4
 695 0283 05       		.uleb128 0x5
 696 0284 03       		.byte	0x3
 697 0285 00000000 		.4byte	serial_txBufferTail
 698 0289 17       		.uleb128 0x17
 699 028a 6B000000 		.4byte	0x6b
 700 028e 99020000 		.4byte	0x299
 701 0292 18       		.uleb128 0x18
 702 0293 A9000000 		.4byte	0xa9
 703 0297 31       		.byte	0x31
 704 0298 00       		.byte	0
 705 0299 16       		.uleb128 0x16
 706 029a 56020000 		.4byte	.LASF35
 707 029e 01       		.byte	0x1
 708 029f 37       		.byte	0x37
 709 02a0 AA020000 		.4byte	0x2aa
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 22


 710 02a4 05       		.uleb128 0x5
 711 02a5 03       		.byte	0x3
 712 02a6 00000000 		.4byte	serial_txBufferInternal
 713 02aa 05       		.uleb128 0x5
 714 02ab 89020000 		.4byte	0x289
 715 02af 19       		.uleb128 0x19
 716 02b0 35020000 		.4byte	.LASF40
 717 02b4 03       		.byte	0x3
 718 02b5 C5       		.byte	0xc5
 719 02b6 C0020000 		.4byte	0x2c0
 720 02ba 1A       		.uleb128 0x1a
 721 02bb 6B000000 		.4byte	0x6b
 722 02bf 00       		.byte	0
 723 02c0 1B       		.uleb128 0x1b
 724 02c1 13010000 		.4byte	.LASF41
 725 02c5 03       		.byte	0x3
 726 02c6 C3       		.byte	0xc3
 727 02c7 1A       		.uleb128 0x1a
 728 02c8 6B000000 		.4byte	0x6b
 729 02cc 00       		.byte	0
 730 02cd 00       		.byte	0
 731              		.section	.debug_abbrev,"",%progbits
 732              	.Ldebug_abbrev0:
 733 0000 01       		.uleb128 0x1
 734 0001 11       		.uleb128 0x11
 735 0002 01       		.byte	0x1
 736 0003 25       		.uleb128 0x25
 737 0004 0E       		.uleb128 0xe
 738 0005 13       		.uleb128 0x13
 739 0006 0B       		.uleb128 0xb
 740 0007 03       		.uleb128 0x3
 741 0008 0E       		.uleb128 0xe
 742 0009 1B       		.uleb128 0x1b
 743 000a 0E       		.uleb128 0xe
 744 000b 55       		.uleb128 0x55
 745 000c 17       		.uleb128 0x17
 746 000d 11       		.uleb128 0x11
 747 000e 01       		.uleb128 0x1
 748 000f 10       		.uleb128 0x10
 749 0010 17       		.uleb128 0x17
 750 0011 00       		.byte	0
 751 0012 00       		.byte	0
 752 0013 02       		.uleb128 0x2
 753 0014 24       		.uleb128 0x24
 754 0015 00       		.byte	0
 755 0016 0B       		.uleb128 0xb
 756 0017 0B       		.uleb128 0xb
 757 0018 3E       		.uleb128 0x3e
 758 0019 0B       		.uleb128 0xb
 759 001a 03       		.uleb128 0x3
 760 001b 0E       		.uleb128 0xe
 761 001c 00       		.byte	0
 762 001d 00       		.byte	0
 763 001e 03       		.uleb128 0x3
 764 001f 24       		.uleb128 0x24
 765 0020 00       		.byte	0
 766 0021 0B       		.uleb128 0xb
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 23


 767 0022 0B       		.uleb128 0xb
 768 0023 3E       		.uleb128 0x3e
 769 0024 0B       		.uleb128 0xb
 770 0025 03       		.uleb128 0x3
 771 0026 08       		.uleb128 0x8
 772 0027 00       		.byte	0
 773 0028 00       		.byte	0
 774 0029 04       		.uleb128 0x4
 775 002a 16       		.uleb128 0x16
 776 002b 00       		.byte	0
 777 002c 03       		.uleb128 0x3
 778 002d 0E       		.uleb128 0xe
 779 002e 3A       		.uleb128 0x3a
 780 002f 0B       		.uleb128 0xb
 781 0030 3B       		.uleb128 0x3b
 782 0031 05       		.uleb128 0x5
 783 0032 49       		.uleb128 0x49
 784 0033 13       		.uleb128 0x13
 785 0034 00       		.byte	0
 786 0035 00       		.byte	0
 787 0036 05       		.uleb128 0x5
 788 0037 35       		.uleb128 0x35
 789 0038 00       		.byte	0
 790 0039 49       		.uleb128 0x49
 791 003a 13       		.uleb128 0x13
 792 003b 00       		.byte	0
 793 003c 00       		.byte	0
 794 003d 06       		.uleb128 0x6
 795 003e 2E       		.uleb128 0x2e
 796 003f 01       		.byte	0x1
 797 0040 3F       		.uleb128 0x3f
 798 0041 19       		.uleb128 0x19
 799 0042 03       		.uleb128 0x3
 800 0043 0E       		.uleb128 0xe
 801 0044 3A       		.uleb128 0x3a
 802 0045 0B       		.uleb128 0xb
 803 0046 3B       		.uleb128 0x3b
 804 0047 0B       		.uleb128 0xb
 805 0048 27       		.uleb128 0x27
 806 0049 19       		.uleb128 0x19
 807 004a 49       		.uleb128 0x49
 808 004b 13       		.uleb128 0x13
 809 004c 11       		.uleb128 0x11
 810 004d 01       		.uleb128 0x1
 811 004e 12       		.uleb128 0x12
 812 004f 06       		.uleb128 0x6
 813 0050 40       		.uleb128 0x40
 814 0051 18       		.uleb128 0x18
 815 0052 9742     		.uleb128 0x2117
 816 0054 19       		.uleb128 0x19
 817 0055 01       		.uleb128 0x1
 818 0056 13       		.uleb128 0x13
 819 0057 00       		.byte	0
 820 0058 00       		.byte	0
 821 0059 07       		.uleb128 0x7
 822 005a 34       		.uleb128 0x34
 823 005b 00       		.byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 24


 824 005c 03       		.uleb128 0x3
 825 005d 0E       		.uleb128 0xe
 826 005e 3A       		.uleb128 0x3a
 827 005f 0B       		.uleb128 0xb
 828 0060 3B       		.uleb128 0x3b
 829 0061 0B       		.uleb128 0xb
 830 0062 49       		.uleb128 0x49
 831 0063 13       		.uleb128 0x13
 832 0064 02       		.uleb128 0x2
 833 0065 17       		.uleb128 0x17
 834 0066 00       		.byte	0
 835 0067 00       		.byte	0
 836 0068 08       		.uleb128 0x8
 837 0069 34       		.uleb128 0x34
 838 006a 00       		.byte	0
 839 006b 03       		.uleb128 0x3
 840 006c 0E       		.uleb128 0xe
 841 006d 3A       		.uleb128 0x3a
 842 006e 0B       		.uleb128 0xb
 843 006f 3B       		.uleb128 0x3b
 844 0070 0B       		.uleb128 0xb
 845 0071 49       		.uleb128 0x49
 846 0072 13       		.uleb128 0x13
 847 0073 02       		.uleb128 0x2
 848 0074 18       		.uleb128 0x18
 849 0075 00       		.byte	0
 850 0076 00       		.byte	0
 851 0077 09       		.uleb128 0x9
 852 0078 2E       		.uleb128 0x2e
 853 0079 00       		.byte	0
 854 007a 3F       		.uleb128 0x3f
 855 007b 19       		.uleb128 0x19
 856 007c 03       		.uleb128 0x3
 857 007d 0E       		.uleb128 0xe
 858 007e 3A       		.uleb128 0x3a
 859 007f 0B       		.uleb128 0xb
 860 0080 3B       		.uleb128 0x3b
 861 0081 0B       		.uleb128 0xb
 862 0082 27       		.uleb128 0x27
 863 0083 19       		.uleb128 0x19
 864 0084 11       		.uleb128 0x11
 865 0085 01       		.uleb128 0x1
 866 0086 12       		.uleb128 0x12
 867 0087 06       		.uleb128 0x6
 868 0088 40       		.uleb128 0x40
 869 0089 18       		.uleb128 0x18
 870 008a 9742     		.uleb128 0x2117
 871 008c 19       		.uleb128 0x19
 872 008d 00       		.byte	0
 873 008e 00       		.byte	0
 874 008f 0A       		.uleb128 0xa
 875 0090 2E       		.uleb128 0x2e
 876 0091 01       		.byte	0x1
 877 0092 3F       		.uleb128 0x3f
 878 0093 19       		.uleb128 0x19
 879 0094 03       		.uleb128 0x3
 880 0095 0E       		.uleb128 0xe
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 25


 881 0096 3A       		.uleb128 0x3a
 882 0097 0B       		.uleb128 0xb
 883 0098 3B       		.uleb128 0x3b
 884 0099 05       		.uleb128 0x5
 885 009a 27       		.uleb128 0x27
 886 009b 19       		.uleb128 0x19
 887 009c 11       		.uleb128 0x11
 888 009d 01       		.uleb128 0x1
 889 009e 12       		.uleb128 0x12
 890 009f 06       		.uleb128 0x6
 891 00a0 40       		.uleb128 0x40
 892 00a1 18       		.uleb128 0x18
 893 00a2 9742     		.uleb128 0x2117
 894 00a4 19       		.uleb128 0x19
 895 00a5 01       		.uleb128 0x1
 896 00a6 13       		.uleb128 0x13
 897 00a7 00       		.byte	0
 898 00a8 00       		.byte	0
 899 00a9 0B       		.uleb128 0xb
 900 00aa 05       		.uleb128 0x5
 901 00ab 00       		.byte	0
 902 00ac 03       		.uleb128 0x3
 903 00ad 0E       		.uleb128 0xe
 904 00ae 3A       		.uleb128 0x3a
 905 00af 0B       		.uleb128 0xb
 906 00b0 3B       		.uleb128 0x3b
 907 00b1 05       		.uleb128 0x5
 908 00b2 49       		.uleb128 0x49
 909 00b3 13       		.uleb128 0x13
 910 00b4 02       		.uleb128 0x2
 911 00b5 17       		.uleb128 0x17
 912 00b6 00       		.byte	0
 913 00b7 00       		.byte	0
 914 00b8 0C       		.uleb128 0xc
 915 00b9 34       		.uleb128 0x34
 916 00ba 00       		.byte	0
 917 00bb 03       		.uleb128 0x3
 918 00bc 0E       		.uleb128 0xe
 919 00bd 3A       		.uleb128 0x3a
 920 00be 0B       		.uleb128 0xb
 921 00bf 3B       		.uleb128 0x3b
 922 00c0 05       		.uleb128 0x5
 923 00c1 49       		.uleb128 0x49
 924 00c2 13       		.uleb128 0x13
 925 00c3 02       		.uleb128 0x2
 926 00c4 17       		.uleb128 0x17
 927 00c5 00       		.byte	0
 928 00c6 00       		.byte	0
 929 00c7 0D       		.uleb128 0xd
 930 00c8 34       		.uleb128 0x34
 931 00c9 00       		.byte	0
 932 00ca 03       		.uleb128 0x3
 933 00cb 08       		.uleb128 0x8
 934 00cc 3A       		.uleb128 0x3a
 935 00cd 0B       		.uleb128 0xb
 936 00ce 3B       		.uleb128 0x3b
 937 00cf 05       		.uleb128 0x5
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 26


 938 00d0 49       		.uleb128 0x49
 939 00d1 13       		.uleb128 0x13
 940 00d2 02       		.uleb128 0x2
 941 00d3 17       		.uleb128 0x17
 942 00d4 00       		.byte	0
 943 00d5 00       		.byte	0
 944 00d6 0E       		.uleb128 0xe
 945 00d7 898201   		.uleb128 0x4109
 946 00da 00       		.byte	0
 947 00db 11       		.uleb128 0x11
 948 00dc 01       		.uleb128 0x1
 949 00dd 31       		.uleb128 0x31
 950 00de 13       		.uleb128 0x13
 951 00df 00       		.byte	0
 952 00e0 00       		.byte	0
 953 00e1 0F       		.uleb128 0xf
 954 00e2 0F       		.uleb128 0xf
 955 00e3 00       		.byte	0
 956 00e4 0B       		.uleb128 0xb
 957 00e5 0B       		.uleb128 0xb
 958 00e6 49       		.uleb128 0x49
 959 00e7 13       		.uleb128 0x13
 960 00e8 00       		.byte	0
 961 00e9 00       		.byte	0
 962 00ea 10       		.uleb128 0x10
 963 00eb 26       		.uleb128 0x26
 964 00ec 00       		.byte	0
 965 00ed 49       		.uleb128 0x49
 966 00ee 13       		.uleb128 0x13
 967 00ef 00       		.byte	0
 968 00f0 00       		.byte	0
 969 00f1 11       		.uleb128 0x11
 970 00f2 2E       		.uleb128 0x2e
 971 00f3 01       		.byte	0x1
 972 00f4 3F       		.uleb128 0x3f
 973 00f5 19       		.uleb128 0x19
 974 00f6 03       		.uleb128 0x3
 975 00f7 0E       		.uleb128 0xe
 976 00f8 3A       		.uleb128 0x3a
 977 00f9 0B       		.uleb128 0xb
 978 00fa 3B       		.uleb128 0x3b
 979 00fb 05       		.uleb128 0x5
 980 00fc 27       		.uleb128 0x27
 981 00fd 19       		.uleb128 0x19
 982 00fe 49       		.uleb128 0x49
 983 00ff 13       		.uleb128 0x13
 984 0100 11       		.uleb128 0x11
 985 0101 01       		.uleb128 0x1
 986 0102 12       		.uleb128 0x12
 987 0103 06       		.uleb128 0x6
 988 0104 40       		.uleb128 0x40
 989 0105 18       		.uleb128 0x18
 990 0106 9742     		.uleb128 0x2117
 991 0108 19       		.uleb128 0x19
 992 0109 01       		.uleb128 0x1
 993 010a 13       		.uleb128 0x13
 994 010b 00       		.byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 27


 995 010c 00       		.byte	0
 996 010d 12       		.uleb128 0x12
 997 010e 898201   		.uleb128 0x4109
 998 0111 01       		.byte	0x1
 999 0112 11       		.uleb128 0x11
 1000 0113 01       		.uleb128 0x1
 1001 0114 31       		.uleb128 0x31
 1002 0115 13       		.uleb128 0x13
 1003 0116 01       		.uleb128 0x1
 1004 0117 13       		.uleb128 0x13
 1005 0118 00       		.byte	0
 1006 0119 00       		.byte	0
 1007 011a 13       		.uleb128 0x13
 1008 011b 8A8201   		.uleb128 0x410a
 1009 011e 00       		.byte	0
 1010 011f 02       		.uleb128 0x2
 1011 0120 18       		.uleb128 0x18
 1012 0121 9142     		.uleb128 0x2111
 1013 0123 18       		.uleb128 0x18
 1014 0124 00       		.byte	0
 1015 0125 00       		.byte	0
 1016 0126 14       		.uleb128 0x14
 1017 0127 898201   		.uleb128 0x4109
 1018 012a 01       		.byte	0x1
 1019 012b 11       		.uleb128 0x11
 1020 012c 01       		.uleb128 0x1
 1021 012d 31       		.uleb128 0x31
 1022 012e 13       		.uleb128 0x13
 1023 012f 00       		.byte	0
 1024 0130 00       		.byte	0
 1025 0131 15       		.uleb128 0x15
 1026 0132 34       		.uleb128 0x34
 1027 0133 00       		.byte	0
 1028 0134 03       		.uleb128 0x3
 1029 0135 0E       		.uleb128 0xe
 1030 0136 3A       		.uleb128 0x3a
 1031 0137 0B       		.uleb128 0xb
 1032 0138 3B       		.uleb128 0x3b
 1033 0139 05       		.uleb128 0x5
 1034 013a 49       		.uleb128 0x49
 1035 013b 13       		.uleb128 0x13
 1036 013c 02       		.uleb128 0x2
 1037 013d 18       		.uleb128 0x18
 1038 013e 00       		.byte	0
 1039 013f 00       		.byte	0
 1040 0140 16       		.uleb128 0x16
 1041 0141 34       		.uleb128 0x34
 1042 0142 00       		.byte	0
 1043 0143 03       		.uleb128 0x3
 1044 0144 0E       		.uleb128 0xe
 1045 0145 3A       		.uleb128 0x3a
 1046 0146 0B       		.uleb128 0xb
 1047 0147 3B       		.uleb128 0x3b
 1048 0148 0B       		.uleb128 0xb
 1049 0149 49       		.uleb128 0x49
 1050 014a 13       		.uleb128 0x13
 1051 014b 3F       		.uleb128 0x3f
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 28


 1052 014c 19       		.uleb128 0x19
 1053 014d 02       		.uleb128 0x2
 1054 014e 18       		.uleb128 0x18
 1055 014f 00       		.byte	0
 1056 0150 00       		.byte	0
 1057 0151 17       		.uleb128 0x17
 1058 0152 01       		.uleb128 0x1
 1059 0153 01       		.byte	0x1
 1060 0154 49       		.uleb128 0x49
 1061 0155 13       		.uleb128 0x13
 1062 0156 01       		.uleb128 0x1
 1063 0157 13       		.uleb128 0x13
 1064 0158 00       		.byte	0
 1065 0159 00       		.byte	0
 1066 015a 18       		.uleb128 0x18
 1067 015b 21       		.uleb128 0x21
 1068 015c 00       		.byte	0
 1069 015d 49       		.uleb128 0x49
 1070 015e 13       		.uleb128 0x13
 1071 015f 2F       		.uleb128 0x2f
 1072 0160 0B       		.uleb128 0xb
 1073 0161 00       		.byte	0
 1074 0162 00       		.byte	0
 1075 0163 19       		.uleb128 0x19
 1076 0164 2E       		.uleb128 0x2e
 1077 0165 01       		.byte	0x1
 1078 0166 3F       		.uleb128 0x3f
 1079 0167 19       		.uleb128 0x19
 1080 0168 03       		.uleb128 0x3
 1081 0169 0E       		.uleb128 0xe
 1082 016a 3A       		.uleb128 0x3a
 1083 016b 0B       		.uleb128 0xb
 1084 016c 3B       		.uleb128 0x3b
 1085 016d 0B       		.uleb128 0xb
 1086 016e 27       		.uleb128 0x27
 1087 016f 19       		.uleb128 0x19
 1088 0170 3C       		.uleb128 0x3c
 1089 0171 19       		.uleb128 0x19
 1090 0172 01       		.uleb128 0x1
 1091 0173 13       		.uleb128 0x13
 1092 0174 00       		.byte	0
 1093 0175 00       		.byte	0
 1094 0176 1A       		.uleb128 0x1a
 1095 0177 05       		.uleb128 0x5
 1096 0178 00       		.byte	0
 1097 0179 49       		.uleb128 0x49
 1098 017a 13       		.uleb128 0x13
 1099 017b 00       		.byte	0
 1100 017c 00       		.byte	0
 1101 017d 1B       		.uleb128 0x1b
 1102 017e 2E       		.uleb128 0x2e
 1103 017f 01       		.byte	0x1
 1104 0180 3F       		.uleb128 0x3f
 1105 0181 19       		.uleb128 0x19
 1106 0182 03       		.uleb128 0x3
 1107 0183 0E       		.uleb128 0xe
 1108 0184 3A       		.uleb128 0x3a
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 29


 1109 0185 0B       		.uleb128 0xb
 1110 0186 3B       		.uleb128 0x3b
 1111 0187 0B       		.uleb128 0xb
 1112 0188 27       		.uleb128 0x27
 1113 0189 19       		.uleb128 0x19
 1114 018a 3C       		.uleb128 0x3c
 1115 018b 19       		.uleb128 0x19
 1116 018c 00       		.byte	0
 1117 018d 00       		.byte	0
 1118 018e 00       		.byte	0
 1119              		.section	.debug_loc,"",%progbits
 1120              	.Ldebug_loc0:
 1121              	.LLST0:
 1122 0000 00000000 		.4byte	.LVL0
 1123 0004 04000000 		.4byte	.LVL1
 1124 0008 0200     		.2byte	0x2
 1125 000a 30       		.byte	0x30
 1126 000b 9F       		.byte	0x9f
 1127 000c 04000000 		.4byte	.LVL1
 1128 0010 0C000000 		.4byte	.LFE0
 1129 0014 0100     		.2byte	0x1
 1130 0016 50       		.byte	0x50
 1131 0017 00000000 		.4byte	0
 1132 001b 00000000 		.4byte	0
 1133              	.LLST1:
 1134 001f 00000000 		.4byte	.LVL3
 1135 0023 3A000000 		.4byte	.LVL6
 1136 0027 0100     		.2byte	0x1
 1137 0029 50       		.byte	0x50
 1138 002a 3A000000 		.4byte	.LVL6
 1139 002e 70000000 		.4byte	.LFE3
 1140 0032 0400     		.2byte	0x4
 1141 0034 F3       		.byte	0xf3
 1142 0035 01       		.uleb128 0x1
 1143 0036 50       		.byte	0x50
 1144 0037 9F       		.byte	0x9f
 1145 0038 00000000 		.4byte	0
 1146 003c 00000000 		.4byte	0
 1147              	.LLST2:
 1148 0040 24000000 		.4byte	.LVL4
 1149 0044 44000000 		.4byte	.LVL7
 1150 0048 0100     		.2byte	0x1
 1151 004a 52       		.byte	0x52
 1152 004b 44000000 		.4byte	.LVL7
 1153 004f 52000000 		.4byte	.LVL8
 1154 0053 0500     		.2byte	0x5
 1155 0055 03       		.byte	0x3
 1156 0056 00000000 		.4byte	serial_txBufferHead
 1157 005a 00000000 		.4byte	0
 1158 005e 00000000 		.4byte	0
 1159              	.LLST3:
 1160 0062 00000000 		.4byte	.LVL9
 1161 0066 0A000000 		.4byte	.LVL11
 1162 006a 0100     		.2byte	0x1
 1163 006c 50       		.byte	0x50
 1164 006d 0A000000 		.4byte	.LVL11
 1165 0071 16000000 		.4byte	.LVL16
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 30


 1166 0075 0100     		.2byte	0x1
 1167 0077 56       		.byte	0x56
 1168 0078 16000000 		.4byte	.LVL16
 1169 007c 18000000 		.4byte	.LFE4
 1170 0080 0400     		.2byte	0x4
 1171 0082 F3       		.byte	0xf3
 1172 0083 01       		.uleb128 0x1
 1173 0084 50       		.byte	0x50
 1174 0085 9F       		.byte	0x9f
 1175 0086 00000000 		.4byte	0
 1176 008a 00000000 		.4byte	0
 1177              	.LLST4:
 1178 008e 00000000 		.4byte	.LVL9
 1179 0092 0A000000 		.4byte	.LVL11
 1180 0096 0100     		.2byte	0x1
 1181 0098 51       		.byte	0x51
 1182 0099 0A000000 		.4byte	.LVL11
 1183 009d 16000000 		.4byte	.LVL15
 1184 00a1 0100     		.2byte	0x1
 1185 00a3 55       		.byte	0x55
 1186 00a4 16000000 		.4byte	.LVL15
 1187 00a8 18000000 		.4byte	.LFE4
 1188 00ac 0400     		.2byte	0x4
 1189 00ae F3       		.byte	0xf3
 1190 00af 01       		.uleb128 0x1
 1191 00b0 51       		.byte	0x51
 1192 00b1 9F       		.byte	0x9f
 1193 00b2 00000000 		.4byte	0
 1194 00b6 00000000 		.4byte	0
 1195              	.LLST5:
 1196 00ba 06000000 		.4byte	.LVL10
 1197 00be 0A000000 		.4byte	.LVL11
 1198 00c2 0200     		.2byte	0x2
 1199 00c4 30       		.byte	0x30
 1200 00c5 9F       		.byte	0x9f
 1201 00c6 0A000000 		.4byte	.LVL11
 1202 00ca 16000000 		.4byte	.LVL14
 1203 00ce 0100     		.2byte	0x1
 1204 00d0 54       		.byte	0x54
 1205 00d1 00000000 		.4byte	0
 1206 00d5 00000000 		.4byte	0
 1207              	.LLST6:
 1208 00d9 12000000 		.4byte	.LVL18
 1209 00dd 14000000 		.4byte	.LVL19
 1210 00e1 0100     		.2byte	0x1
 1211 00e3 50       		.byte	0x50
 1212 00e4 1C000000 		.4byte	.LVL21
 1213 00e8 28000000 		.4byte	.LFE5
 1214 00ec 0100     		.2byte	0x1
 1215 00ee 50       		.byte	0x50
 1216 00ef 00000000 		.4byte	0
 1217 00f3 00000000 		.4byte	0
 1218              	.LLST7:
 1219 00f7 04000000 		.4byte	.LVL17
 1220 00fb 12000000 		.4byte	.LVL18
 1221 00ff 0100     		.2byte	0x1
 1222 0101 50       		.byte	0x50
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 31


 1223 0102 14000000 		.4byte	.LVL19
 1224 0106 1A000000 		.4byte	.LVL20
 1225 010a 0100     		.2byte	0x1
 1226 010c 50       		.byte	0x50
 1227 010d 00000000 		.4byte	0
 1228 0111 00000000 		.4byte	0
 1229              		.section	.debug_aranges,"",%progbits
 1230 0000 5C000000 		.4byte	0x5c
 1231 0004 0200     		.2byte	0x2
 1232 0006 00000000 		.4byte	.Ldebug_info0
 1233 000a 04       		.byte	0x4
 1234 000b 00       		.byte	0
 1235 000c 0000     		.2byte	0
 1236 000e 0000     		.2byte	0
 1237 0010 00000000 		.4byte	.LFB0
 1238 0014 0C000000 		.4byte	.LFE0-.LFB0
 1239 0018 00000000 		.4byte	.LFB1
 1240 001c 10000000 		.4byte	.LFE1-.LFB1
 1241 0020 00000000 		.4byte	.LFB2
 1242 0024 20000000 		.4byte	.LFE2-.LFB2
 1243 0028 00000000 		.4byte	.LFB3
 1244 002c 70000000 		.4byte	.LFE3-.LFB3
 1245 0030 00000000 		.4byte	.LFB4
 1246 0034 18000000 		.4byte	.LFE4-.LFB4
 1247 0038 00000000 		.4byte	.LFB5
 1248 003c 28000000 		.4byte	.LFE5-.LFB5
 1249 0040 00000000 		.4byte	.LFB6
 1250 0044 58000000 		.4byte	.LFE6-.LFB6
 1251 0048 00000000 		.4byte	.LFB7
 1252 004c 10000000 		.4byte	.LFE7-.LFB7
 1253 0050 00000000 		.4byte	.LFB8
 1254 0054 10000000 		.4byte	.LFE8-.LFB8
 1255 0058 00000000 		.4byte	0
 1256 005c 00000000 		.4byte	0
 1257              		.section	.debug_ranges,"",%progbits
 1258              	.Ldebug_ranges0:
 1259 0000 00000000 		.4byte	.LFB0
 1260 0004 0C000000 		.4byte	.LFE0
 1261 0008 00000000 		.4byte	.LFB1
 1262 000c 10000000 		.4byte	.LFE1
 1263 0010 00000000 		.4byte	.LFB2
 1264 0014 20000000 		.4byte	.LFE2
 1265 0018 00000000 		.4byte	.LFB3
 1266 001c 70000000 		.4byte	.LFE3
 1267 0020 00000000 		.4byte	.LFB4
 1268 0024 18000000 		.4byte	.LFE4
 1269 0028 00000000 		.4byte	.LFB5
 1270 002c 28000000 		.4byte	.LFE5
 1271 0030 00000000 		.4byte	.LFB6
 1272 0034 58000000 		.4byte	.LFE6
 1273 0038 00000000 		.4byte	.LFB7
 1274 003c 10000000 		.4byte	.LFE7
 1275 0040 00000000 		.4byte	.LFB8
 1276 0044 10000000 		.4byte	.LFE8
 1277 0048 00000000 		.4byte	0
 1278 004c 00000000 		.4byte	0
 1279              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 32


 1280              	.Ldebug_line0:
 1281 0000 3E010000 		.section	.debug_str,"MS",%progbits,1
 1281      02005700 
 1281      00000201 
 1281      FB0E0D00 
 1281      01010101 
 1282              	.LASF22:
 1283 0000 73657269 		.ascii	"serial_SpiUartPutArray\000"
 1283      616C5F53 
 1283      70695561 
 1283      72745075 
 1283      74417272 
 1284              	.LASF14:
 1285 0017 72656733 		.ascii	"reg32\000"
 1285      3200
 1286              	.LASF17:
 1287 001d 73657269 		.ascii	"serial_SpiUartGetRxBufferSize\000"
 1287      616C5F53 
 1287      70695561 
 1287      72744765 
 1287      74527842 
 1288              	.LASF25:
 1289 003b 636F756E 		.ascii	"count\000"
 1289      7400
 1290              	.LASF23:
 1291 0041 74784461 		.ascii	"txData\000"
 1291      746100
 1292              	.LASF33:
 1293 0048 73657269 		.ascii	"serial_txBufferHead\000"
 1293      616C5F74 
 1293      78427566 
 1293      66657248 
 1293      65616400 
 1294              	.LASF8:
 1295 005c 756E7369 		.ascii	"unsigned int\000"
 1295      676E6564 
 1295      20696E74 
 1295      00
 1296              	.LASF20:
 1297 0069 6C6F6348 		.ascii	"locHead\000"
 1297      65616400 
 1298              	.LASF11:
 1299 0071 666C6F61 		.ascii	"float\000"
 1299      7400
 1300              	.LASF19:
 1301 0077 73697A65 		.ascii	"size\000"
 1301      00
 1302              	.LASF5:
 1303 007c 6C6F6E67 		.ascii	"long unsigned int\000"
 1303      20756E73 
 1303      69676E65 
 1303      6420696E 
 1303      7400
 1304              	.LASF9:
 1305 008e 75696E74 		.ascii	"uint8\000"
 1305      3800
 1306              	.LASF28:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 33


 1307 0094 73657269 		.ascii	"serial_SpiUartClearTxBuffer\000"
 1307      616C5F53 
 1307      70695561 
 1307      7274436C 
 1307      65617254 
 1308              	.LASF18:
 1309 00b0 72784461 		.ascii	"rxData\000"
 1309      746100
 1310              	.LASF21:
 1311 00b7 73657269 		.ascii	"serial_SpiUartWriteTxData\000"
 1311      616C5F53 
 1311      70695561 
 1311      72745772 
 1311      69746554 
 1312              	.LASF1:
 1313 00d1 756E7369 		.ascii	"unsigned char\000"
 1313      676E6564 
 1313      20636861 
 1313      7200
 1314              	.LASF12:
 1315 00df 646F7562 		.ascii	"double\000"
 1315      6C6500
 1316              	.LASF34:
 1317 00e6 73657269 		.ascii	"serial_txBufferTail\000"
 1317      616C5F74 
 1317      78427566 
 1317      66657254 
 1317      61696C00 
 1318              	.LASF16:
 1319 00fa 73657269 		.ascii	"serial_SpiUartReadRxData\000"
 1319      616C5F53 
 1319      70695561 
 1319      72745265 
 1319      61645278 
 1320              	.LASF41:
 1321 0113 4379496E 		.ascii	"CyIntEnable\000"
 1321      74456E61 
 1321      626C6500 
 1322              	.LASF24:
 1323 011f 77724275 		.ascii	"wrBuf\000"
 1323      6600
 1324              	.LASF10:
 1325 0125 75696E74 		.ascii	"uint32\000"
 1325      333200
 1326              	.LASF32:
 1327 012c 696E7453 		.ascii	"intSourceMask\000"
 1327      6F757263 
 1327      654D6173 
 1327      6B00
 1328              	.LASF31:
 1329 013a 73657269 		.ascii	"serial_SpiUartDisableIntTx\000"
 1329      616C5F53 
 1329      70695561 
 1329      72744469 
 1329      7361626C 
 1330              	.LASF7:
 1331 0155 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 34


 1331      206C6F6E 
 1331      6720756E 
 1331      7369676E 
 1331      65642069 
 1332              	.LASF27:
 1333 016c 6C6F6354 		.ascii	"locTail\000"
 1333      61696C00 
 1334              	.LASF15:
 1335 0174 73697A65 		.ascii	"sizetype\000"
 1335      74797065 
 1335      00
 1336              	.LASF6:
 1337 017d 6C6F6E67 		.ascii	"long long int\000"
 1337      206C6F6E 
 1337      6720696E 
 1337      7400
 1338              	.LASF39:
 1339 018b 73657269 		.ascii	"serial_SpiUartClearRxBuffer\000"
 1339      616C5F53 
 1339      70695561 
 1339      7274436C 
 1339      65617252 
 1340              	.LASF36:
 1341 01a7 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1341      4320342E 
 1341      392E3320 
 1341      32303135 
 1341      30333033 
 1342 01da 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1342      20726576 
 1342      6973696F 
 1342      6E203232 
 1342      31323230 
 1343 020d 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1343      66756E63 
 1343      74696F6E 
 1343      2D736563 
 1343      74696F6E 
 1344              	.LASF40:
 1345 0235 4379496E 		.ascii	"CyIntDisable\000"
 1345      74446973 
 1345      61626C65 
 1345      00
 1346              	.LASF2:
 1347 0242 73686F72 		.ascii	"short int\000"
 1347      7420696E 
 1347      7400
 1348              	.LASF30:
 1349 024c 696E7453 		.ascii	"intSource\000"
 1349      6F757263 
 1349      6500
 1350              	.LASF35:
 1351 0256 73657269 		.ascii	"serial_txBufferInternal\000"
 1351      616C5F74 
 1351      78427566 
 1351      66657249 
 1351      6E746572 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccZqmuGs.s 			page 35


 1352              	.LASF4:
 1353 026e 6C6F6E67 		.ascii	"long int\000"
 1353      20696E74 
 1353      00
 1354              	.LASF13:
 1355 0277 63686172 		.ascii	"char\000"
 1355      00
 1356              	.LASF26:
 1357 027c 73657269 		.ascii	"serial_SpiUartGetTxBufferSize\000"
 1357      616C5F53 
 1357      70695561 
 1357      72744765 
 1357      74547842 
 1358              	.LASF29:
 1359 029a 73657269 		.ascii	"serial_SpiUartDisableIntRx\000"
 1359      616C5F53 
 1359      70695561 
 1359      72744469 
 1359      7361626C 
 1360              	.LASF38:
 1361 02b5 433A5C55 		.ascii	"C:\\Users\\a85495\\Desktop\\PSoC-Quadcopter\\Sensor"
 1361      73657273 
 1361      5C613835 
 1361      3439355C 
 1361      4465736B 
 1362 02e3 735C5365 		.ascii	"s\\Sensor Test\\Base Station.cydsn\000"
 1362      6E736F72 
 1362      20546573 
 1362      745C4261 
 1362      73652053 
 1363              	.LASF0:
 1364 0304 7369676E 		.ascii	"signed char\000"
 1364      65642063 
 1364      68617200 
 1365              	.LASF3:
 1366 0310 73686F72 		.ascii	"short unsigned int\000"
 1366      7420756E 
 1366      7369676E 
 1366      65642069 
 1366      6E7400
 1367              	.LASF37:
 1368 0323 47656E65 		.ascii	"Generated_Source\\PSoC4\\serial_SPI_UART.c\000"
 1368      72617465 
 1368      645F536F 
 1368      75726365 
 1368      5C50536F 
 1369              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
