ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_UartInit,"ax",%progbits
  18              		.align	2
  19              		.global	UART_UartInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_UartInit, %function
  23              	UART_UartInit:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\UART_UART.c"
   1:Generated_Source\PSoC4/UART_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_UART.c **** * \file UART_UART.c
   3:Generated_Source\PSoC4/UART_UART.c **** * \version 3.20
   4:Generated_Source\PSoC4/UART_UART.c **** *
   5:Generated_Source\PSoC4/UART_UART.c **** * \brief
   6:Generated_Source\PSoC4/UART_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/UART_UART.c **** *  UART mode.
   8:Generated_Source\PSoC4/UART_UART.c **** *
   9:Generated_Source\PSoC4/UART_UART.c **** * Note:
  10:Generated_Source\PSoC4/UART_UART.c **** *
  11:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/UART_UART.c **** * \copyright
  13:Generated_Source\PSoC4/UART_UART.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_UART.c **** 
  19:Generated_Source\PSoC4/UART_UART.c **** #include "UART_PVT.h"
  20:Generated_Source\PSoC4/UART_UART.c **** #include "UART_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/UART_UART.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/UART_UART.c **** 
  23:Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST && UART_UART_RX_WAKEUP_IRQ)
  24:Generated_Source\PSoC4/UART_UART.c ****     /**
  25:Generated_Source\PSoC4/UART_UART.c ****     * \addtogroup group_globals
  26:Generated_Source\PSoC4/UART_UART.c ****     * \{
  27:Generated_Source\PSoC4/UART_UART.c ****     */
  28:Generated_Source\PSoC4/UART_UART.c ****     /** This global variable determines whether to enable Skip Start
  29:Generated_Source\PSoC4/UART_UART.c ****     * functionality when UART_Sleep() function is called:
  30:Generated_Source\PSoC4/UART_UART.c ****     * 0 – disable, other values – enable. Default value is 1.
  31:Generated_Source\PSoC4/UART_UART.c ****     * It is only available when Enable wakeup from Deep Sleep Mode is enabled.
  32:Generated_Source\PSoC4/UART_UART.c ****     */
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 2


  33:Generated_Source\PSoC4/UART_UART.c ****     uint8 UART_skipStart = 1u;
  34:Generated_Source\PSoC4/UART_UART.c ****     /** \} globals */
  35:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST && UART_UART_RX_WAKEUP_IRQ) */
  36:Generated_Source\PSoC4/UART_UART.c **** 
  37:Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
  38:Generated_Source\PSoC4/UART_UART.c **** 
  39:Generated_Source\PSoC4/UART_UART.c ****     /***************************************
  40:Generated_Source\PSoC4/UART_UART.c ****     *  Configuration Structure Initialization
  41:Generated_Source\PSoC4/UART_UART.c ****     ***************************************/
  42:Generated_Source\PSoC4/UART_UART.c **** 
  43:Generated_Source\PSoC4/UART_UART.c ****     const UART_UART_INIT_STRUCT UART_configUart =
  44:Generated_Source\PSoC4/UART_UART.c ****     {
  45:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_SUB_MODE,
  46:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DIRECTION,
  47:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DATA_BITS_NUM,
  48:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_PARITY_TYPE,
  49:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_STOP_BITS_NUM,
  50:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_OVS_FACTOR,
  51:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_LOW_POWER,
  52:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MEDIAN_FILTER_ENABLE,
  53:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RETRY_ON_NACK,
  54:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_POLARITY,
  55:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_PARITY_ERR,
  56:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_FRAME_ERR,
  57:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_WAKE_ENABLE,
  58:Generated_Source\PSoC4/UART_UART.c ****         0u,
  59:Generated_Source\PSoC4/UART_UART.c ****         NULL,
  60:Generated_Source\PSoC4/UART_UART.c ****         0u,
  61:Generated_Source\PSoC4/UART_UART.c ****         NULL,
  62:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_MODE_ENABLE,
  63:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_ACCEPT_ADDRESS,
  64:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS,
  65:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS_MASK,
  66:Generated_Source\PSoC4/UART_UART.c ****         (uint32) UART_SCB_IRQ_INTERNAL,
  67:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_RX_MASK,
  68:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_TRIGGER_LEVEL,
  69:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_TX_MASK,
  70:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_TRIGGER_LEVEL,
  71:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_BYTE_MODE_ENABLE,
  72:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_ENABLE,
  73:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_POLARITY,
  74:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_POLARITY,
  75:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_FIFO_LEVEL
  76:Generated_Source\PSoC4/UART_UART.c ****     };
  77:Generated_Source\PSoC4/UART_UART.c **** 
  78:Generated_Source\PSoC4/UART_UART.c **** 
  79:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
  80:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
  81:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
  82:Generated_Source\PSoC4/UART_UART.c ****     *
  83:Generated_Source\PSoC4/UART_UART.c ****     *  Configures the UART for UART operation.
  84:Generated_Source\PSoC4/UART_UART.c ****     *
  85:Generated_Source\PSoC4/UART_UART.c ****     *  This function is intended specifically to be used when the UART
  86:Generated_Source\PSoC4/UART_UART.c ****     *  configuration is set to “Unconfigured UART” in the customizer.
  87:Generated_Source\PSoC4/UART_UART.c ****     *  After initializing the UART in UART mode using this function,
  88:Generated_Source\PSoC4/UART_UART.c ****     *  the component can be enabled using the UART_Start() or
  89:Generated_Source\PSoC4/UART_UART.c ****     * UART_Enable() function.
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 3


  90:Generated_Source\PSoC4/UART_UART.c ****     *  This function uses a pointer to a structure that provides the configuration
  91:Generated_Source\PSoC4/UART_UART.c ****     *  settings. This structure contains the same information that would otherwise
  92:Generated_Source\PSoC4/UART_UART.c ****     *  be provided by the customizer settings.
  93:Generated_Source\PSoC4/UART_UART.c ****     *
  94:Generated_Source\PSoC4/UART_UART.c ****     *  \param config: pointer to a structure that contains the following list of
  95:Generated_Source\PSoC4/UART_UART.c ****     *   fields. These fields match the selections available in the customizer.
  96:Generated_Source\PSoC4/UART_UART.c ****     *   Refer to the customizer for further description of the settings.
  97:Generated_Source\PSoC4/UART_UART.c ****     *
  98:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
  99:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(const UART_UART_INIT_STRUCT *config)
 100:Generated_Source\PSoC4/UART_UART.c ****     {
 101:Generated_Source\PSoC4/UART_UART.c ****         uint32 pinsConfig;
 102:Generated_Source\PSoC4/UART_UART.c **** 
 103:Generated_Source\PSoC4/UART_UART.c ****         if (NULL == config)
 104:Generated_Source\PSoC4/UART_UART.c ****         {
 105:Generated_Source\PSoC4/UART_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
 106:Generated_Source\PSoC4/UART_UART.c ****         }
 107:Generated_Source\PSoC4/UART_UART.c ****         else
 108:Generated_Source\PSoC4/UART_UART.c ****         {
 109:Generated_Source\PSoC4/UART_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
 110:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig  = config->direction;
 111:Generated_Source\PSoC4/UART_UART.c **** 
 112:Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 113:Generated_Source\PSoC4/UART_UART.c ****             /* Add RTS and CTS pins to configure */
 114:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (UART_UART_RTS_PIN_ENABLE) : (0u);
 115:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (UART_UART_CTS_PIN_ENABLE) : (0u);
 116:Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 117:Generated_Source\PSoC4/UART_UART.c **** 
 118:Generated_Source\PSoC4/UART_UART.c ****             /* Configure pins */
 119:Generated_Source\PSoC4/UART_UART.c ****             UART_SetPins(UART_SCB_MODE_UART, config->mode, pinsConfig);
 120:Generated_Source\PSoC4/UART_UART.c **** 
 121:Generated_Source\PSoC4/UART_UART.c ****             /* Store internal configuration */
 122:Generated_Source\PSoC4/UART_UART.c ****             UART_scbMode       = (uint8) UART_SCB_MODE_UART;
 123:Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableWake = (uint8) config->enableWake;
 124:Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableIntr = (uint8) config->enableInterrupt;
 125:Generated_Source\PSoC4/UART_UART.c **** 
 126:Generated_Source\PSoC4/UART_UART.c ****             /* Set RX direction internal variables */
 127:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBuffer      =         config->rxBuffer;
 128:Generated_Source\PSoC4/UART_UART.c ****             UART_rxDataBits    = (uint8) config->dataBits;
 129:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferSize  = (uint8) config->rxBufferSize;
 130:Generated_Source\PSoC4/UART_UART.c **** 
 131:Generated_Source\PSoC4/UART_UART.c ****             /* Set TX direction internal variables */
 132:Generated_Source\PSoC4/UART_UART.c ****             UART_txBuffer      =         config->txBuffer;
 133:Generated_Source\PSoC4/UART_UART.c ****             UART_txDataBits    = (uint8) config->dataBits;
 134:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferSize  = (uint8) config->txBufferSize;
 135:Generated_Source\PSoC4/UART_UART.c **** 
 136:Generated_Source\PSoC4/UART_UART.c ****             /* Configure UART interface */
 137:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_MODE_IRDA == config->mode)
 138:Generated_Source\PSoC4/UART_UART.c ****             {
 139:Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: IrDA */
 140:Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 141:Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 142:Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_CTRL_OVS_IRDA_OVS16));
 143:Generated_Source\PSoC4/UART_UART.c ****             }
 144:Generated_Source\PSoC4/UART_UART.c ****             else
 145:Generated_Source\PSoC4/UART_UART.c ****             {
 146:Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: UART and SmartCard */
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 4


 147:Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = UART_GET_CTRL_OVS(config->oversample);
 148:Generated_Source\PSoC4/UART_UART.c ****             }
 149:Generated_Source\PSoC4/UART_UART.c **** 
 150:Generated_Source\PSoC4/UART_UART.c ****             UART_CTRL_REG     |= UART_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 151:Generated_Source\PSoC4/UART_UART.c ****                                              UART_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAddr)
 152:Generated_Source\PSoC4/UART_UART.c ****                                              UART_CTRL_UART;
 153:Generated_Source\PSoC4/UART_UART.c **** 
 154:Generated_Source\PSoC4/UART_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 155:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_CTRL_REG = UART_GET_UART_CTRL_MODE(config->mode);
 156:Generated_Source\PSoC4/UART_UART.c **** 
 157:Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 158:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_RX_CTRL_REG = UART_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 159:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)   
 160:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)     
 161:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPari
 162:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFrame
 163:Generated_Source\PSoC4/UART_UART.c **** 
 164:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 165:Generated_Source\PSoC4/UART_UART.c ****             {
 166:Generated_Source\PSoC4/UART_UART.c ****                UART_UART_RX_CTRL_REG |= UART_GET_UART_RX_CTRL_PARITY(config->parity) |
 167:Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_RX_CTRL_PARITY_ENABLED;
 168:Generated_Source\PSoC4/UART_UART.c ****             }
 169:Generated_Source\PSoC4/UART_UART.c **** 
 170:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_CTRL_REG      = UART_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 171:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_CTRL_MEDIAN(config->enableMedianFilter)
 172:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_RX_CTRL_ENABLED(config->direction);
 173:Generated_Source\PSoC4/UART_UART.c **** 
 174:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_FIFO_CTRL_REG = UART_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel);
 175:Generated_Source\PSoC4/UART_UART.c **** 
 176:Generated_Source\PSoC4/UART_UART.c ****             /* Configure MP address */
 177:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_MATCH_REG     = UART_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 178:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_MATCH_MASK(config->multiprocAddrMask);
 179:Generated_Source\PSoC4/UART_UART.c **** 
 180:Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 181:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_TX_CTRL_REG = UART_GET_UART_TX_CTRL_MODE(config->stopBits) |
 182:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_RETRY_NACK(config->enableRetr
 183:Generated_Source\PSoC4/UART_UART.c **** 
 184:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 185:Generated_Source\PSoC4/UART_UART.c ****             {
 186:Generated_Source\PSoC4/UART_UART.c ****                UART_UART_TX_CTRL_REG |= UART_GET_UART_TX_CTRL_PARITY(config->parity) |
 187:Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_TX_CTRL_PARITY_ENABLED;
 188:Generated_Source\PSoC4/UART_UART.c ****             }
 189:Generated_Source\PSoC4/UART_UART.c **** 
 190:Generated_Source\PSoC4/UART_UART.c ****             UART_TX_CTRL_REG      = UART_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 191:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_ENABLED(config->direction);
 192:Generated_Source\PSoC4/UART_UART.c **** 
 193:Generated_Source\PSoC4/UART_UART.c ****             UART_TX_FIFO_CTRL_REG = UART_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel);
 194:Generated_Source\PSoC4/UART_UART.c **** 
 195:Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 196:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = UART_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 197:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPolari
 198:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPolari
 199:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFifo
 200:Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 201:Generated_Source\PSoC4/UART_UART.c **** 
 202:Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 203:Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_ISR_NUMBER);
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 5


 204:Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
 205:Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 206:Generated_Source\PSoC4/UART_UART.c **** 
 207:Generated_Source\PSoC4/UART_UART.c ****             /* Configure WAKE interrupt */
 208:Generated_Source\PSoC4/UART_UART.c ****         #if(UART_UART_RX_WAKEUP_IRQ)
 209:Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 210:Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 211:Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 212:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 213:Generated_Source\PSoC4/UART_UART.c **** 
 214:Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt sources */
 215:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_I2C_EC_MASK_REG = UART_NO_INTR_SOURCES;
 216:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SPI_EC_MASK_REG = UART_NO_INTR_SOURCES;
 217:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SLAVE_MASK_REG  = UART_NO_INTR_SOURCES;
 218:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_MASTER_MASK_REG = UART_NO_INTR_SOURCES;
 219:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_RX_MASK_REG     = config->rxInterruptMask;
 220:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_TX_MASK_REG     = config->txInterruptMask;
 221:Generated_Source\PSoC4/UART_UART.c ****         
 222:Generated_Source\PSoC4/UART_UART.c ****             /* Configure TX interrupt sources to restore. */
 223:Generated_Source\PSoC4/UART_UART.c ****             UART_IntrTxMask = LO16(UART_INTR_TX_MASK_REG);
 224:Generated_Source\PSoC4/UART_UART.c **** 
 225:Generated_Source\PSoC4/UART_UART.c ****             /* Clear RX buffer indexes */
 226:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferHead     = 0u;
 227:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferTail     = 0u;
 228:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferOverflow = 0u;
 229:Generated_Source\PSoC4/UART_UART.c **** 
 230:Generated_Source\PSoC4/UART_UART.c ****             /* Clear TX buffer indexes */
 231:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferHead = 0u;
 232:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferTail = 0u;
 233:Generated_Source\PSoC4/UART_UART.c ****         }
 234:Generated_Source\PSoC4/UART_UART.c ****     }
 235:Generated_Source\PSoC4/UART_UART.c **** 
 236:Generated_Source\PSoC4/UART_UART.c **** #else
 237:Generated_Source\PSoC4/UART_UART.c **** 
 238:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 239:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
 240:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 241:Generated_Source\PSoC4/UART_UART.c ****     *
 242:Generated_Source\PSoC4/UART_UART.c ****     *  Configures the SCB for the UART operation.
 243:Generated_Source\PSoC4/UART_UART.c ****     *
 244:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 245:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(void)
 246:Generated_Source\PSoC4/UART_UART.c ****     {
  26              		.loc 1 246 0
  27              		.cfi_startproc
 247:Generated_Source\PSoC4/UART_UART.c ****         /* Configure UART interface */
 248:Generated_Source\PSoC4/UART_UART.c ****         UART_CTRL_REG = UART_UART_DEFAULT_CTRL;
  28              		.loc 1 248 0
  29 0000 134A     		ldr	r2, .L2
  30 0002 144B     		ldr	r3, .L2+4
  31 0004 1A60     		str	r2, [r3]
 249:Generated_Source\PSoC4/UART_UART.c **** 
 250:Generated_Source\PSoC4/UART_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 251:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_CTRL_REG = UART_UART_DEFAULT_UART_CTRL;
  32              		.loc 1 251 0
  33 0006 0023     		mov	r3, #0
  34 0008 134A     		ldr	r2, .L2+8
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 6


  35 000a 1360     		str	r3, [r2]
 252:Generated_Source\PSoC4/UART_UART.c **** 
 253:Generated_Source\PSoC4/UART_UART.c ****         /* Configure RX direction */
 254:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_CTRL_REG = UART_UART_DEFAULT_UART_RX_CTRL;
  36              		.loc 1 254 0
  37 000c 0122     		mov	r2, #1
  38 000e 1349     		ldr	r1, .L2+12
  39 0010 0A60     		str	r2, [r1]
 255:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_CTRL_REG      = UART_UART_DEFAULT_RX_CTRL;
  40              		.loc 1 255 0
  41 0012 0721     		mov	r1, #7
  42 0014 1248     		ldr	r0, .L2+16
  43 0016 0160     		str	r1, [r0]
 256:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_FIFO_CTRL_REG = UART_UART_DEFAULT_RX_FIFO_CTRL;
  44              		.loc 1 256 0
  45 0018 1248     		ldr	r0, .L2+20
  46 001a 0160     		str	r1, [r0]
 257:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_MATCH_REG     = UART_UART_DEFAULT_RX_MATCH_REG;
  47              		.loc 1 257 0
  48 001c 1249     		ldr	r1, .L2+24
  49 001e 0B60     		str	r3, [r1]
 258:Generated_Source\PSoC4/UART_UART.c **** 
 259:Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX direction */
 260:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_CTRL_REG = UART_UART_DEFAULT_UART_TX_CTRL;
  50              		.loc 1 260 0
  51 0020 1249     		ldr	r1, .L2+28
  52 0022 0A60     		str	r2, [r1]
 261:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG      = UART_UART_DEFAULT_TX_CTRL;
  53              		.loc 1 261 0
  54 0024 1249     		ldr	r1, .L2+32
  55 0026 134A     		ldr	r2, .L2+36
  56 0028 1160     		str	r1, [r2]
 262:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_FIFO_CTRL_REG = UART_UART_DEFAULT_TX_FIFO_CTRL;
  57              		.loc 1 262 0
  58 002a 134A     		ldr	r2, .L2+40
  59 002c 1360     		str	r3, [r2]
 263:Generated_Source\PSoC4/UART_UART.c **** 
 264:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 265:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_FLOW_CTRL_REG = UART_UART_DEFAULT_FLOW_CTRL;
 266:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 267:Generated_Source\PSoC4/UART_UART.c **** 
 268:Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 269:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_SCB_IRQ_INTERNAL)
 270:Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_ISR_NUMBER);
 271:Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
 272:Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 273:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_SCB_IRQ_INTERNAL) */
 274:Generated_Source\PSoC4/UART_UART.c **** 
 275:Generated_Source\PSoC4/UART_UART.c ****         /* Configure WAKE interrupt */
 276:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_UART_RX_WAKEUP_IRQ)
 277:Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 278:Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 279:Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 280:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 281:Generated_Source\PSoC4/UART_UART.c **** 
 282:Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt sources */
 283:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_I2C_EC_MASK_REG = UART_UART_DEFAULT_INTR_I2C_EC_MASK;
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 7


  60              		.loc 1 283 0
  61 002e 134A     		ldr	r2, .L2+44
  62 0030 1360     		str	r3, [r2]
 284:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SPI_EC_MASK_REG = UART_UART_DEFAULT_INTR_SPI_EC_MASK;
  63              		.loc 1 284 0
  64 0032 134A     		ldr	r2, .L2+48
  65 0034 1360     		str	r3, [r2]
 285:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SLAVE_MASK_REG  = UART_UART_DEFAULT_INTR_SLAVE_MASK;
  66              		.loc 1 285 0
  67 0036 134A     		ldr	r2, .L2+52
  68 0038 1360     		str	r3, [r2]
 286:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_MASTER_MASK_REG = UART_UART_DEFAULT_INTR_MASTER_MASK;
  69              		.loc 1 286 0
  70 003a 134A     		ldr	r2, .L2+56
  71 003c 1360     		str	r3, [r2]
 287:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_RX_MASK_REG     = UART_UART_DEFAULT_INTR_RX_MASK;
  72              		.loc 1 287 0
  73 003e 134A     		ldr	r2, .L2+60
  74 0040 1360     		str	r3, [r2]
 288:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_TX_MASK_REG     = UART_UART_DEFAULT_INTR_TX_MASK;
  75              		.loc 1 288 0
  76 0042 134A     		ldr	r2, .L2+64
  77 0044 1360     		str	r3, [r2]
 289:Generated_Source\PSoC4/UART_UART.c ****     
 290:Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX interrupt sources to restore. */
 291:Generated_Source\PSoC4/UART_UART.c ****         UART_IntrTxMask = LO16(UART_INTR_TX_MASK_REG);
  78              		.loc 1 291 0
  79 0046 1268     		ldr	r2, [r2]
  80 0048 124B     		ldr	r3, .L2+68
  81 004a 1A80     		strh	r2, [r3]
 292:Generated_Source\PSoC4/UART_UART.c **** 
 293:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
 294:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferHead     = 0u;
 295:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferTail     = 0u;
 296:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferOverflow = 0u;
 297:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
 298:Generated_Source\PSoC4/UART_UART.c **** 
 299:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
 300:Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferHead = 0u;
 301:Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferTail = 0u;
 302:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 303:Generated_Source\PSoC4/UART_UART.c ****     }
  82              		.loc 1 303 0
  83              		@ sp needed
  84 004c 7047     		bx	lr
  85              	.L3:
  86 004e C046     		.align	2
  87              	.L2:
  88 0050 0B000002 		.word	33554443
  89 0054 00000640 		.word	1074135040
  90 0058 40000640 		.word	1074135104
  91 005c 48000640 		.word	1074135112
  92 0060 00030640 		.word	1074135808
  93 0064 04030640 		.word	1074135812
  94 0068 10030640 		.word	1074135824
  95 006c 44000640 		.word	1074135108
  96 0070 07000080 		.word	-2147483641
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 8


  97 0074 00020640 		.word	1074135552
  98 0078 04020640 		.word	1074135556
  99 007c 880E0640 		.word	1074138760
 100 0080 C80E0640 		.word	1074138824
 101 0084 480F0640 		.word	1074138952
 102 0088 080F0640 		.word	1074138888
 103 008c C80F0640 		.word	1074139080
 104 0090 880F0640 		.word	1074139016
 105 0094 00000000 		.word	UART_IntrTxMask
 106              		.cfi_endproc
 107              	.LFE0:
 108              		.size	UART_UartInit, .-UART_UartInit
 109              		.section	.text.UART_UartPostEnable,"ax",%progbits
 110              		.align	2
 111              		.global	UART_UartPostEnable
 112              		.code	16
 113              		.thumb_func
 114              		.type	UART_UartPostEnable, %function
 115              	UART_UartPostEnable:
 116              	.LFB1:
 304:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 305:Generated_Source\PSoC4/UART_UART.c **** 
 306:Generated_Source\PSoC4/UART_UART.c **** 
 307:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 308:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartPostEnable
 309:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 310:Generated_Source\PSoC4/UART_UART.c **** *
 311:Generated_Source\PSoC4/UART_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be
 312:Generated_Source\PSoC4/UART_UART.c **** *  controlled by the SCB UART.
 313:Generated_Source\PSoC4/UART_UART.c **** *
 314:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 315:Generated_Source\PSoC4/UART_UART.c **** void UART_UartPostEnable(void)
 316:Generated_Source\PSoC4/UART_UART.c **** {
 117              		.loc 1 316 0
 118              		.cfi_startproc
 317:Generated_Source\PSoC4/UART_UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 318:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 319:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SDA_MISO_PIN_USED)
 320:Generated_Source\PSoC4/UART_UART.c ****         {
 321:Generated_Source\PSoC4/UART_UART.c ****             /* Set SCB UART to drive the output pin */
 322:Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG, UART_TX_SDA_MISO_HSIOM_MASK,
 323:Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SDA_MISO_HSIOM_POS, UART_TX_SDA_MISO_HSIOM_SEL_U
 324:Generated_Source\PSoC4/UART_UART.c ****         }
 325:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SDA_MISO_PIN_PIN) */
 326:Generated_Source\PSoC4/UART_UART.c **** 
 327:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 328:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_SS0_PIN)
 329:Generated_Source\PSoC4/UART_UART.c ****             if (UART_CHECK_SS0_PIN_USED)
 330:Generated_Source\PSoC4/UART_UART.c ****             {
 331:Generated_Source\PSoC4/UART_UART.c ****                 /* Set SCB UART to drive the output pin */
 332:Generated_Source\PSoC4/UART_UART.c ****                 UART_SET_HSIOM_SEL(UART_SS0_HSIOM_REG, UART_SS0_HSIOM_MASK,
 333:Generated_Source\PSoC4/UART_UART.c ****                                                UART_SS0_HSIOM_POS, UART_SS0_HSIOM_SEL_UART);
 334:Generated_Source\PSoC4/UART_UART.c ****             }
 335:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_SS0_PIN) */
 336:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 337:Generated_Source\PSoC4/UART_UART.c **** 
 338:Generated_Source\PSoC4/UART_UART.c **** #else
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 9


 339:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 340:Generated_Source\PSoC4/UART_UART.c ****          /* Set SCB UART to drive the output pin */
 341:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 119              		.loc 1 341 0
 120 0000 0549     		ldr	r1, .L5
 121 0002 0B68     		ldr	r3, [r1]
 122 0004 F022     		mov	r2, #240
 123 0006 9343     		bic	r3, r2
 124 0008 603A     		sub	r2, r2, #96
 125 000a 1343     		orr	r3, r2
 126 000c 0B60     		str	r3, [r1]
 342:Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_UART);
 343:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
 344:Generated_Source\PSoC4/UART_UART.c **** 
 345:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 346:Generated_Source\PSoC4/UART_UART.c ****         /* Set SCB UART to drive the output pin */
 347:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 348:Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_RTS_HSIOM_SEL_UART);
 349:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 350:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 351:Generated_Source\PSoC4/UART_UART.c **** 
 352:Generated_Source\PSoC4/UART_UART.c ****     /* Restore TX interrupt sources. */
 353:Generated_Source\PSoC4/UART_UART.c ****     UART_SetTxInterruptMode(UART_IntrTxMask);
 127              		.loc 1 353 0
 128 000e 034B     		ldr	r3, .L5+4
 129 0010 1A88     		ldrh	r2, [r3]
 130 0012 034B     		ldr	r3, .L5+8
 131 0014 1A60     		str	r2, [r3]
 354:Generated_Source\PSoC4/UART_UART.c **** }
 132              		.loc 1 354 0
 133              		@ sp needed
 134 0016 7047     		bx	lr
 135              	.L6:
 136              		.align	2
 137              	.L5:
 138 0018 10000140 		.word	1073807376
 139 001c 00000000 		.word	UART_IntrTxMask
 140 0020 880F0640 		.word	1074139016
 141              		.cfi_endproc
 142              	.LFE1:
 143              		.size	UART_UartPostEnable, .-UART_UartPostEnable
 144              		.section	.text.UART_UartStop,"ax",%progbits
 145              		.align	2
 146              		.global	UART_UartStop
 147              		.code	16
 148              		.thumb_func
 149              		.type	UART_UartStop, %function
 150              	UART_UartStop:
 151              	.LFB2:
 355:Generated_Source\PSoC4/UART_UART.c **** 
 356:Generated_Source\PSoC4/UART_UART.c **** 
 357:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 358:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartStop
 359:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 360:Generated_Source\PSoC4/UART_UART.c **** *
 361:Generated_Source\PSoC4/UART_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 362:Generated_Source\PSoC4/UART_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 10


 363:Generated_Source\PSoC4/UART_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature
 364:Generated_Source\PSoC4/UART_UART.c **** *  to not cause it to trigger after the component is enabled.
 365:Generated_Source\PSoC4/UART_UART.c **** *
 366:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 367:Generated_Source\PSoC4/UART_UART.c **** void UART_UartStop(void)
 368:Generated_Source\PSoC4/UART_UART.c **** {
 152              		.loc 1 368 0
 153              		.cfi_startproc
 369:Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
 370:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 371:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SDA_MISO_PIN_USED)
 372:Generated_Source\PSoC4/UART_UART.c ****         {
 373:Generated_Source\PSoC4/UART_UART.c ****             /* Set GPIO to drive output pin */
 374:Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG, UART_TX_SDA_MISO_HSIOM_MASK,
 375:Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SDA_MISO_HSIOM_POS, UART_TX_SDA_MISO_HSIOM_SEL_G
 376:Generated_Source\PSoC4/UART_UART.c ****         }
 377:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SDA_MISO_PIN_PIN) */
 378:Generated_Source\PSoC4/UART_UART.c **** 
 379:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 380:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_SS0_PIN)
 381:Generated_Source\PSoC4/UART_UART.c ****             if (UART_CHECK_SS0_PIN_USED)
 382:Generated_Source\PSoC4/UART_UART.c ****             {
 383:Generated_Source\PSoC4/UART_UART.c ****                 /* Set output pin state after block is disabled */
 384:Generated_Source\PSoC4/UART_UART.c ****                 UART_spi_ss0_Write(UART_GET_UART_RTS_INACTIVE);
 385:Generated_Source\PSoC4/UART_UART.c **** 
 386:Generated_Source\PSoC4/UART_UART.c ****                 /* Set GPIO to drive output pin */
 387:Generated_Source\PSoC4/UART_UART.c ****                 UART_SET_HSIOM_SEL(UART_SS0_HSIOM_REG, UART_SS0_HSIOM_MASK,
 388:Generated_Source\PSoC4/UART_UART.c ****                                                UART_SS0_HSIOM_POS, UART_SS0_HSIOM_SEL_GPIO);
 389:Generated_Source\PSoC4/UART_UART.c ****             }
 390:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_SS0_PIN) */
 391:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 392:Generated_Source\PSoC4/UART_UART.c **** 
 393:Generated_Source\PSoC4/UART_UART.c **** #else
 394:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 395:Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 396:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 154              		.loc 1 396 0
 155 0000 064A     		ldr	r2, .L8
 156 0002 1368     		ldr	r3, [r2]
 157 0004 F021     		mov	r1, #240
 158 0006 8B43     		bic	r3, r1
 159 0008 1360     		str	r3, [r2]
 397:Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_GPIO);
 398:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
 399:Generated_Source\PSoC4/UART_UART.c **** 
 400:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 401:Generated_Source\PSoC4/UART_UART.c ****         /* Set output pin state after block is disabled */
 402:Generated_Source\PSoC4/UART_UART.c ****         UART_rts_Write(UART_GET_UART_RTS_INACTIVE);
 403:Generated_Source\PSoC4/UART_UART.c **** 
 404:Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 405:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 406:Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_RTS_HSIOM_SEL_GPIO);
 407:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 408:Generated_Source\PSoC4/UART_UART.c **** 
 409:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 410:Generated_Source\PSoC4/UART_UART.c **** 
 411:Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST)
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 11


 412:Generated_Source\PSoC4/UART_UART.c ****     /* Disable skip start feature used for wakeup */
 413:Generated_Source\PSoC4/UART_UART.c ****     UART_UART_RX_CTRL_REG &= (uint32) ~UART_UART_RX_CTRL_SKIP_START;
 414:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST) */
 415:Generated_Source\PSoC4/UART_UART.c **** 
 416:Generated_Source\PSoC4/UART_UART.c ****     /* Store TX interrupt sources (exclude level triggered). */
 417:Generated_Source\PSoC4/UART_UART.c ****     UART_IntrTxMask = LO16(UART_GetTxInterruptMode() & UART_INTR_UART_TX_RESTORE);
 160              		.loc 1 417 0
 161 000a 054B     		ldr	r3, .L8+4
 162 000c 1A68     		ldr	r2, [r3]
 163 000e E423     		mov	r3, #228
 164 0010 DB00     		lsl	r3, r3, #3
 165 0012 1340     		and	r3, r2
 166 0014 034A     		ldr	r2, .L8+8
 167 0016 1380     		strh	r3, [r2]
 418:Generated_Source\PSoC4/UART_UART.c **** }
 168              		.loc 1 418 0
 169              		@ sp needed
 170 0018 7047     		bx	lr
 171              	.L9:
 172 001a C046     		.align	2
 173              	.L8:
 174 001c 10000140 		.word	1073807376
 175 0020 880F0640 		.word	1074139016
 176 0024 00000000 		.word	UART_IntrTxMask
 177              		.cfi_endproc
 178              	.LFE2:
 179              		.size	UART_UartStop, .-UART_UartStop
 180              		.section	.text.UART_UartSetRxAddress,"ax",%progbits
 181              		.align	2
 182              		.global	UART_UartSetRxAddress
 183              		.code	16
 184              		.thumb_func
 185              		.type	UART_UartSetRxAddress, %function
 186              	UART_UartSetRxAddress:
 187              	.LFB3:
 419:Generated_Source\PSoC4/UART_UART.c **** 
 420:Generated_Source\PSoC4/UART_UART.c **** 
 421:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 422:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddress
 423:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 424:Generated_Source\PSoC4/UART_UART.c **** *
 425:Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 426:Generated_Source\PSoC4/UART_UART.c **** *  Multiprocessor mode.
 427:Generated_Source\PSoC4/UART_UART.c **** *
 428:Generated_Source\PSoC4/UART_UART.c **** *  \param address: Address for hardware address detection.
 429:Generated_Source\PSoC4/UART_UART.c **** *
 430:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 431:Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddress(uint32 address)
 432:Generated_Source\PSoC4/UART_UART.c **** {
 188              		.loc 1 432 0
 189              		.cfi_startproc
 190              	.LVL0:
 433:Generated_Source\PSoC4/UART_UART.c ****      uint32 matchReg;
 434:Generated_Source\PSoC4/UART_UART.c **** 
 435:Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 191              		.loc 1 435 0
 192 0000 034A     		ldr	r2, .L11
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 12


 193 0002 1368     		ldr	r3, [r2]
 194              	.LVL1:
 436:Generated_Source\PSoC4/UART_UART.c **** 
 437:Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_ADDR_MASK); /* Clear address bits */
 195              		.loc 1 437 0
 196 0004 FF21     		mov	r1, #255
 197 0006 8B43     		bic	r3, r1
 198              	.LVL2:
 438:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32)  (address & UART_RX_MATCH_ADDR_MASK)); /* Set address  */
 199              		.loc 1 438 0
 200 0008 0840     		and	r0, r1
 201              	.LVL3:
 202 000a 1843     		orr	r0, r3
 203              	.LVL4:
 439:Generated_Source\PSoC4/UART_UART.c **** 
 440:Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 204              		.loc 1 440 0
 205 000c 1060     		str	r0, [r2]
 441:Generated_Source\PSoC4/UART_UART.c **** }
 206              		.loc 1 441 0
 207              		@ sp needed
 208 000e 7047     		bx	lr
 209              	.L12:
 210              		.align	2
 211              	.L11:
 212 0010 10030640 		.word	1074135824
 213              		.cfi_endproc
 214              	.LFE3:
 215              		.size	UART_UartSetRxAddress, .-UART_UartSetRxAddress
 216              		.section	.text.UART_UartSetRxAddressMask,"ax",%progbits
 217              		.align	2
 218              		.global	UART_UartSetRxAddressMask
 219              		.code	16
 220              		.thumb_func
 221              		.type	UART_UartSetRxAddressMask, %function
 222              	UART_UartSetRxAddressMask:
 223              	.LFB4:
 442:Generated_Source\PSoC4/UART_UART.c **** 
 443:Generated_Source\PSoC4/UART_UART.c **** 
 444:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 445:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddressMask
 446:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 447:Generated_Source\PSoC4/UART_UART.c **** *
 448:Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 449:Generated_Source\PSoC4/UART_UART.c **** *
 450:Generated_Source\PSoC4/UART_UART.c **** *  \param addressMask: Address mask.
 451:Generated_Source\PSoC4/UART_UART.c **** *   - Bit value 0 – excludes bit from address comparison.
 452:Generated_Source\PSoC4/UART_UART.c **** *   - Bit value 1 – the bit needs to match with the corresponding bit
 453:Generated_Source\PSoC4/UART_UART.c **** *     of the address.
 454:Generated_Source\PSoC4/UART_UART.c **** *
 455:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 456:Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddressMask(uint32 addressMask)
 457:Generated_Source\PSoC4/UART_UART.c **** {
 224              		.loc 1 457 0
 225              		.cfi_startproc
 226              	.LVL5:
 458:Generated_Source\PSoC4/UART_UART.c ****     uint32 matchReg;
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 13


 459:Generated_Source\PSoC4/UART_UART.c **** 
 460:Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 227              		.loc 1 460 0
 228 0000 034A     		ldr	r2, .L14
 229 0002 1168     		ldr	r1, [r2]
 230              	.LVL6:
 461:Generated_Source\PSoC4/UART_UART.c **** 
 462:Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 231              		.loc 1 462 0
 232 0004 034B     		ldr	r3, .L14+4
 233 0006 0B40     		and	r3, r1
 234              	.LVL7:
 463:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32) (addressMask << UART_RX_MATCH_MASK_POS));
 235              		.loc 1 463 0
 236 0008 0004     		lsl	r0, r0, #16
 237              	.LVL8:
 238 000a 1843     		orr	r0, r3
 239              	.LVL9:
 464:Generated_Source\PSoC4/UART_UART.c **** 
 465:Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 240              		.loc 1 465 0
 241 000c 1060     		str	r0, [r2]
 466:Generated_Source\PSoC4/UART_UART.c **** }
 242              		.loc 1 466 0
 243              		@ sp needed
 244 000e 7047     		bx	lr
 245              	.L15:
 246              		.align	2
 247              	.L14:
 248 0010 10030640 		.word	1074135824
 249 0014 FFFF00FF 		.word	-16711681
 250              		.cfi_endproc
 251              	.LFE4:
 252              		.size	UART_UartSetRxAddressMask, .-UART_UartSetRxAddressMask
 253              		.section	.text.UART_UartPutString,"ax",%progbits
 254              		.align	2
 255              		.global	UART_UartPutString
 256              		.code	16
 257              		.thumb_func
 258              		.type	UART_UartPutString, %function
 259              	UART_UartPutString:
 260              	.LFB5:
 467:Generated_Source\PSoC4/UART_UART.c **** 
 468:Generated_Source\PSoC4/UART_UART.c **** 
 469:Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_RX_DIRECTION)
 470:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 471:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetChar
 472:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 473:Generated_Source\PSoC4/UART_UART.c ****     *
 474:Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves next data element from receive buffer.
 475:Generated_Source\PSoC4/UART_UART.c ****     *  This function is designed for ASCII characters and returns a char where
 476:Generated_Source\PSoC4/UART_UART.c ****     *  1 to 255 are valid characters and 0 indicates an error occurred or no data
 477:Generated_Source\PSoC4/UART_UART.c ****     *  is present.
 478:Generated_Source\PSoC4/UART_UART.c ****     *  - RX software buffer is disabled: Returns data element retrieved from RX
 479:Generated_Source\PSoC4/UART_UART.c ****     *    FIFO.
 480:Generated_Source\PSoC4/UART_UART.c ****     *  - RX software buffer is enabled: Returns data element from the software
 481:Generated_Source\PSoC4/UART_UART.c ****     *    receive buffer.
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 14


 482:Generated_Source\PSoC4/UART_UART.c ****     *
 483:Generated_Source\PSoC4/UART_UART.c ****     *  \return
 484:Generated_Source\PSoC4/UART_UART.c ****     *   Next data element from the receive buffer. ASCII character values from
 485:Generated_Source\PSoC4/UART_UART.c ****     *   1 to 255 are valid. A returned zero signifies an error condition or no
 486:Generated_Source\PSoC4/UART_UART.c ****     *   data available.
 487:Generated_Source\PSoC4/UART_UART.c ****     *
 488:Generated_Source\PSoC4/UART_UART.c ****     *  \sideeffect
 489:Generated_Source\PSoC4/UART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 490:Generated_Source\PSoC4/UART_UART.c ****     *   RX FIFO and software buffer usage.
 491:Generated_Source\PSoC4/UART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 492:Generated_Source\PSoC4/UART_UART.c ****     *   is not treated as an error condition.
 493:Generated_Source\PSoC4/UART_UART.c ****     *   Check UART_rxBufferOverflow to capture that error condition.
 494:Generated_Source\PSoC4/UART_UART.c ****     *
 495:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 496:Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetChar(void)
 497:Generated_Source\PSoC4/UART_UART.c ****     {
 498:Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData = 0u;
 499:Generated_Source\PSoC4/UART_UART.c **** 
 500:Generated_Source\PSoC4/UART_UART.c ****         /* Reads data only if there is data to read */
 501:Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 502:Generated_Source\PSoC4/UART_UART.c ****         {
 503:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 504:Generated_Source\PSoC4/UART_UART.c ****         }
 505:Generated_Source\PSoC4/UART_UART.c **** 
 506:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_INTR_RX(UART_INTR_RX_ERR))
 507:Generated_Source\PSoC4/UART_UART.c ****         {
 508:Generated_Source\PSoC4/UART_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 509:Generated_Source\PSoC4/UART_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 510:Generated_Source\PSoC4/UART_UART.c ****         }
 511:Generated_Source\PSoC4/UART_UART.c **** 
 512:Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
 513:Generated_Source\PSoC4/UART_UART.c ****     }
 514:Generated_Source\PSoC4/UART_UART.c **** 
 515:Generated_Source\PSoC4/UART_UART.c **** 
 516:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 517:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetByte
 518:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 519:Generated_Source\PSoC4/UART_UART.c ****     *
 520:Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 521:Generated_Source\PSoC4/UART_UART.c ****     *  received byte and error condition.
 522:Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 523:Generated_Source\PSoC4/UART_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 524:Generated_Source\PSoC4/UART_UART.c ****     *     empty.
 525:Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 526:Generated_Source\PSoC4/UART_UART.c ****     *     software receive buffer.
 527:Generated_Source\PSoC4/UART_UART.c ****     *
 528:Generated_Source\PSoC4/UART_UART.c ****     *  \return
 529:Generated_Source\PSoC4/UART_UART.c ****     *   Bits 7-0 contain the next data element from the receive buffer and
 530:Generated_Source\PSoC4/UART_UART.c ****     *   other bits contain the error condition.
 531:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_OVERFLOW - Attempt to write to a full
 532:Generated_Source\PSoC4/UART_UART.c ****     *     receiver FIFO.
 533:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_UNDERFLOW	Attempt to read from an empty
 534:Generated_Source\PSoC4/UART_UART.c ****     *     receiver FIFO.
 535:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_FRAME_ERROR - UART framing error detected.
 536:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_PARITY_ERROR - UART parity error detected.
 537:Generated_Source\PSoC4/UART_UART.c ****     *
 538:Generated_Source\PSoC4/UART_UART.c ****     *  \sideeffect
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 15


 539:Generated_Source\PSoC4/UART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 540:Generated_Source\PSoC4/UART_UART.c ****     *   RX FIFO and software buffer usage.
 541:Generated_Source\PSoC4/UART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 542:Generated_Source\PSoC4/UART_UART.c ****     *   is not treated as an error condition.
 543:Generated_Source\PSoC4/UART_UART.c ****     *   Check UART_rxBufferOverflow to capture that error condition.
 544:Generated_Source\PSoC4/UART_UART.c ****     *
 545:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 546:Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetByte(void)
 547:Generated_Source\PSoC4/UART_UART.c ****     {
 548:Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData;
 549:Generated_Source\PSoC4/UART_UART.c ****         uint32 tmpStatus;
 550:Generated_Source\PSoC4/UART_UART.c **** 
 551:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 552:Generated_Source\PSoC4/UART_UART.c ****         {
 553:Generated_Source\PSoC4/UART_UART.c ****             UART_DisableInt();
 554:Generated_Source\PSoC4/UART_UART.c ****         }
 555:Generated_Source\PSoC4/UART_UART.c ****         #endif
 556:Generated_Source\PSoC4/UART_UART.c **** 
 557:Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 558:Generated_Source\PSoC4/UART_UART.c ****         {
 559:Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 560:Generated_Source\PSoC4/UART_UART.c ****             * buffer.
 561:Generated_Source\PSoC4/UART_UART.c ****             */
 562:Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 563:Generated_Source\PSoC4/UART_UART.c ****             {
 564:Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 565:Generated_Source\PSoC4/UART_UART.c ****             }
 566:Generated_Source\PSoC4/UART_UART.c ****             #endif
 567:Generated_Source\PSoC4/UART_UART.c **** 
 568:Generated_Source\PSoC4/UART_UART.c ****             /* Get received byte */
 569:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 570:Generated_Source\PSoC4/UART_UART.c ****         }
 571:Generated_Source\PSoC4/UART_UART.c ****         else
 572:Generated_Source\PSoC4/UART_UART.c ****         {
 573:Generated_Source\PSoC4/UART_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the
 574:Generated_Source\PSoC4/UART_UART.c ****             * case of empty. Otherwise the first received byte will be read.
 575:Generated_Source\PSoC4/UART_UART.c ****             */
 576:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
 577:Generated_Source\PSoC4/UART_UART.c **** 
 578:Generated_Source\PSoC4/UART_UART.c **** 
 579:Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes. */
 580:Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 581:Generated_Source\PSoC4/UART_UART.c ****             {
 582:Generated_Source\PSoC4/UART_UART.c **** 
 583:Generated_Source\PSoC4/UART_UART.c ****                 /* The byte has been read from RX FIFO. Clear RX interrupt to
 584:Generated_Source\PSoC4/UART_UART.c ****                 * not involve interrupt handler when RX FIFO is empty.
 585:Generated_Source\PSoC4/UART_UART.c ****                 */
 586:Generated_Source\PSoC4/UART_UART.c ****                 UART_ClearRxInterruptSource(UART_INTR_RX_NOT_EMPTY);
 587:Generated_Source\PSoC4/UART_UART.c **** 
 588:Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 589:Generated_Source\PSoC4/UART_UART.c ****             }
 590:Generated_Source\PSoC4/UART_UART.c ****             #endif
 591:Generated_Source\PSoC4/UART_UART.c ****         }
 592:Generated_Source\PSoC4/UART_UART.c **** 
 593:Generated_Source\PSoC4/UART_UART.c ****         /* Get and clear RX error mask */
 594:Generated_Source\PSoC4/UART_UART.c ****         tmpStatus = (UART_GetRxInterruptSource() & UART_INTR_RX_ERR);
 595:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 16


 596:Generated_Source\PSoC4/UART_UART.c **** 
 597:Generated_Source\PSoC4/UART_UART.c ****         /* Puts together data and error status:
 598:Generated_Source\PSoC4/UART_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 599:Generated_Source\PSoC4/UART_UART.c ****         */
 600:Generated_Source\PSoC4/UART_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 601:Generated_Source\PSoC4/UART_UART.c **** 
 602:Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
 603:Generated_Source\PSoC4/UART_UART.c ****     }
 604:Generated_Source\PSoC4/UART_UART.c **** 
 605:Generated_Source\PSoC4/UART_UART.c **** 
 606:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 607:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 608:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsPolarity
 609:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 610:Generated_Source\PSoC4/UART_UART.c ****         *
 611:Generated_Source\PSoC4/UART_UART.c ****         *  Sets active polarity of RTS output signal.
 612:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 613:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 614:Generated_Source\PSoC4/UART_UART.c ****         *
 615:Generated_Source\PSoC4/UART_UART.c ****         *  \param polarity: Active polarity of RTS output signal.
 616:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 617:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 618:Generated_Source\PSoC4/UART_UART.c ****         *
 619:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 620:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsPolarity(uint32 polarity)
 621:Generated_Source\PSoC4/UART_UART.c ****         {
 622:Generated_Source\PSoC4/UART_UART.c ****             if(0u != polarity)
 623:Generated_Source\PSoC4/UART_UART.c ****             {
 624:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_RTS_POLARITY;
 625:Generated_Source\PSoC4/UART_UART.c ****             }
 626:Generated_Source\PSoC4/UART_UART.c ****             else
 627:Generated_Source\PSoC4/UART_UART.c ****             {
 628:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_RTS_POLARITY;
 629:Generated_Source\PSoC4/UART_UART.c ****             }
 630:Generated_Source\PSoC4/UART_UART.c ****         }
 631:Generated_Source\PSoC4/UART_UART.c **** 
 632:Generated_Source\PSoC4/UART_UART.c **** 
 633:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 634:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsFifoLevel
 635:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 636:Generated_Source\PSoC4/UART_UART.c ****         *
 637:Generated_Source\PSoC4/UART_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 638:Generated_Source\PSoC4/UART_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 639:Generated_Source\PSoC4/UART_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 640:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 641:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/UART_UART.c ****         *
 643:Generated_Source\PSoC4/UART_UART.c ****         *  \param level: Level in the RX FIFO for RTS signal activation.
 644:Generated_Source\PSoC4/UART_UART.c ****         *   The range of valid level values is between 0 and RX FIFO depth - 1.
 645:Generated_Source\PSoC4/UART_UART.c ****         *   Setting level value to 0 disables RTS signal activation.
 646:Generated_Source\PSoC4/UART_UART.c ****         *
 647:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 648:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsFifoLevel(uint32 level)
 649:Generated_Source\PSoC4/UART_UART.c ****         {
 650:Generated_Source\PSoC4/UART_UART.c ****             uint32 uartFlowCtrl;
 651:Generated_Source\PSoC4/UART_UART.c **** 
 652:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl = UART_UART_FLOW_CTRL_REG;
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 17


 653:Generated_Source\PSoC4/UART_UART.c **** 
 654:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl &= ((uint32) ~UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask
 655:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl |= ((uint32) (UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 656:Generated_Source\PSoC4/UART_UART.c **** 
 657:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = uartFlowCtrl;
 658:Generated_Source\PSoC4/UART_UART.c ****         }
 659:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 660:Generated_Source\PSoC4/UART_UART.c **** 
 661:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_RX_DIRECTION) */
 662:Generated_Source\PSoC4/UART_UART.c **** 
 663:Generated_Source\PSoC4/UART_UART.c **** 
 664:Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_TX_DIRECTION)
 665:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 666:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutString
 667:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 668:Generated_Source\PSoC4/UART_UART.c ****     *
 669:Generated_Source\PSoC4/UART_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 670:Generated_Source\PSoC4/UART_UART.c ****     *  next available bus time.
 671:Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 672:Generated_Source\PSoC4/UART_UART.c ****     *  requested data in transmit buffer.
 673:Generated_Source\PSoC4/UART_UART.c ****     *
 674:Generated_Source\PSoC4/UART_UART.c ****     *  \param string: pointer to the null terminated string array to be placed in the
 675:Generated_Source\PSoC4/UART_UART.c ****     *   transmit buffer.
 676:Generated_Source\PSoC4/UART_UART.c ****     *
 677:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 678:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutString(const char8 string[])
 679:Generated_Source\PSoC4/UART_UART.c ****     {
 261              		.loc 1 679 0
 262              		.cfi_startproc
 263              	.LVL10:
 264 0000 38B5     		push	{r3, r4, r5, lr}
 265              		.cfi_def_cfa_offset 16
 266              		.cfi_offset 3, -16
 267              		.cfi_offset 4, -12
 268              		.cfi_offset 5, -8
 269              		.cfi_offset 14, -4
 270 0002 051C     		mov	r5, r0
 271              	.LVL11:
 680:Generated_Source\PSoC4/UART_UART.c ****         uint32 bufIndex;
 681:Generated_Source\PSoC4/UART_UART.c **** 
 682:Generated_Source\PSoC4/UART_UART.c ****         bufIndex = 0u;
 272              		.loc 1 682 0
 273 0004 0024     		mov	r4, #0
 683:Generated_Source\PSoC4/UART_UART.c **** 
 684:Generated_Source\PSoC4/UART_UART.c ****         /* Blocks the control flow until all data has been sent */
 685:Generated_Source\PSoC4/UART_UART.c ****         while(string[bufIndex] != ((char8) 0))
 274              		.loc 1 685 0
 275 0006 02E0     		b	.L17
 276              	.LVL12:
 277              	.L18:
 686:Generated_Source\PSoC4/UART_UART.c ****         {
 687:Generated_Source\PSoC4/UART_UART.c ****             UART_UartPutChar((uint32) string[bufIndex]);
 278              		.loc 1 687 0
 279 0008 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 280              	.LVL13:
 688:Generated_Source\PSoC4/UART_UART.c ****             bufIndex++;
 281              		.loc 1 688 0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 18


 282 000c 0134     		add	r4, r4, #1
 283              	.LVL14:
 284              	.L17:
 685:Generated_Source\PSoC4/UART_UART.c ****         {
 285              		.loc 1 685 0
 286 000e 285D     		ldrb	r0, [r5, r4]
 287 0010 0028     		cmp	r0, #0
 288 0012 F9D1     		bne	.L18
 689:Generated_Source\PSoC4/UART_UART.c ****         }
 690:Generated_Source\PSoC4/UART_UART.c ****     }
 289              		.loc 1 690 0
 290              		@ sp needed
 291              	.LVL15:
 292              	.LVL16:
 293 0014 38BD     		pop	{r3, r4, r5, pc}
 294              		.cfi_endproc
 295              	.LFE5:
 296              		.size	UART_UartPutString, .-UART_UartPutString
 297 0016 C046     		.section	.text.UART_UartPutCRLF,"ax",%progbits
 298              		.align	2
 299              		.global	UART_UartPutCRLF
 300              		.code	16
 301              		.thumb_func
 302              		.type	UART_UartPutCRLF, %function
 303              	UART_UartPutCRLF:
 304              	.LFB6:
 691:Generated_Source\PSoC4/UART_UART.c **** 
 692:Generated_Source\PSoC4/UART_UART.c **** 
 693:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 694:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutCRLF
 695:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 696:Generated_Source\PSoC4/UART_UART.c ****     *
 697:Generated_Source\PSoC4/UART_UART.c ****     *  Places byte of data followed by a carriage return (0x0D) and line feed
 698:Generated_Source\PSoC4/UART_UART.c ****     *  (0x0A) in the transmit buffer.
 699:Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 700:Generated_Source\PSoC4/UART_UART.c ****     *  all requested data in transmit buffer.
 701:Generated_Source\PSoC4/UART_UART.c ****     *
 702:Generated_Source\PSoC4/UART_UART.c ****     *  \param txDataByte: the data to be transmitted.
 703:Generated_Source\PSoC4/UART_UART.c ****     *
 704:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 705:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutCRLF(uint32 txDataByte)
 706:Generated_Source\PSoC4/UART_UART.c ****     {
 305              		.loc 1 706 0
 306              		.cfi_startproc
 307              	.LVL17:
 308 0000 08B5     		push	{r3, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 3, -8
 311              		.cfi_offset 14, -4
 707:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
 312              		.loc 1 707 0
 313 0002 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 314              	.LVL18:
 708:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 315              		.loc 1 708 0
 316 0006 0D20     		mov	r0, #13
 317 0008 FFF7FEFF 		bl	UART_SpiUartWriteTxData
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 19


 318              	.LVL19:
 709:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 319              		.loc 1 709 0
 320 000c 0A20     		mov	r0, #10
 321 000e FFF7FEFF 		bl	UART_SpiUartWriteTxData
 322              	.LVL20:
 710:Generated_Source\PSoC4/UART_UART.c ****     }
 323              		.loc 1 710 0
 324              		@ sp needed
 325 0012 08BD     		pop	{r3, pc}
 326              		.cfi_endproc
 327              	.LFE6:
 328              		.size	UART_UartPutCRLF, .-UART_UartPutCRLF
 329              		.text
 330              	.Letext0:
 331              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 332              		.file 3 "Generated_Source\\PSoC4\\UART_PVT.h"
 333              		.file 4 "Generated_Source\\PSoC4\\UART_SPI_UART.h"
 334              		.section	.debug_info,"",%progbits
 335              	.Ldebug_info0:
 336 0000 1E020000 		.4byte	0x21e
 337 0004 0400     		.2byte	0x4
 338 0006 00000000 		.4byte	.Ldebug_abbrev0
 339 000a 04       		.byte	0x4
 340 000b 01       		.uleb128 0x1
 341 000c 98010000 		.4byte	.LASF30
 342 0010 01       		.byte	0x1
 343 0011 14000000 		.4byte	.LASF31
 344 0015 42020000 		.4byte	.LASF32
 345 0019 00000000 		.4byte	.Ldebug_ranges0+0
 346 001d 00000000 		.4byte	0
 347 0021 00000000 		.4byte	.Ldebug_line0
 348 0025 02       		.uleb128 0x2
 349 0026 01       		.byte	0x1
 350 0027 06       		.byte	0x6
 351 0028 91020000 		.4byte	.LASF0
 352 002c 02       		.uleb128 0x2
 353 002d 01       		.byte	0x1
 354 002e 08       		.byte	0x8
 355 002f 99000000 		.4byte	.LASF1
 356 0033 02       		.uleb128 0x2
 357 0034 02       		.byte	0x2
 358 0035 05       		.byte	0x5
 359 0036 26020000 		.4byte	.LASF2
 360 003a 02       		.uleb128 0x2
 361 003b 02       		.byte	0x2
 362 003c 07       		.byte	0x7
 363 003d E1000000 		.4byte	.LASF3
 364 0041 02       		.uleb128 0x2
 365 0042 04       		.byte	0x4
 366 0043 05       		.byte	0x5
 367 0044 30020000 		.4byte	.LASF4
 368 0048 02       		.uleb128 0x2
 369 0049 04       		.byte	0x4
 370 004a 07       		.byte	0x7
 371 004b C1000000 		.4byte	.LASF5
 372 004f 02       		.uleb128 0x2
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 20


 373 0050 08       		.byte	0x8
 374 0051 05       		.byte	0x5
 375 0052 00000000 		.4byte	.LASF6
 376 0056 02       		.uleb128 0x2
 377 0057 08       		.byte	0x8
 378 0058 07       		.byte	0x7
 379 0059 5F010000 		.4byte	.LASF7
 380 005d 03       		.uleb128 0x3
 381 005e 04       		.byte	0x4
 382 005f 05       		.byte	0x5
 383 0060 696E7400 		.ascii	"int\000"
 384 0064 02       		.uleb128 0x2
 385 0065 04       		.byte	0x4
 386 0066 07       		.byte	0x7
 387 0067 3C010000 		.4byte	.LASF8
 388 006b 04       		.uleb128 0x4
 389 006c 2E010000 		.4byte	.LASF9
 390 0070 02       		.byte	0x2
 391 0071 BA01     		.2byte	0x1ba
 392 0073 3A000000 		.4byte	0x3a
 393 0077 04       		.uleb128 0x4
 394 0078 35010000 		.4byte	.LASF10
 395 007c 02       		.byte	0x2
 396 007d BB01     		.2byte	0x1bb
 397 007f 48000000 		.4byte	0x48
 398 0083 02       		.uleb128 0x2
 399 0084 04       		.byte	0x4
 400 0085 04       		.byte	0x4
 401 0086 93000000 		.4byte	.LASF11
 402 008a 02       		.uleb128 0x2
 403 008b 08       		.byte	0x8
 404 008c 04       		.byte	0x4
 405 008d 11010000 		.4byte	.LASF12
 406 0091 04       		.uleb128 0x4
 407 0092 A7000000 		.4byte	.LASF13
 408 0096 02       		.byte	0x2
 409 0097 CA01     		.2byte	0x1ca
 410 0099 9D000000 		.4byte	0x9d
 411 009d 02       		.uleb128 0x2
 412 009e 01       		.byte	0x1
 413 009f 08       		.byte	0x8
 414 00a0 93010000 		.4byte	.LASF14
 415 00a4 04       		.uleb128 0x4
 416 00a5 0E000000 		.4byte	.LASF15
 417 00a9 02       		.byte	0x2
 418 00aa 6502     		.2byte	0x265
 419 00ac B0000000 		.4byte	0xb0
 420 00b0 05       		.uleb128 0x5
 421 00b1 77000000 		.4byte	0x77
 422 00b5 02       		.uleb128 0x2
 423 00b6 04       		.byte	0x4
 424 00b7 07       		.byte	0x7
 425 00b8 7F010000 		.4byte	.LASF16
 426 00bc 06       		.uleb128 0x6
 427 00bd 49010000 		.4byte	.LASF17
 428 00c1 01       		.byte	0x1
 429 00c2 F5       		.byte	0xf5
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 21


 430 00c3 00000000 		.4byte	.LFB0
 431 00c7 98000000 		.4byte	.LFE0-.LFB0
 432 00cb 01       		.uleb128 0x1
 433 00cc 9C       		.byte	0x9c
 434 00cd 07       		.uleb128 0x7
 435 00ce AD000000 		.4byte	.LASF18
 436 00d2 01       		.byte	0x1
 437 00d3 3B01     		.2byte	0x13b
 438 00d5 00000000 		.4byte	.LFB1
 439 00d9 24000000 		.4byte	.LFE1-.LFB1
 440 00dd 01       		.uleb128 0x1
 441 00de 9C       		.byte	0x9c
 442 00df 07       		.uleb128 0x7
 443 00e0 D3000000 		.4byte	.LASF19
 444 00e4 01       		.byte	0x1
 445 00e5 6F01     		.2byte	0x16f
 446 00e7 00000000 		.4byte	.LFB2
 447 00eb 28000000 		.4byte	.LFE2-.LFB2
 448 00ef 01       		.uleb128 0x1
 449 00f0 9C       		.byte	0x9c
 450 00f1 08       		.uleb128 0x8
 451 00f2 18010000 		.4byte	.LASF20
 452 00f6 01       		.byte	0x1
 453 00f7 AF01     		.2byte	0x1af
 454 00f9 00000000 		.4byte	.LFB3
 455 00fd 14000000 		.4byte	.LFE3-.LFB3
 456 0101 01       		.uleb128 0x1
 457 0102 9C       		.byte	0x9c
 458 0103 28010000 		.4byte	0x128
 459 0107 09       		.uleb128 0x9
 460 0108 57010000 		.4byte	.LASF22
 461 010c 01       		.byte	0x1
 462 010d AF01     		.2byte	0x1af
 463 010f 77000000 		.4byte	0x77
 464 0113 00000000 		.4byte	.LLST0
 465 0117 0A       		.uleb128 0xa
 466 0118 39020000 		.4byte	.LASF24
 467 011c 01       		.byte	0x1
 468 011d B101     		.2byte	0x1b1
 469 011f 77000000 		.4byte	0x77
 470 0123 21000000 		.4byte	.LLST1
 471 0127 00       		.byte	0
 472 0128 08       		.uleb128 0x8
 473 0129 47000000 		.4byte	.LASF21
 474 012d 01       		.byte	0x1
 475 012e C801     		.2byte	0x1c8
 476 0130 00000000 		.4byte	.LFB4
 477 0134 18000000 		.4byte	.LFE4-.LFB4
 478 0138 01       		.uleb128 0x1
 479 0139 9C       		.byte	0x9c
 480 013a 5F010000 		.4byte	0x15f
 481 013e 09       		.uleb128 0x9
 482 013f 05010000 		.4byte	.LASF23
 483 0143 01       		.byte	0x1
 484 0144 C801     		.2byte	0x1c8
 485 0146 77000000 		.4byte	0x77
 486 014a 3F000000 		.4byte	.LLST2
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 22


 487 014e 0A       		.uleb128 0xa
 488 014f 39020000 		.4byte	.LASF24
 489 0153 01       		.byte	0x1
 490 0154 CA01     		.2byte	0x1ca
 491 0156 77000000 		.4byte	0x77
 492 015a 60000000 		.4byte	.LLST3
 493 015e 00       		.byte	0
 494 015f 08       		.uleb128 0x8
 495 0160 80000000 		.4byte	.LASF25
 496 0164 01       		.byte	0x1
 497 0165 A602     		.2byte	0x2a6
 498 0167 00000000 		.4byte	.LFB5
 499 016b 16000000 		.4byte	.LFE5-.LFB5
 500 016f 01       		.uleb128 0x1
 501 0170 9C       		.byte	0x9c
 502 0171 9F010000 		.4byte	0x19f
 503 0175 09       		.uleb128 0x9
 504 0176 79000000 		.4byte	.LASF26
 505 017a 01       		.byte	0x1
 506 017b A602     		.2byte	0x2a6
 507 017d 9F010000 		.4byte	0x19f
 508 0181 89000000 		.4byte	.LLST4
 509 0185 0A       		.uleb128 0xa
 510 0186 76010000 		.4byte	.LASF27
 511 018a 01       		.byte	0x1
 512 018b A802     		.2byte	0x2a8
 513 018d 77000000 		.4byte	0x77
 514 0191 B5000000 		.4byte	.LLST5
 515 0195 0B       		.uleb128 0xb
 516 0196 0C000000 		.4byte	.LVL13
 517 019a 13020000 		.4byte	0x213
 518 019e 00       		.byte	0
 519 019f 0C       		.uleb128 0xc
 520 01a0 04       		.byte	0x4
 521 01a1 A5010000 		.4byte	0x1a5
 522 01a5 0D       		.uleb128 0xd
 523 01a6 91000000 		.4byte	0x91
 524 01aa 08       		.uleb128 0x8
 525 01ab F4000000 		.4byte	.LASF28
 526 01af 01       		.byte	0x1
 527 01b0 C102     		.2byte	0x2c1
 528 01b2 00000000 		.4byte	.LFB6
 529 01b6 14000000 		.4byte	.LFE6-.LFB6
 530 01ba 01       		.uleb128 0x1
 531 01bb 9C       		.byte	0x9c
 532 01bc 08020000 		.4byte	0x208
 533 01c0 09       		.uleb128 0x9
 534 01c1 88010000 		.4byte	.LASF29
 535 01c5 01       		.byte	0x1
 536 01c6 C102     		.2byte	0x2c1
 537 01c8 77000000 		.4byte	0x77
 538 01cc D4000000 		.4byte	.LLST6
 539 01d0 0E       		.uleb128 0xe
 540 01d1 06000000 		.4byte	.LVL18
 541 01d5 13020000 		.4byte	0x213
 542 01d9 E5010000 		.4byte	0x1e5
 543 01dd 0F       		.uleb128 0xf
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 23


 544 01de 01       		.uleb128 0x1
 545 01df 50       		.byte	0x50
 546 01e0 03       		.uleb128 0x3
 547 01e1 F3       		.byte	0xf3
 548 01e2 01       		.uleb128 0x1
 549 01e3 50       		.byte	0x50
 550 01e4 00       		.byte	0
 551 01e5 0E       		.uleb128 0xe
 552 01e6 0C000000 		.4byte	.LVL19
 553 01ea 13020000 		.4byte	0x213
 554 01ee F8010000 		.4byte	0x1f8
 555 01f2 0F       		.uleb128 0xf
 556 01f3 01       		.uleb128 0x1
 557 01f4 50       		.byte	0x50
 558 01f5 01       		.uleb128 0x1
 559 01f6 3D       		.byte	0x3d
 560 01f7 00       		.byte	0
 561 01f8 10       		.uleb128 0x10
 562 01f9 12000000 		.4byte	.LVL20
 563 01fd 13020000 		.4byte	0x213
 564 0201 0F       		.uleb128 0xf
 565 0202 01       		.uleb128 0x1
 566 0203 50       		.byte	0x50
 567 0204 01       		.uleb128 0x1
 568 0205 3A       		.byte	0x3a
 569 0206 00       		.byte	0
 570 0207 00       		.byte	0
 571 0208 11       		.uleb128 0x11
 572 0209 37000000 		.4byte	.LASF33
 573 020d 03       		.byte	0x3
 574 020e 5B       		.byte	0x5b
 575 020f 6B000000 		.4byte	0x6b
 576 0213 12       		.uleb128 0x12
 577 0214 61000000 		.4byte	.LASF34
 578 0218 04       		.byte	0x4
 579 0219 3A03     		.2byte	0x33a
 580 021b 13       		.uleb128 0x13
 581 021c 77000000 		.4byte	0x77
 582 0220 00       		.byte	0
 583 0221 00       		.byte	0
 584              		.section	.debug_abbrev,"",%progbits
 585              	.Ldebug_abbrev0:
 586 0000 01       		.uleb128 0x1
 587 0001 11       		.uleb128 0x11
 588 0002 01       		.byte	0x1
 589 0003 25       		.uleb128 0x25
 590 0004 0E       		.uleb128 0xe
 591 0005 13       		.uleb128 0x13
 592 0006 0B       		.uleb128 0xb
 593 0007 03       		.uleb128 0x3
 594 0008 0E       		.uleb128 0xe
 595 0009 1B       		.uleb128 0x1b
 596 000a 0E       		.uleb128 0xe
 597 000b 55       		.uleb128 0x55
 598 000c 17       		.uleb128 0x17
 599 000d 11       		.uleb128 0x11
 600 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 24


 601 000f 10       		.uleb128 0x10
 602 0010 17       		.uleb128 0x17
 603 0011 00       		.byte	0
 604 0012 00       		.byte	0
 605 0013 02       		.uleb128 0x2
 606 0014 24       		.uleb128 0x24
 607 0015 00       		.byte	0
 608 0016 0B       		.uleb128 0xb
 609 0017 0B       		.uleb128 0xb
 610 0018 3E       		.uleb128 0x3e
 611 0019 0B       		.uleb128 0xb
 612 001a 03       		.uleb128 0x3
 613 001b 0E       		.uleb128 0xe
 614 001c 00       		.byte	0
 615 001d 00       		.byte	0
 616 001e 03       		.uleb128 0x3
 617 001f 24       		.uleb128 0x24
 618 0020 00       		.byte	0
 619 0021 0B       		.uleb128 0xb
 620 0022 0B       		.uleb128 0xb
 621 0023 3E       		.uleb128 0x3e
 622 0024 0B       		.uleb128 0xb
 623 0025 03       		.uleb128 0x3
 624 0026 08       		.uleb128 0x8
 625 0027 00       		.byte	0
 626 0028 00       		.byte	0
 627 0029 04       		.uleb128 0x4
 628 002a 16       		.uleb128 0x16
 629 002b 00       		.byte	0
 630 002c 03       		.uleb128 0x3
 631 002d 0E       		.uleb128 0xe
 632 002e 3A       		.uleb128 0x3a
 633 002f 0B       		.uleb128 0xb
 634 0030 3B       		.uleb128 0x3b
 635 0031 05       		.uleb128 0x5
 636 0032 49       		.uleb128 0x49
 637 0033 13       		.uleb128 0x13
 638 0034 00       		.byte	0
 639 0035 00       		.byte	0
 640 0036 05       		.uleb128 0x5
 641 0037 35       		.uleb128 0x35
 642 0038 00       		.byte	0
 643 0039 49       		.uleb128 0x49
 644 003a 13       		.uleb128 0x13
 645 003b 00       		.byte	0
 646 003c 00       		.byte	0
 647 003d 06       		.uleb128 0x6
 648 003e 2E       		.uleb128 0x2e
 649 003f 00       		.byte	0
 650 0040 3F       		.uleb128 0x3f
 651 0041 19       		.uleb128 0x19
 652 0042 03       		.uleb128 0x3
 653 0043 0E       		.uleb128 0xe
 654 0044 3A       		.uleb128 0x3a
 655 0045 0B       		.uleb128 0xb
 656 0046 3B       		.uleb128 0x3b
 657 0047 0B       		.uleb128 0xb
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 25


 658 0048 27       		.uleb128 0x27
 659 0049 19       		.uleb128 0x19
 660 004a 11       		.uleb128 0x11
 661 004b 01       		.uleb128 0x1
 662 004c 12       		.uleb128 0x12
 663 004d 06       		.uleb128 0x6
 664 004e 40       		.uleb128 0x40
 665 004f 18       		.uleb128 0x18
 666 0050 9742     		.uleb128 0x2117
 667 0052 19       		.uleb128 0x19
 668 0053 00       		.byte	0
 669 0054 00       		.byte	0
 670 0055 07       		.uleb128 0x7
 671 0056 2E       		.uleb128 0x2e
 672 0057 00       		.byte	0
 673 0058 3F       		.uleb128 0x3f
 674 0059 19       		.uleb128 0x19
 675 005a 03       		.uleb128 0x3
 676 005b 0E       		.uleb128 0xe
 677 005c 3A       		.uleb128 0x3a
 678 005d 0B       		.uleb128 0xb
 679 005e 3B       		.uleb128 0x3b
 680 005f 05       		.uleb128 0x5
 681 0060 27       		.uleb128 0x27
 682 0061 19       		.uleb128 0x19
 683 0062 11       		.uleb128 0x11
 684 0063 01       		.uleb128 0x1
 685 0064 12       		.uleb128 0x12
 686 0065 06       		.uleb128 0x6
 687 0066 40       		.uleb128 0x40
 688 0067 18       		.uleb128 0x18
 689 0068 9742     		.uleb128 0x2117
 690 006a 19       		.uleb128 0x19
 691 006b 00       		.byte	0
 692 006c 00       		.byte	0
 693 006d 08       		.uleb128 0x8
 694 006e 2E       		.uleb128 0x2e
 695 006f 01       		.byte	0x1
 696 0070 3F       		.uleb128 0x3f
 697 0071 19       		.uleb128 0x19
 698 0072 03       		.uleb128 0x3
 699 0073 0E       		.uleb128 0xe
 700 0074 3A       		.uleb128 0x3a
 701 0075 0B       		.uleb128 0xb
 702 0076 3B       		.uleb128 0x3b
 703 0077 05       		.uleb128 0x5
 704 0078 27       		.uleb128 0x27
 705 0079 19       		.uleb128 0x19
 706 007a 11       		.uleb128 0x11
 707 007b 01       		.uleb128 0x1
 708 007c 12       		.uleb128 0x12
 709 007d 06       		.uleb128 0x6
 710 007e 40       		.uleb128 0x40
 711 007f 18       		.uleb128 0x18
 712 0080 9742     		.uleb128 0x2117
 713 0082 19       		.uleb128 0x19
 714 0083 01       		.uleb128 0x1
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 26


 715 0084 13       		.uleb128 0x13
 716 0085 00       		.byte	0
 717 0086 00       		.byte	0
 718 0087 09       		.uleb128 0x9
 719 0088 05       		.uleb128 0x5
 720 0089 00       		.byte	0
 721 008a 03       		.uleb128 0x3
 722 008b 0E       		.uleb128 0xe
 723 008c 3A       		.uleb128 0x3a
 724 008d 0B       		.uleb128 0xb
 725 008e 3B       		.uleb128 0x3b
 726 008f 05       		.uleb128 0x5
 727 0090 49       		.uleb128 0x49
 728 0091 13       		.uleb128 0x13
 729 0092 02       		.uleb128 0x2
 730 0093 17       		.uleb128 0x17
 731 0094 00       		.byte	0
 732 0095 00       		.byte	0
 733 0096 0A       		.uleb128 0xa
 734 0097 34       		.uleb128 0x34
 735 0098 00       		.byte	0
 736 0099 03       		.uleb128 0x3
 737 009a 0E       		.uleb128 0xe
 738 009b 3A       		.uleb128 0x3a
 739 009c 0B       		.uleb128 0xb
 740 009d 3B       		.uleb128 0x3b
 741 009e 05       		.uleb128 0x5
 742 009f 49       		.uleb128 0x49
 743 00a0 13       		.uleb128 0x13
 744 00a1 02       		.uleb128 0x2
 745 00a2 17       		.uleb128 0x17
 746 00a3 00       		.byte	0
 747 00a4 00       		.byte	0
 748 00a5 0B       		.uleb128 0xb
 749 00a6 898201   		.uleb128 0x4109
 750 00a9 00       		.byte	0
 751 00aa 11       		.uleb128 0x11
 752 00ab 01       		.uleb128 0x1
 753 00ac 31       		.uleb128 0x31
 754 00ad 13       		.uleb128 0x13
 755 00ae 00       		.byte	0
 756 00af 00       		.byte	0
 757 00b0 0C       		.uleb128 0xc
 758 00b1 0F       		.uleb128 0xf
 759 00b2 00       		.byte	0
 760 00b3 0B       		.uleb128 0xb
 761 00b4 0B       		.uleb128 0xb
 762 00b5 49       		.uleb128 0x49
 763 00b6 13       		.uleb128 0x13
 764 00b7 00       		.byte	0
 765 00b8 00       		.byte	0
 766 00b9 0D       		.uleb128 0xd
 767 00ba 26       		.uleb128 0x26
 768 00bb 00       		.byte	0
 769 00bc 49       		.uleb128 0x49
 770 00bd 13       		.uleb128 0x13
 771 00be 00       		.byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 27


 772 00bf 00       		.byte	0
 773 00c0 0E       		.uleb128 0xe
 774 00c1 898201   		.uleb128 0x4109
 775 00c4 01       		.byte	0x1
 776 00c5 11       		.uleb128 0x11
 777 00c6 01       		.uleb128 0x1
 778 00c7 31       		.uleb128 0x31
 779 00c8 13       		.uleb128 0x13
 780 00c9 01       		.uleb128 0x1
 781 00ca 13       		.uleb128 0x13
 782 00cb 00       		.byte	0
 783 00cc 00       		.byte	0
 784 00cd 0F       		.uleb128 0xf
 785 00ce 8A8201   		.uleb128 0x410a
 786 00d1 00       		.byte	0
 787 00d2 02       		.uleb128 0x2
 788 00d3 18       		.uleb128 0x18
 789 00d4 9142     		.uleb128 0x2111
 790 00d6 18       		.uleb128 0x18
 791 00d7 00       		.byte	0
 792 00d8 00       		.byte	0
 793 00d9 10       		.uleb128 0x10
 794 00da 898201   		.uleb128 0x4109
 795 00dd 01       		.byte	0x1
 796 00de 11       		.uleb128 0x11
 797 00df 01       		.uleb128 0x1
 798 00e0 31       		.uleb128 0x31
 799 00e1 13       		.uleb128 0x13
 800 00e2 00       		.byte	0
 801 00e3 00       		.byte	0
 802 00e4 11       		.uleb128 0x11
 803 00e5 34       		.uleb128 0x34
 804 00e6 00       		.byte	0
 805 00e7 03       		.uleb128 0x3
 806 00e8 0E       		.uleb128 0xe
 807 00e9 3A       		.uleb128 0x3a
 808 00ea 0B       		.uleb128 0xb
 809 00eb 3B       		.uleb128 0x3b
 810 00ec 0B       		.uleb128 0xb
 811 00ed 49       		.uleb128 0x49
 812 00ee 13       		.uleb128 0x13
 813 00ef 3F       		.uleb128 0x3f
 814 00f0 19       		.uleb128 0x19
 815 00f1 3C       		.uleb128 0x3c
 816 00f2 19       		.uleb128 0x19
 817 00f3 00       		.byte	0
 818 00f4 00       		.byte	0
 819 00f5 12       		.uleb128 0x12
 820 00f6 2E       		.uleb128 0x2e
 821 00f7 01       		.byte	0x1
 822 00f8 3F       		.uleb128 0x3f
 823 00f9 19       		.uleb128 0x19
 824 00fa 03       		.uleb128 0x3
 825 00fb 0E       		.uleb128 0xe
 826 00fc 3A       		.uleb128 0x3a
 827 00fd 0B       		.uleb128 0xb
 828 00fe 3B       		.uleb128 0x3b
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 28


 829 00ff 05       		.uleb128 0x5
 830 0100 27       		.uleb128 0x27
 831 0101 19       		.uleb128 0x19
 832 0102 3C       		.uleb128 0x3c
 833 0103 19       		.uleb128 0x19
 834 0104 00       		.byte	0
 835 0105 00       		.byte	0
 836 0106 13       		.uleb128 0x13
 837 0107 05       		.uleb128 0x5
 838 0108 00       		.byte	0
 839 0109 49       		.uleb128 0x49
 840 010a 13       		.uleb128 0x13
 841 010b 00       		.byte	0
 842 010c 00       		.byte	0
 843 010d 00       		.byte	0
 844              		.section	.debug_loc,"",%progbits
 845              	.Ldebug_loc0:
 846              	.LLST0:
 847 0000 00000000 		.4byte	.LVL0
 848 0004 0A000000 		.4byte	.LVL3
 849 0008 0100     		.2byte	0x1
 850 000a 50       		.byte	0x50
 851 000b 0A000000 		.4byte	.LVL3
 852 000f 14000000 		.4byte	.LFE3
 853 0013 0400     		.2byte	0x4
 854 0015 F3       		.byte	0xf3
 855 0016 01       		.uleb128 0x1
 856 0017 50       		.byte	0x50
 857 0018 9F       		.byte	0x9f
 858 0019 00000000 		.4byte	0
 859 001d 00000000 		.4byte	0
 860              	.LLST1:
 861 0021 04000000 		.4byte	.LVL1
 862 0025 0C000000 		.4byte	.LVL4
 863 0029 0100     		.2byte	0x1
 864 002b 53       		.byte	0x53
 865 002c 0C000000 		.4byte	.LVL4
 866 0030 14000000 		.4byte	.LFE3
 867 0034 0100     		.2byte	0x1
 868 0036 50       		.byte	0x50
 869 0037 00000000 		.4byte	0
 870 003b 00000000 		.4byte	0
 871              	.LLST2:
 872 003f 00000000 		.4byte	.LVL5
 873 0043 0A000000 		.4byte	.LVL8
 874 0047 0100     		.2byte	0x1
 875 0049 50       		.byte	0x50
 876 004a 0A000000 		.4byte	.LVL8
 877 004e 18000000 		.4byte	.LFE4
 878 0052 0400     		.2byte	0x4
 879 0054 F3       		.byte	0xf3
 880 0055 01       		.uleb128 0x1
 881 0056 50       		.byte	0x50
 882 0057 9F       		.byte	0x9f
 883 0058 00000000 		.4byte	0
 884 005c 00000000 		.4byte	0
 885              	.LLST3:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 29


 886 0060 04000000 		.4byte	.LVL6
 887 0064 08000000 		.4byte	.LVL7
 888 0068 0100     		.2byte	0x1
 889 006a 51       		.byte	0x51
 890 006b 08000000 		.4byte	.LVL7
 891 006f 0C000000 		.4byte	.LVL9
 892 0073 0100     		.2byte	0x1
 893 0075 53       		.byte	0x53
 894 0076 0C000000 		.4byte	.LVL9
 895 007a 18000000 		.4byte	.LFE4
 896 007e 0100     		.2byte	0x1
 897 0080 50       		.byte	0x50
 898 0081 00000000 		.4byte	0
 899 0085 00000000 		.4byte	0
 900              	.LLST4:
 901 0089 00000000 		.4byte	.LVL10
 902 008d 08000000 		.4byte	.LVL12
 903 0091 0100     		.2byte	0x1
 904 0093 50       		.byte	0x50
 905 0094 08000000 		.4byte	.LVL12
 906 0098 14000000 		.4byte	.LVL16
 907 009c 0100     		.2byte	0x1
 908 009e 55       		.byte	0x55
 909 009f 14000000 		.4byte	.LVL16
 910 00a3 16000000 		.4byte	.LFE5
 911 00a7 0400     		.2byte	0x4
 912 00a9 F3       		.byte	0xf3
 913 00aa 01       		.uleb128 0x1
 914 00ab 50       		.byte	0x50
 915 00ac 9F       		.byte	0x9f
 916 00ad 00000000 		.4byte	0
 917 00b1 00000000 		.4byte	0
 918              	.LLST5:
 919 00b5 04000000 		.4byte	.LVL11
 920 00b9 08000000 		.4byte	.LVL12
 921 00bd 0200     		.2byte	0x2
 922 00bf 30       		.byte	0x30
 923 00c0 9F       		.byte	0x9f
 924 00c1 08000000 		.4byte	.LVL12
 925 00c5 14000000 		.4byte	.LVL15
 926 00c9 0100     		.2byte	0x1
 927 00cb 54       		.byte	0x54
 928 00cc 00000000 		.4byte	0
 929 00d0 00000000 		.4byte	0
 930              	.LLST6:
 931 00d4 00000000 		.4byte	.LVL17
 932 00d8 05000000 		.4byte	.LVL18-1
 933 00dc 0100     		.2byte	0x1
 934 00de 50       		.byte	0x50
 935 00df 05000000 		.4byte	.LVL18-1
 936 00e3 14000000 		.4byte	.LFE6
 937 00e7 0400     		.2byte	0x4
 938 00e9 F3       		.byte	0xf3
 939 00ea 01       		.uleb128 0x1
 940 00eb 50       		.byte	0x50
 941 00ec 9F       		.byte	0x9f
 942 00ed 00000000 		.4byte	0
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 30


 943 00f1 00000000 		.4byte	0
 944              		.section	.debug_aranges,"",%progbits
 945 0000 4C000000 		.4byte	0x4c
 946 0004 0200     		.2byte	0x2
 947 0006 00000000 		.4byte	.Ldebug_info0
 948 000a 04       		.byte	0x4
 949 000b 00       		.byte	0
 950 000c 0000     		.2byte	0
 951 000e 0000     		.2byte	0
 952 0010 00000000 		.4byte	.LFB0
 953 0014 98000000 		.4byte	.LFE0-.LFB0
 954 0018 00000000 		.4byte	.LFB1
 955 001c 24000000 		.4byte	.LFE1-.LFB1
 956 0020 00000000 		.4byte	.LFB2
 957 0024 28000000 		.4byte	.LFE2-.LFB2
 958 0028 00000000 		.4byte	.LFB3
 959 002c 14000000 		.4byte	.LFE3-.LFB3
 960 0030 00000000 		.4byte	.LFB4
 961 0034 18000000 		.4byte	.LFE4-.LFB4
 962 0038 00000000 		.4byte	.LFB5
 963 003c 16000000 		.4byte	.LFE5-.LFB5
 964 0040 00000000 		.4byte	.LFB6
 965 0044 14000000 		.4byte	.LFE6-.LFB6
 966 0048 00000000 		.4byte	0
 967 004c 00000000 		.4byte	0
 968              		.section	.debug_ranges,"",%progbits
 969              	.Ldebug_ranges0:
 970 0000 00000000 		.4byte	.LFB0
 971 0004 98000000 		.4byte	.LFE0
 972 0008 00000000 		.4byte	.LFB1
 973 000c 24000000 		.4byte	.LFE1
 974 0010 00000000 		.4byte	.LFB2
 975 0014 28000000 		.4byte	.LFE2
 976 0018 00000000 		.4byte	.LFB3
 977 001c 14000000 		.4byte	.LFE3
 978 0020 00000000 		.4byte	.LFB4
 979 0024 18000000 		.4byte	.LFE4
 980 0028 00000000 		.4byte	.LFB5
 981 002c 16000000 		.4byte	.LFE5
 982 0030 00000000 		.4byte	.LFB6
 983 0034 14000000 		.4byte	.LFE6
 984 0038 00000000 		.4byte	0
 985 003c 00000000 		.4byte	0
 986              		.section	.debug_line,"",%progbits
 987              	.Ldebug_line0:
 988 0000 14010000 		.section	.debug_str,"MS",%progbits,1
 988      02006700 
 988      00000201 
 988      FB0E0D00 
 988      01010101 
 989              	.LASF6:
 990 0000 6C6F6E67 		.ascii	"long long int\000"
 990      206C6F6E 
 990      6720696E 
 990      7400
 991              	.LASF15:
 992 000e 72656733 		.ascii	"reg32\000"
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 31


 992      3200
 993              	.LASF31:
 994 0014 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_UART.c\000"
 994      72617465 
 994      645F536F 
 994      75726365 
 994      5C50536F 
 995              	.LASF33:
 996 0037 55415254 		.ascii	"UART_IntrTxMask\000"
 996      5F496E74 
 996      7254784D 
 996      61736B00 
 997              	.LASF21:
 998 0047 55415254 		.ascii	"UART_UartSetRxAddressMask\000"
 998      5F556172 
 998      74536574 
 998      52784164 
 998      64726573 
 999              	.LASF34:
 1000 0061 55415254 		.ascii	"UART_SpiUartWriteTxData\000"
 1000      5F537069 
 1000      55617274 
 1000      57726974 
 1000      65547844 
 1001              	.LASF26:
 1002 0079 73747269 		.ascii	"string\000"
 1002      6E6700
 1003              	.LASF25:
 1004 0080 55415254 		.ascii	"UART_UartPutString\000"
 1004      5F556172 
 1004      74507574 
 1004      53747269 
 1004      6E6700
 1005              	.LASF11:
 1006 0093 666C6F61 		.ascii	"float\000"
 1006      7400
 1007              	.LASF1:
 1008 0099 756E7369 		.ascii	"unsigned char\000"
 1008      676E6564 
 1008      20636861 
 1008      7200
 1009              	.LASF13:
 1010 00a7 63686172 		.ascii	"char8\000"
 1010      3800
 1011              	.LASF18:
 1012 00ad 55415254 		.ascii	"UART_UartPostEnable\000"
 1012      5F556172 
 1012      74506F73 
 1012      74456E61 
 1012      626C6500 
 1013              	.LASF5:
 1014 00c1 6C6F6E67 		.ascii	"long unsigned int\000"
 1014      20756E73 
 1014      69676E65 
 1014      6420696E 
 1014      7400
 1015              	.LASF19:
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 32


 1016 00d3 55415254 		.ascii	"UART_UartStop\000"
 1016      5F556172 
 1016      7453746F 
 1016      7000
 1017              	.LASF3:
 1018 00e1 73686F72 		.ascii	"short unsigned int\000"
 1018      7420756E 
 1018      7369676E 
 1018      65642069 
 1018      6E7400
 1019              	.LASF28:
 1020 00f4 55415254 		.ascii	"UART_UartPutCRLF\000"
 1020      5F556172 
 1020      74507574 
 1020      43524C46 
 1020      00
 1021              	.LASF23:
 1022 0105 61646472 		.ascii	"addressMask\000"
 1022      6573734D 
 1022      61736B00 
 1023              	.LASF12:
 1024 0111 646F7562 		.ascii	"double\000"
 1024      6C6500
 1025              	.LASF20:
 1026 0118 55415254 		.ascii	"UART_UartSetRxAddress\000"
 1026      5F556172 
 1026      74536574 
 1026      52784164 
 1026      64726573 
 1027              	.LASF9:
 1028 012e 75696E74 		.ascii	"uint16\000"
 1028      313600
 1029              	.LASF10:
 1030 0135 75696E74 		.ascii	"uint32\000"
 1030      333200
 1031              	.LASF8:
 1032 013c 756E7369 		.ascii	"unsigned int\000"
 1032      676E6564 
 1032      20696E74 
 1032      00
 1033              	.LASF17:
 1034 0149 55415254 		.ascii	"UART_UartInit\000"
 1034      5F556172 
 1034      74496E69 
 1034      7400
 1035              	.LASF22:
 1036 0157 61646472 		.ascii	"address\000"
 1036      65737300 
 1037              	.LASF7:
 1038 015f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1038      206C6F6E 
 1038      6720756E 
 1038      7369676E 
 1038      65642069 
 1039              	.LASF27:
 1040 0176 62756649 		.ascii	"bufIndex\000"
 1040      6E646578 
ARM GAS  C:\Users\a85495\AppData\Local\Temp\ccrOw3ee.s 			page 33


 1040      00
 1041              	.LASF16:
 1042 017f 73697A65 		.ascii	"sizetype\000"
 1042      74797065 
 1042      00
 1043              	.LASF29:
 1044 0188 74784461 		.ascii	"txDataByte\000"
 1044      74614279 
 1044      746500
 1045              	.LASF14:
 1046 0193 63686172 		.ascii	"char\000"
 1046      00
 1047              	.LASF30:
 1048 0198 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1048      4320342E 
 1048      392E3320 
 1048      32303135 
 1048      30333033 
 1049 01cb 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1049      20726576 
 1049      6973696F 
 1049      6E203232 
 1049      31323230 
 1050 01fe 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1050      66756E63 
 1050      74696F6E 
 1050      2D736563 
 1050      74696F6E 
 1051              	.LASF2:
 1052 0226 73686F72 		.ascii	"short int\000"
 1052      7420696E 
 1052      7400
 1053              	.LASF4:
 1054 0230 6C6F6E67 		.ascii	"long int\000"
 1054      20696E74 
 1054      00
 1055              	.LASF24:
 1056 0239 6D617463 		.ascii	"matchReg\000"
 1056      68526567 
 1056      00
 1057              	.LASF32:
 1058 0242 433A5C55 		.ascii	"C:\\Users\\a85495\\Desktop\\PSoC-Quadcopter\\Sensor"
 1058      73657273 
 1058      5C613835 
 1058      3439355C 
 1058      4465736B 
 1059 0270 735C5365 		.ascii	"s\\Sensor Test\\Base Station.cydsn\000"
 1059      6E736F72 
 1059      20546573 
 1059      745C4261 
 1059      73652053 
 1060              	.LASF0:
 1061 0291 7369676E 		.ascii	"signed char\000"
 1061      65642063 
 1061      68617200 
 1062              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
